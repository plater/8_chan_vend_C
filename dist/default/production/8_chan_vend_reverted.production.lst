

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 16 11:17:39 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAMl,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	dabs	1,0x3,1,_chanlink1
   134                           	dabs	1,0xA,1,_chanlink8
   135                           	dabs	1,0x9,1,_chanlink7
   136                           	dabs	1,0x8,1,_chanlink6
   137                           	dabs	1,0x7,1,_chanlink5
   138                           	dabs	1,0x6,1,_chanlink4
   139                           	dabs	1,0x5,1,_chanlink3
   140                           	dabs	1,0x4,1,_chanlink2
   141  0000                     
   142                           ; Version 2.05
   143                           ; Generated 20/12/2018 GMT
   144                           ; 
   145                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   146                           ; All rights reserved.
   147                           ; 
   148                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   149                           ; 
   150                           ; Redistribution and use in source and binary forms, with or without modification, are
   151                           ; permitted provided that the following conditions are met:
   152                           ; 
   153                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   154                           ;        conditions and the following disclaimer.
   155                           ; 
   156                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   157                           ;        of conditions and the following disclaimer in the documentation and/or other
   158                           ;        materials provided with the distribution.
   159                           ; 
   160                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   161                           ;        software without specific prior written permission.
   162                           ; 
   163                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   164                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   165                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   166                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   167                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   168                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   169                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   170                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   171                           ; 
   172                           ; 
   173                           ; Code-generator required, PIC18F47K40 Definitions
   174                           ; 
   175                           ; SFR Addresses
   176  0000                     
   177                           	psect	idataCOMRAMl
   178  0122DA                     __pidataCOMRAMl:
   179                           	opt callstack 0
   180                           
   181                           ;initializer for _hopercount
   182  0122DA  03                 	db	3
   183                           
   184                           	psect	idataCOMRAMh
   185  0122DB                     __pidataCOMRAMh:
   186                           	opt callstack 0
   187                           
   188                           ;initializer for _notenum
   189  0122DB  FF                 	db	255
   190                           
   191                           	psect	mediumconst
   192  00FA78                     __pmediumconst:
   193                           	opt callstack 0
   194  00FA78  00                 	db	0
   195  00FA79                     _chanlinkmsg:
   196                           	opt callstack 0
   197  00FA79  50                 	db	80
   198  00FA7A  75                 	db	117
   199  00FA7B  73                 	db	115
   200  00FA7C  68                 	db	104
   201  00FA7D  20                 	db	32
   202  00FA7E  42                 	db	66
   203  00FA7F  75                 	db	117
   204  00FA80  74                 	db	116
   205  00FA81  74                 	db	116
   206  00FA82  6F                 	db	111
   207  00FA83  6E                 	db	110
   208  00FA84  20                 	db	32
   209  00FA85  74                 	db	116
   210  00FA86  6F                 	db	111
   211  00FA87  20                 	db	32
   212  00FA88  4C                 	db	76
   213  00FA89  69                 	db	105
   214  00FA8A  6E                 	db	110
   215  00FA8B  6B                 	db	107
   216  00FA8C  20                 	db	32
   217  00FA8D  50                 	db	80
   218  00FA8E  75                 	db	117
   219  00FA8F  73                 	db	115
   220  00FA90  68                 	db	104
   221  00FA91  20                 	db	32
   222  00FA92  61                 	db	97
   223  00FA93  67                 	db	103
   224  00FA94  61                 	db	97
   225  00FA95  69                 	db	105
   226  00FA96  6E                 	db	110
   227  00FA97  20                 	db	32
   228  00FA98  74                 	db	116
   229  00FA99  6F                 	db	111
   230  00FA9A  20                 	db	32
   231  00FA9B  55                 	db	85
   232  00FA9C  6E                 	db	110
   233  00FA9D  6C                 	db	108
   234  00FA9E  69                 	db	105
   235  00FA9F  6E                 	db	110
   236  00FAA0  6B                 	db	107
   237  00FAA1  50                 	db	80
   238  00FAA2  75                 	db	117
   239  00FAA3  73                 	db	115
   240  00FAA4  68                 	db	104
   241  00FAA5  20                 	db	32
   242  00FAA6  53                 	db	83
   243  00FAA7  65                 	db	101
   244  00FAA8  72                 	db	114
   245  00FAA9  76                 	db	118
   246  00FAAA  69                 	db	105
   247  00FAAB  63                 	db	99
   248  00FAAC  65                 	db	101
   249  00FAAD  20                 	db	32
   250  00FAAE  74                 	db	116
   251  00FAAF  6F                 	db	111
   252  00FAB0  20                 	db	32
   253  00FAB1  45                 	db	69
   254  00FAB2  78                 	db	120
   255  00FAB3  69                 	db	105
   256  00FAB4  74                 	db	116
   257  00FAB5  00                 	db	0
   258  00FAB6                     __end_of_chanlinkmsg:
   259                           	opt callstack 0
   260  00FAB6                     _motimemsg:
   261                           	opt callstack 0
   262  00FAB6  20                 	db	32
   263  00FAB7  50                 	db	80
   264  00FAB8  72                 	db	114
   265  00FAB9  65                 	db	101
   266  00FABA  73                 	db	115
   267  00FABB  73                 	db	115
   268  00FABC  20                 	db	32
   269  00FABD  43                 	db	67
   270  00FABE  68                 	db	104
   271  00FABF  61                 	db	97
   272  00FAC0  6E                 	db	110
   273  00FAC1  6E                 	db	110
   274  00FAC2  65                 	db	101
   275  00FAC3  6C                 	db	108
   276  00FAC4  20                 	db	32
   277  00FAC5  56                 	db	86
   278  00FAC6  65                 	db	101
   279  00FAC7  6E                 	db	110
   280  00FAC8  64                 	db	100
   281  00FAC9  20                 	db	32
   282  00FACA  42                 	db	66
   283  00FACB  75                 	db	117
   284  00FACC  74                 	db	116
   285  00FACD  74                 	db	116
   286  00FACE  6F                 	db	111
   287  00FACF  6E                 	db	110
   288  00FAD0  20                 	db	32
   289  00FAD1  6F                 	db	111
   290  00FAD2  72                 	db	114
   291  00FAD3  20                 	db	32
   292  00FAD4  50                 	db	80
   293  00FAD5  72                 	db	114
   294  00FAD6  65                 	db	101
   295  00FAD7  73                 	db	115
   296  00FAD8  73                 	db	115
   297  00FAD9  20                 	db	32
   298  00FADA  20                 	db	32
   299  00FADB  20                 	db	32
   300  00FADC  20                 	db	32
   301  00FADD  20                 	db	32
   302  00FADE  20                 	db	32
   303  00FADF  20                 	db	32
   304  00FAE0  53                 	db	83
   305  00FAE1  65                 	db	101
   306  00FAE2  72                 	db	114
   307  00FAE3  76                 	db	118
   308  00FAE4  69                 	db	105
   309  00FAE5  63                 	db	99
   310  00FAE6  65                 	db	101
   311  00FAE7  20                 	db	32
   312  00FAE8  74                 	db	116
   313  00FAE9  6F                 	db	111
   314  00FAEA  20                 	db	32
   315  00FAEB  45                 	db	69
   316  00FAEC  78                 	db	120
   317  00FAED  69                 	db	105
   318  00FAEE  74                 	db	116
   319  00FAEF  00                 	db	0
   320  00FAF0                     __end_of_motimemsg:
   321                           	opt callstack 0
   322  00FAF0                     _sensoffms:
   323                           	opt callstack 0
   324  00FAF0  48                 	db	72
   325  00FAF1  6F                 	db	111
   326  00FAF2  6C                 	db	108
   327  00FAF3  64                 	db	100
   328  00FAF4  20                 	db	32
   329  00FAF5  63                 	db	99
   330  00FAF6  68                 	db	104
   331  00FAF7  61                 	db	97
   332  00FAF8  6E                 	db	110
   333  00FAF9  6E                 	db	110
   334  00FAFA  65                 	db	101
   335  00FAFB  6C                 	db	108
   336  00FAFC  20                 	db	32
   337  00FAFD  62                 	db	98
   338  00FAFE  75                 	db	117
   339  00FAFF  74                 	db	116
   340  00FB00  74                 	db	116
   341  00FB01  6F                 	db	111
   342  00FB02  6E                 	db	110
   343  00FB03  20                 	db	32
   344  00FB04  6F                 	db	111
   345  00FB05  72                 	db	114
   346  00FB06  20                 	db	32
   347  00FB07  50                 	db	80
   348  00FB08  75                 	db	117
   349  00FB09  73                 	db	115
   350  00FB0A  68                 	db	104
   351  00FB0B  20                 	db	32
   352  00FB0C  73                 	db	115
   353  00FB0D  65                 	db	101
   354  00FB0E  72                 	db	114
   355  00FB0F  76                 	db	118
   356  00FB10  69                 	db	105
   357  00FB11  63                 	db	99
   358  00FB12  65                 	db	101
   359  00FB13  20                 	db	32
   360  00FB14  74                 	db	116
   361  00FB15  6F                 	db	111
   362  00FB16  20                 	db	32
   363  00FB17  20                 	db	32
   364  00FB18  65                 	db	101
   365  00FB19  78                 	db	120
   366  00FB1A  69                 	db	105
   367  00FB1B  74                 	db	116
   368  00FB1C  00                 	db	0
   369  00FB1D                     __end_of_sensoffms:
   370                           	opt callstack 0
   371  00FB1D                     _credclr:
   372                           	opt callstack 0
   373  00FB1D  50                 	db	80
   374  00FB1E  75                 	db	117
   375  00FB1F  73                 	db	115
   376  00FB20  68                 	db	104
   377  00FB21  20                 	db	32
   378  00FB22  62                 	db	98
   379  00FB23  75                 	db	117
   380  00FB24  74                 	db	116
   381  00FB25  74                 	db	116
   382  00FB26  6F                 	db	111
   383  00FB27  6E                 	db	110
   384  00FB28  20                 	db	32
   385  00FB29  31                 	db	49
   386  00FB2A  20                 	db	32
   387  00FB2B  74                 	db	116
   388  00FB2C  6F                 	db	111
   389  00FB2D  20                 	db	32
   390  00FB2E  63                 	db	99
   391  00FB2F  6C                 	db	108
   392  00FB30  65                 	db	101
   393  00FB31  61                 	db	97
   394  00FB32  72                 	db	114
   395  00FB33  20                 	db	32
   396  00FB34  63                 	db	99
   397  00FB35  72                 	db	114
   398  00FB36  65                 	db	101
   399  00FB37  64                 	db	100
   400  00FB38  69                 	db	105
   401  00FB39  74                 	db	116
   402  00FB3A  73                 	db	115
   403  00FB3B  20                 	db	32
   404  00FB3C  20                 	db	32
   405  00FB3D  20                 	db	32
   406  00FB3E  61                 	db	97
   407  00FB3F  6E                 	db	110
   408  00FB40  64                 	db	100
   409  00FB41  20                 	db	32
   410  00FB42  65                 	db	101
   411  00FB43  78                 	db	120
   412  00FB44  69                 	db	105
   413  00FB45  74                 	db	116
   414  00FB46  00                 	db	0
   415  00FB47                     __end_of_credclr:
   416                           	opt callstack 0
   417  00FB47                     _settimemsg:
   418                           	opt callstack 0
   419  00FB47  50                 	db	80
   420  00FB48  72                 	db	114
   421  00FB49  65                 	db	101
   422  00FB4A  73                 	db	115
   423  00FB4B  73                 	db	115
   424  00FB4C  20                 	db	32
   425  00FB4D  31                 	db	49
   426  00FB4E  20                 	db	32
   427  00FB4F  3D                 	db	61
   428  00FB50  20                 	db	32
   429  00FB51  2B                 	db	43
   430  00FB52  20                 	db	32
   431  00FB53  6F                 	db	111
   432  00FB54  72                 	db	114
   433  00FB55  20                 	db	32
   434  00FB56  32                 	db	50
   435  00FB57  20                 	db	32
   436  00FB58  3D                 	db	61
   437  00FB59  20                 	db	32
   438  00FB5A  2D                 	db	45
   439  00FB5B  20                 	db	32
   440  00FB5C  20                 	db	32
   441  00FB5D  50                 	db	80
   442  00FB5E  72                 	db	114
   443  00FB5F  65                 	db	101
   444  00FB60  73                 	db	115
   445  00FB61  73                 	db	115
   446  00FB62  20                 	db	32
   447  00FB63  38                 	db	56
   448  00FB64  20                 	db	32
   449  00FB65  74                 	db	116
   450  00FB66  6F                 	db	111
   451  00FB67  20                 	db	32
   452  00FB68  45                 	db	69
   453  00FB69  78                 	db	120
   454  00FB6A  69                 	db	105
   455  00FB6B  74                 	db	116
   456  00FB6C  00                 	db	0
   457  00FB6D                     __end_of_settimemsg:
   458                           	opt callstack 0
   459  00FB6D                     _vendtest:
   460                           	opt callstack 0
   461  00FB6D  20                 	db	32
   462  00FB6E  50                 	db	80
   463  00FB6F  75                 	db	117
   464  00FB70  73                 	db	115
   465  00FB71  68                 	db	104
   466  00FB72  20                 	db	32
   467  00FB73  62                 	db	98
   468  00FB74  75                 	db	117
   469  00FB75  74                 	db	116
   470  00FB76  74                 	db	116
   471  00FB77  6F                 	db	111
   472  00FB78  6E                 	db	110
   473  00FB79  20                 	db	32
   474  00FB7A  74                 	db	116
   475  00FB7B  6F                 	db	111
   476  00FB7C  20                 	db	32
   477  00FB7D  20                 	db	32
   478  00FB7E  20                 	db	32
   479  00FB7F  20                 	db	32
   480  00FB80  20                 	db	32
   481  00FB81  76                 	db	118
   482  00FB82  65                 	db	101
   483  00FB83  6E                 	db	110
   484  00FB84  64                 	db	100
   485  00FB85  00                 	db	0
   486  00FB86                     __end_of_vendtest:
   487                           	opt callstack 0
   488  00FB86                     _priceexit:
   489                           	opt callstack 0
   490  00FB86  50                 	db	80
   491  00FB87  72                 	db	114
   492  00FB88  65                 	db	101
   493  00FB89  73                 	db	115
   494  00FB8A  73                 	db	115
   495  00FB8B  20                 	db	32
   496  00FB8C  73                 	db	115
   497  00FB8D  65                 	db	101
   498  00FB8E  72                 	db	114
   499  00FB8F  76                 	db	118
   500  00FB90  69                 	db	105
   501  00FB91  63                 	db	99
   502  00FB92  65                 	db	101
   503  00FB93  20                 	db	32
   504  00FB94  74                 	db	116
   505  00FB95  6F                 	db	111
   506  00FB96  20                 	db	32
   507  00FB97  65                 	db	101
   508  00FB98  78                 	db	120
   509  00FB99  69                 	db	105
   510  00FB9A  74                 	db	116
   511  00FB9B  00                 	db	0
   512  00FB9C                     __end_of_priceexit:
   513                           	opt callstack 0
   514  00FB9C                     _inithop:
   515                           	opt callstack 0
   516  00FB9C  20                 	db	32
   517  00FB9D  20                 	db	32
   518  00FB9E  49                 	db	73
   519  00FB9F  6E                 	db	110
   520  00FBA0  69                 	db	105
   521  00FBA1  74                 	db	116
   522  00FBA2  69                 	db	105
   523  00FBA3  61                 	db	97
   524  00FBA4  6C                 	db	108
   525  00FBA5  69                 	db	105
   526  00FBA6  7A                 	db	122
   527  00FBA7  65                 	db	101
   528  00FBA8  20                 	db	32
   529  00FBA9  48                 	db	72
   530  00FBAA  6F                 	db	111
   531  00FBAB  70                 	db	112
   532  00FBAC  70                 	db	112
   533  00FBAD  65                 	db	101
   534  00FBAE  72                 	db	114
   535  00FBAF  00                 	db	0
   536  00FBB0                     __end_of_inithop:
   537                           	opt callstack 0
   538  00FBB0                     _senset:
   539                           	opt callstack 0
   540  00FBB0  20                 	db	32
   541  00FBB1  20                 	db	32
   542  00FBB2  53                 	db	83
   543  00FBB3  65                 	db	101
   544  00FBB4  74                 	db	116
   545  00FBB5  75                 	db	117
   546  00FBB6  70                 	db	112
   547  00FBB7  20                 	db	32
   548  00FBB8  53                 	db	83
   549  00FBB9  65                 	db	101
   550  00FBBA  6E                 	db	110
   551  00FBBB  73                 	db	115
   552  00FBBC  6F                 	db	111
   553  00FBBD  72                 	db	114
   554  00FBBE  00                 	db	0
   555  00FBBF                     __end_of_senset:
   556                           	opt callstack 0
   557  00FBBF                     _notetest:
   558                           	opt callstack 0
   559  00FBBF  20                 	db	32
   560  00FBC0  20                 	db	32
   561  00FBC1  49                 	db	73
   562  00FBC2  6E                 	db	110
   563  00FBC3  73                 	db	115
   564  00FBC4  65                 	db	101
   565  00FBC5  72                 	db	114
   566  00FBC6  74                 	db	116
   567  00FBC7  20                 	db	32
   568  00FBC8  4E                 	db	78
   569  00FBC9  6F                 	db	111
   570  00FBCA  74                 	db	116
   571  00FBCB  65                 	db	101
   572  00FBCC  00                 	db	0
   573  00FBCD                     __end_of_notetest:
   574                           	opt callstack 0
   575  00FBCD                     _auditmsg:
   576                           	opt callstack 0
   577  00FBCD  20                 	db	32
   578  00FBCE  20                 	db	32
   579  00FBCF  41                 	db	65
   580  00FBD0  75                 	db	117
   581  00FBD1  64                 	db	100
   582  00FBD2  69                 	db	105
   583  00FBD3  74                 	db	116
   584  00FBD4  20                 	db	32
   585  00FBD5  4D                 	db	77
   586  00FBD6  6F                 	db	111
   587  00FBD7  64                 	db	100
   588  00FBD8  65                 	db	101
   589  00FBD9  00                 	db	0
   590  00FBDA                     __end_of_auditmsg:
   591                           	opt callstack 0
   592  00FBDA                     _pricemsg:
   593                           	opt callstack 0
   594  00FBDA  50                 	db	80
   595  00FBDB  72                 	db	114
   596  00FBDC  69                 	db	105
   597  00FBDD  63                 	db	99
   598  00FBDE  65                 	db	101
   599  00FBDF  20                 	db	32
   600  00FBE0  52                 	db	82
   601  00FBE1  00                 	db	0
   602  00FBE2                     __end_of_pricemsg:
   603                           	opt callstack 0
   604  00FBE2                     _clockdate:
   605                           	opt callstack 0
   606  00FBE2  44                 	db	68
   607  00FBE3  61                 	db	97
   608  00FBE4  74                 	db	116
   609  00FBE5  65                 	db	101
   610  00FBE6  20                 	db	32
   611  00FBE7  00                 	db	0
   612  00FBE8                     __end_of_clockdate:
   613                           	opt callstack 0
   614  00FBE8  002F               	dw	47
   615  00FBEA                     __end_of_hoperror:
   616                           	opt callstack 0
   617  00FBEA  002E               	dw	46
   618  00FBEC                     __end_of_nosentime:
   619                           	opt callstack 0
   620  00FBEC                     _chan8time:
   621                           	opt callstack 0
   622  00FBEC  002D               	dw	45
   623  00FBEE                     __end_of_chan8time:
   624                           	opt callstack 0
   625  00FBEE                     _chan7time:
   626                           	opt callstack 0
   627  00FBEE  002C               	dw	44
   628  00FBF0                     __end_of_chan7time:
   629                           	opt callstack 0
   630  00FBF0                     _chan6time:
   631                           	opt callstack 0
   632  00FBF0  002B               	dw	43
   633  00FBF2                     __end_of_chan6time:
   634                           	opt callstack 0
   635  00FBF2                     _chan5time:
   636                           	opt callstack 0
   637  00FBF2  002A               	dw	42
   638  00FBF4                     __end_of_chan5time:
   639                           	opt callstack 0
   640  00FBF4                     _chan4time:
   641                           	opt callstack 0
   642  00FBF4  0029               	dw	41
   643  00FBF6                     __end_of_chan4time:
   644                           	opt callstack 0
   645  00FBF6                     _chan3time:
   646                           	opt callstack 0
   647  00FBF6  0028               	dw	40
   648  00FBF8                     __end_of_chan3time:
   649                           	opt callstack 0
   650  00FBF8                     _chan2time:
   651                           	opt callstack 0
   652  00FBF8  0027               	dw	39
   653  00FBFA                     __end_of_chan2time:
   654                           	opt callstack 0
   655  00FBFA  0026               	dw	38
   656  00FBFC                     __end_of_chan1time:
   657                           	opt callstack 0
   658  00FBFC  0025               	dw	37
   659  00FBFE                     __end_of_sensorflags:
   660                           	opt callstack 0
   661  00FBFE                     _chan8linkbits:
   662                           	opt callstack 0
   663  00FBFE  0024               	dw	36
   664  00FC00                     __end_of_chan8linkbits:
   665                           	opt callstack 0
   666  00FC00                     _chan7linkbits:
   667                           	opt callstack 0
   668  00FC00  0023               	dw	35
   669  00FC02                     __end_of_chan7linkbits:
   670                           	opt callstack 0
   671  00FC02                     _chan6linkbits:
   672                           	opt callstack 0
   673  00FC02  0022               	dw	34
   674  00FC04                     __end_of_chan6linkbits:
   675                           	opt callstack 0
   676  00FC04                     _chan5linkbits:
   677                           	opt callstack 0
   678  00FC04  0021               	dw	33
   679  00FC06                     __end_of_chan5linkbits:
   680                           	opt callstack 0
   681  00FC06                     _chan4linkbits:
   682                           	opt callstack 0
   683  00FC06  0020               	dw	32
   684  00FC08                     __end_of_chan4linkbits:
   685                           	opt callstack 0
   686  00FC08                     _chan3linkbits:
   687                           	opt callstack 0
   688  00FC08  001F               	dw	31
   689  00FC0A                     __end_of_chan3linkbits:
   690                           	opt callstack 0
   691  00FC0A                     _chan2linkbits:
   692                           	opt callstack 0
   693  00FC0A  001E               	dw	30
   694  00FC0C                     __end_of_chan2linkbits:
   695                           	opt callstack 0
   696  00FC0C  001D               	dw	29
   697  00FC0E                     __end_of_chan1linkbits:
   698                           	opt callstack 0
   699  00FC0E  001C               	dw	28
   700  00FC10                     __end_of_hopcoin:
   701                           	opt callstack 0
   702  00FC10  001A               	dw	26
   703  00FC12                     __end_of_cashoutv:
   704                           	opt callstack 0
   705  00FC12  0019               	dw	25
   706  00FC14                     __end_of_sensval:
   707                           	opt callstack 0
   708  00FC14  0018               	dw	24
   709  00FC16                     __end_of_notebits:
   710                           	opt callstack 0
   711  00FC16  0017               	dw	23
   712  00FC18                     __end_of_venderrors:
   713                           	opt callstack 0
   714  00FC18  000F               	dw	15
   715  00FC1A                     __end_of_pricestore:
   716                           	opt callstack 0
   717  00FC1A  000C               	dw	12
   718  00FC1C                     __end_of_cashint:
   719                           	opt callstack 0
   720  00FC1C  0004               	dw	4
   721  00FC1E                     __end_of_vendstore:
   722                           	opt callstack 0
   723  00FC1E  0002               	dw	2
   724  00FC20                     __end_of_cashinv:
   725                           	opt callstack 0
   726  00FC20  0000               	dw	0
   727  00FC22                     __end_of_credmem:
   728                           	opt callstack 0
   729  00FC22                     _secondadd:
   730                           	opt callstack 0
   731  00FC22  1E46               	dw	7750
   732  00FC24                     __end_of_secondadd:
   733                           	opt callstack 0
   734  00FC24  0F23               	dw	3875
   735  00FC26                     __end_of_second_5:
   736                           	opt callstack 0
   737  00FC26  E1BA               	dw	57786
   738  00FC28                     __end_of_second1:
   739                           	opt callstack 0
   740  00FC28  FE                 	db	254
   741  00FC29                     __end_of_cc_poll:
   742                           	opt callstack 0
   743  00FC29  FD                 	db	253
   744  00FC2A                     __end_of_cc_adpoll:
   745                           	opt callstack 0
   746  00FC2A  F2                 	db	242
   747  00FC2B                     __end_of_cc_serial:
   748                           	opt callstack 0
   749  00FC2B                     _cc_newpin:
   750                           	opt callstack 0
   751  00FC2B  DB                 	db	219
   752  00FC2C                     __end_of_cc_newpin:
   753                           	opt callstack 0
   754  00FC2C  DA                 	db	218
   755  00FC2D                     __end_of_cc_pin:
   756                           	opt callstack 0
   757  00FC2D                     _cc_level:
   758                           	opt callstack 0
   759  00FC2D  EC                 	db	236
   760  00FC2E                     __end_of_cc_level:
   761                           	opt callstack 0
   762  00FC2E                     _cc_stop:
   763                           	opt callstack 0
   764  00FC2E  AC                 	db	172
   765  00FC2F                     __end_of_cc_stop:
   766                           	opt callstack 0
   767  00FC2F                     _cc_countrq:
   768                           	opt callstack 0
   769  00FC2F  A8                 	db	168
   770  00FC30                     __end_of_cc_countrq:
   771                           	opt callstack 0
   772  00FC30                     _cc_pay:
   773                           	opt callstack 0
   774  00FC30  A7                 	db	167
   775  00FC31                     __end_of_cc_pay:
   776                           	opt callstack 0
   777  00FC31                     _cc_status:
   778                           	opt callstack 0
   779  00FC31  A6                 	db	166
   780  00FC32                     __end_of_cc_status:
   781                           	opt callstack 0
   782  00FC32                     _cc_enable:
   783                           	opt callstack 0
   784  00FC32  A4                 	db	164
   785  00FC33                     __end_of_cc_enable:
   786                           	opt callstack 0
   787  00FC33                     _cc_test:
   788                           	opt callstack 0
   789  00FC33  A3                 	db	163
   790  00FC34                     __end_of_cc_test:
   791                           	opt callstack 0
   792  00FC34                     _cc_reset:
   793                           	opt callstack 0
   794  00FC34  01                 	db	1
   795  00FC35                     __end_of_cc_reset:
   796                           	opt callstack 0
   797  00FC35  01                 	db	1
   798  00FC36                     __end_of_mastadd:
   799                           	opt callstack 0
   800  00FC36  03                 	db	3
   801  00FC37                     __end_of_hopadd:
   802                           	opt callstack 0
   803  00FC37                     _theft_attempt:
   804                           	opt callstack 0
   805  00FC37  0C                 	db	12
   806  00FC38                     __end_of_theft_attempt:
   807                           	opt callstack 0
   808  00FC38                     _note_rejected:
   809                           	opt callstack 0
   810  00FC38  0B                 	db	11
   811  00FC39                     __end_of_note_rejected:
   812                           	opt callstack 0
   813  00FC39                     _invalid_escrow:
   814                           	opt callstack 0
   815  00FC39  0A                 	db	10
   816  00FC3A                     __end_of_invalid_escrow:
   817                           	opt callstack 0
   818  00FC3A                     _acept_disabled:
   819                           	opt callstack 0
   820  00FC3A  09                 	db	9
   821  00FC3B                     __end_of_acept_disabled:
   822                           	opt callstack 0
   823  00FC3B                     _cashbox_err:
   824                           	opt callstack 0
   825  00FC3B  08                 	db	8
   826  00FC3C                     __end_of_cashbox_err:
   827                           	opt callstack 0
   828  00FC3C                     _note_removed:
   829                           	opt callstack 0
   830  00FC3C  07                 	db	7
   831  00FC3D                     __end_of_note_removed:
   832                           	opt callstack 0
   833  00FC3D  06                 	db	6
   834  00FC3E                     __end_of_just_reset:
   835                           	opt callstack 0
   836  00FC3E                     _jammed_err:
   837                           	opt callstack 0
   838  00FC3E  05                 	db	5
   839  00FC3F                     __end_of_jammed_err:
   840                           	opt callstack 0
   841  00FC3F                     _rom_error:
   842                           	opt callstack 0
   843  00FC3F  04                 	db	4
   844  00FC40                     __end_of_rom_error:
   845                           	opt callstack 0
   846  00FC40                     _just_busy:
   847                           	opt callstack 0
   848  00FC40  03                 	db	3
   849  00FC41                     __end_of_just_busy:
   850                           	opt callstack 0
   851  00FC41                     _sens_error:
   852                           	opt callstack 0
   853  00FC41  02                 	db	2
   854  00FC42                     __end_of_sens_error:
   855                           	opt callstack 0
   856  00FC42                     _motr_error:
   857                           	opt callstack 0
   858  00FC42  01                 	db	1
   859  00FC43                     __end_of_motr_error:
   860                           	opt callstack 0
   861  00FC43                     _note_features:
   862                           	opt callstack 0
   863  00FC43  33                 	db	51
   864  00FC44                     __end_of_note_features:
   865                           	opt callstack 0
   866  00FC44                     _note_stacker:
   867                           	opt callstack 0
   868  00FC44  36                 	db	54
   869  00FC45                     __end_of_note_stacker:
   870                           	opt callstack 0
   871  00FC45                     _note_escrow:
   872                           	opt callstack 0
   873  00FC45  35                 	db	53
   874  00FC46                     __end_of_note_escrow:
   875                           	opt callstack 0
   876  00FC46  34                 	db	52
   877  00FC47                     __end_of_note_type:
   878                           	opt callstack 0
   879  00FC47  33                 	db	51
   880  00FC48                     __end_of_note_poll:
   881                           	opt callstack 0
   882  00FC48  32                 	db	50
   883  00FC49                     __end_of_note_security:
   884                           	opt callstack 0
   885  00FC49                     _note_setup:
   886                           	opt callstack 0
   887  00FC49  31                 	db	49
   888  00FC4A                     __end_of_note_setup:
   889                           	opt callstack 0
   890  00FC4A  30                 	db	48
   891  00FC4B                     __end_of_note_reset:
   892                           	opt callstack 0
   893  00FC4B  54                 	db	84
   894  00FC4C                     __end_of_line4:
   895                           	opt callstack 0
   896  00FC4C  14                 	db	20
   897  00FC4D                     __end_of_line3:
   898                           	opt callstack 0
   899  00FC4D  00                 	db	0
   900  00FC4E                     __end_of_line1:
   901                           	opt callstack 0
   902  00FC4E                     _dispsl:
   903                           	opt callstack 0
   904  00FC4E  18                 	db	24
   905  00FC4F                     __end_of_dispsl:
   906                           	opt callstack 0
   907  00FC4F                     _dispsr:
   908                           	opt callstack 0
   909  00FC4F  1B                 	db	27
   910  00FC50                     __end_of_dispsr:
   911                           	opt callstack 0
   912  00FC50                     _dispoff:
   913                           	opt callstack 0
   914  00FC50  08                 	db	8
   915  00FC51                     __end_of_dispoff:
   916                           	opt callstack 0
   917  00FC51                     _dispshleft:
   918                           	opt callstack 0
   919  00FC51  07                 	db	7
   920  00FC52                     __end_of_dispshleft:
   921                           	opt callstack 0
   922  00FC52                     _dispshright:
   923                           	opt callstack 0
   924  00FC52  05                 	db	5
   925  00FC53                     __end_of_dispshright:
   926                           	opt callstack 0
   927  00FC53                     _dispcursor:
   928                           	opt callstack 0
   929  00FC53  04                 	db	4
   930  00FC54                     __end_of_dispcursor:
   931                           	opt callstack 0
   932  00FC54  06                 	db	6
   933  00FC55                     __end_of_dispnormal:
   934                           	opt callstack 0
   935  00FC55                     _dsphome:
   936                           	opt callstack 0
   937  00FC55  02                 	db	2
   938  00FC56                     __end_of_dsphome:
   939                           	opt callstack 0
   940  00FC56                     _dispaddr:
   941                           	opt callstack 0
   942  00FC56  A8                 	db	168
   943  00FC57                     __end_of_dispaddr:
   944                           	opt callstack 0
   945  00FC57  01                 	db	1
   946  00FC58                     __end_of_dispclr:
   947                           	opt callstack 0
   948  00FC58  0C                 	db	12
   949  00FC59                     __end_of_dispon:
   950                           	opt callstack 0
   951  00FC59  2C                 	db	44
   952  00FC5A                     __end_of_dispfunc3:
   953                           	opt callstack 0
   954  00FC5A                     _dispfunc2:
   955                           	opt callstack 0
   956  00FC5A  28                 	db	40
   957  00FC5B                     __end_of_dispfunc2:
   958                           	opt callstack 0
   959  00FC5B                     _dispfunc1:
   960                           	opt callstack 0
   961  00FC5B  24                 	db	36
   962  00FC5C                     __end_of_dispfunc1:
   963                           	opt callstack 0
   964  00FC5C                     _servmsg:
   965                           	opt callstack 0
   966  00FC5C  31                 	db	49
   967  00FC5D  20                 	db	32
   968  00FC5E  3D                 	db	61
   969  00FC5F  20                 	db	32
   970  00FC60  41                 	db	65
   971  00FC61  75                 	db	117
   972  00FC62  64                 	db	100
   973  00FC63  69                 	db	105
   974  00FC64  74                 	db	116
   975  00FC65  20                 	db	32
   976  00FC66  32                 	db	50
   977  00FC67  20                 	db	32
   978  00FC68  3D                 	db	61
   979  00FC69  20                 	db	32
   980  00FC6A  53                 	db	83
   981  00FC6B  65                 	db	101
   982  00FC6C  6E                 	db	110
   983  00FC6D  73                 	db	115
   984  00FC6E  6F                 	db	111
   985  00FC6F  72                 	db	114
   986  00FC70  33                 	db	51
   987  00FC71  3D                 	db	61
   988  00FC72  48                 	db	72
   989  00FC73  6F                 	db	111
   990  00FC74  70                 	db	112
   991  00FC75  2D                 	db	45
   992  00FC76  43                 	db	67
   993  00FC77  6F                 	db	111
   994  00FC78  69                 	db	105
   995  00FC79  6E                 	db	110
   996  00FC7A  20                 	db	32
   997  00FC7B  34                 	db	52
   998  00FC7C  3D                 	db	61
   999  00FC7D  4E                 	db	78
  1000  00FC7E  6F                 	db	111
  1001  00FC7F  74                 	db	116
  1002  00FC80  65                 	db	101
  1003  00FC81  2D                 	db	45
  1004  00FC82  65                 	db	101
  1005  00FC83  6E                 	db	110
  1006  00FC84  35                 	db	53
  1007  00FC85  3D                 	db	61
  1008  00FC86  43                 	db	67
  1009  00FC87  72                 	db	114
  1010  00FC88  65                 	db	101
  1011  00FC89  64                 	db	100
  1012  00FC8A  2D                 	db	45
  1013  00FC8B  63                 	db	99
  1014  00FC8C  6C                 	db	108
  1015  00FC8D  72                 	db	114
  1016  00FC8E  20                 	db	32
  1017  00FC8F  36                 	db	54
  1018  00FC90  3D                 	db	61
  1019  00FC91  50                 	db	80
  1020  00FC92  72                 	db	114
  1021  00FC93  69                 	db	105
  1022  00FC94  63                 	db	99
  1023  00FC95  65                 	db	101
  1024  00FC96  73                 	db	115
  1025  00FC97  20                 	db	32
  1026  00FC98  37                 	db	55
  1027  00FC99  3D                 	db	61
  1028  00FC9A  56                 	db	86
  1029  00FC9B  65                 	db	101
  1030  00FC9C  6E                 	db	110
  1031  00FC9D  64                 	db	100
  1032  00FC9E  20                 	db	32
  1033  00FC9F  73                 	db	115
  1034  00FCA0  65                 	db	101
  1035  00FCA1  74                 	db	116
  1036  00FCA2  75                 	db	117
  1037  00FCA3  70                 	db	112
  1038  00FCA4  20                 	db	32
  1039  00FCA5  38                 	db	56
  1040  00FCA6  3D                 	db	61
  1041  00FCA7  45                 	db	69
  1042  00FCA8  78                 	db	120
  1043  00FCA9  69                 	db	105
  1044  00FCAA  74                 	db	116
  1045  00FCAB  00                 	db	0
  1046  00FCAC                     __end_of_servmsg:
  1047                           	opt callstack 0
  1048  00FCAC                     _setnotes:
  1049                           	opt callstack 0
  1050  00FCAC  45                 	db	69
  1051  00FCAD  6E                 	db	110
  1052  00FCAE  61                 	db	97
  1053  00FCAF  62                 	db	98
  1054  00FCB0  6C                 	db	108
  1055  00FCB1  65                 	db	101
  1056  00FCB2  20                 	db	32
  1057  00FCB3  2F                 	db	47
  1058  00FCB4  20                 	db	32
  1059  00FCB5  44                 	db	68
  1060  00FCB6  69                 	db	105
  1061  00FCB7  73                 	db	115
  1062  00FCB8  61                 	db	97
  1063  00FCB9  62                 	db	98
  1064  00FCBA  6C                 	db	108
  1065  00FCBB  65                 	db	101
  1066  00FCBC  20                 	db	32
  1067  00FCBD  20                 	db	32
  1068  00FCBE  20                 	db	32
  1069  00FCBF  20                 	db	32
  1070  00FCC0  31                 	db	49
  1071  00FCC1  20                 	db	32
  1072  00FCC2  3D                 	db	61
  1073  00FCC3  20                 	db	32
  1074  00FCC4  52                 	db	82
  1075  00FCC5  31                 	db	49
  1076  00FCC6  30                 	db	48
  1077  00FCC7  2C                 	db	44
  1078  00FCC8  20                 	db	32
  1079  00FCC9  32                 	db	50
  1080  00FCCA  20                 	db	32
  1081  00FCCB  3D                 	db	61
  1082  00FCCC  20                 	db	32
  1083  00FCCD  52                 	db	82
  1084  00FCCE  32                 	db	50
  1085  00FCCF  30                 	db	48
  1086  00FCD0  20                 	db	32
  1087  00FCD1  20                 	db	32
  1088  00FCD2  20                 	db	32
  1089  00FCD3  20                 	db	32
  1090  00FCD4  33                 	db	51
  1091  00FCD5  20                 	db	32
  1092  00FCD6  3D                 	db	61
  1093  00FCD7  20                 	db	32
  1094  00FCD8  52                 	db	82
  1095  00FCD9  35                 	db	53
  1096  00FCDA  30                 	db	48
  1097  00FCDB  2C                 	db	44
  1098  00FCDC  20                 	db	32
  1099  00FCDD  34                 	db	52
  1100  00FCDE  20                 	db	32
  1101  00FCDF  3D                 	db	61
  1102  00FCE0  20                 	db	32
  1103  00FCE1  52                 	db	82
  1104  00FCE2  31                 	db	49
  1105  00FCE3  30                 	db	48
  1106  00FCE4  30                 	db	48
  1107  00FCE5  20                 	db	32
  1108  00FCE6  20                 	db	32
  1109  00FCE7  20                 	db	32
  1110  00FCE8  35                 	db	53
  1111  00FCE9  20                 	db	32
  1112  00FCEA  3D                 	db	61
  1113  00FCEB  20                 	db	32
  1114  00FCEC  52                 	db	82
  1115  00FCED  32                 	db	50
  1116  00FCEE  30                 	db	48
  1117  00FCEF  30                 	db	48
  1118  00FCF0  00                 	db	0
  1119  00FCF1                     __end_of_setnotes:
  1120                           	opt callstack 0
  1121  00FCF1                     _vendsetup:
  1122                           	opt callstack 0
  1123  00FCF1  50                 	db	80
  1124  00FCF2  75                 	db	117
  1125  00FCF3  73                 	db	115
  1126  00FCF4  68                 	db	104
  1127  00FCF5  20                 	db	32
  1128  00FCF6  31                 	db	49
  1129  00FCF7  20                 	db	32
  1130  00FCF8  56                 	db	86
  1131  00FCF9  65                 	db	101
  1132  00FCFA  6E                 	db	110
  1133  00FCFB  64                 	db	100
  1134  00FCFC  20                 	db	32
  1135  00FCFD  54                 	db	84
  1136  00FCFE  69                 	db	105
  1137  00FCFF  6D                 	db	109
  1138  00FD00  65                 	db	101
  1139  00FD01  2C                 	db	44
  1140  00FD02  20                 	db	32
  1141  00FD03  20                 	db	32
  1142  00FD04  20                 	db	32
  1143  00FD05  32                 	db	50
  1144  00FD06  20                 	db	32
  1145  00FD07  43                 	db	67
  1146  00FD08  68                 	db	104
  1147  00FD09  61                 	db	97
  1148  00FD0A  6E                 	db	110
  1149  00FD0B  4C                 	db	76
  1150  00FD0C  69                 	db	105
  1151  00FD0D  6E                 	db	110
  1152  00FD0E  6B                 	db	107
  1153  00FD0F  20                 	db	32
  1154  00FD10  33                 	db	51
  1155  00FD11  20                 	db	32
  1156  00FD12  53                 	db	83
  1157  00FD13  65                 	db	101
  1158  00FD14  6E                 	db	110
  1159  00FD15  73                 	db	115
  1160  00FD16  4F                 	db	79
  1161  00FD17  66                 	db	102
  1162  00FD18  66                 	db	102
  1163  00FD19  34                 	db	52
  1164  00FD1A  20                 	db	32
  1165  00FD1B  43                 	db	67
  1166  00FD1C  6C                 	db	108
  1167  00FD1D  72                 	db	114
  1168  00FD1E  54                 	db	84
  1169  00FD1F  6F                 	db	111
  1170  00FD20  74                 	db	116
  1171  00FD21  20                 	db	32
  1172  00FD22  35                 	db	53
  1173  00FD23  20                 	db	32
  1174  00FD24  46                 	db	70
  1175  00FD25  61                 	db	97
  1176  00FD26  63                 	db	99
  1177  00FD27  52                 	db	82
  1178  00FD28  65                 	db	101
  1179  00FD29  73                 	db	115
  1180  00FD2A  65                 	db	101
  1181  00FD2B  74                 	db	116
  1182  00FD2C  20                 	db	32
  1183  00FD2D  38                 	db	56
  1184  00FD2E  20                 	db	32
  1185  00FD2F  65                 	db	101
  1186  00FD30  78                 	db	120
  1187  00FD31  69                 	db	105
  1188  00FD32  74                 	db	116
  1189  00FD33  00                 	db	0
  1190  00FD34                     __end_of_vendsetup:
  1191                           	opt callstack 0
  1192  00FD34                     _pricesetm2:
  1193                           	opt callstack 0
  1194  00FD34  50                 	db	80
  1195  00FD35  72                 	db	114
  1196  00FD36  65                 	db	101
  1197  00FD37  73                 	db	115
  1198  00FD38  73                 	db	115
  1199  00FD39  20                 	db	32
  1200  00FD3A  63                 	db	99
  1201  00FD3B  68                 	db	104
  1202  00FD3C  61                 	db	97
  1203  00FD3D  6E                 	db	110
  1204  00FD3E  6E                 	db	110
  1205  00FD3F  65                 	db	101
  1206  00FD40  6C                 	db	108
  1207  00FD41  20                 	db	32
  1208  00FD42  62                 	db	98
  1209  00FD43  75                 	db	117
  1210  00FD44  74                 	db	116
  1211  00FD45  74                 	db	116
  1212  00FD46  6F                 	db	111
  1213  00FD47  6E                 	db	110
  1214  00FD48  20                 	db	32
  1215  00FD49  20                 	db	32
  1216  00FD4A  20                 	db	32
  1217  00FD4B  20                 	db	32
  1218  00FD4C  74                 	db	116
  1219  00FD4D  6F                 	db	111
  1220  00FD4E  20                 	db	32
  1221  00FD4F  73                 	db	115
  1222  00FD50  65                 	db	101
  1223  00FD51  74                 	db	116
  1224  00FD52  20                 	db	32
  1225  00FD53  70                 	db	112
  1226  00FD54  72                 	db	114
  1227  00FD55  69                 	db	105
  1228  00FD56  63                 	db	99
  1229  00FD57  65                 	db	101
  1230  00FD58  20                 	db	32
  1231  00FD59  20                 	db	32
  1232  00FD5A  20                 	db	32
  1233  00FD5B  20                 	db	32
  1234  00FD5C  20                 	db	32
  1235  00FD5D  20                 	db	32
  1236  00FD5E  53                 	db	83
  1237  00FD5F  65                 	db	101
  1238  00FD60  72                 	db	114
  1239  00FD61  76                 	db	118
  1240  00FD62  69                 	db	105
  1241  00FD63  63                 	db	99
  1242  00FD64  65                 	db	101
  1243  00FD65  20                 	db	32
  1244  00FD66  3D                 	db	61
  1245  00FD67  20                 	db	32
  1246  00FD68  45                 	db	69
  1247  00FD69  78                 	db	120
  1248  00FD6A  69                 	db	105
  1249  00FD6B  74                 	db	116
  1250  00FD6C  00                 	db	0
  1251  00FD6D                     __end_of_pricesetm2:
  1252                           	opt callstack 0
  1253  00FD6D                     _chanlinkm:
  1254                           	opt callstack 0
  1255  00FD6D  50                 	db	80
  1256  00FD6E  72                 	db	114
  1257  00FD6F  65                 	db	101
  1258  00FD70  73                 	db	115
  1259  00FD71  73                 	db	115
  1260  00FD72  20                 	db	32
  1261  00FD73  63                 	db	99
  1262  00FD74  68                 	db	104
  1263  00FD75  61                 	db	97
  1264  00FD76  6E                 	db	110
  1265  00FD77  6E                 	db	110
  1266  00FD78  65                 	db	101
  1267  00FD79  6C                 	db	108
  1268  00FD7A  20                 	db	32
  1269  00FD7B  62                 	db	98
  1270  00FD7C  75                 	db	117
  1271  00FD7D  74                 	db	116
  1272  00FD7E  74                 	db	116
  1273  00FD7F  6F                 	db	111
  1274  00FD80  6E                 	db	110
  1275  00FD81  20                 	db	32
  1276  00FD82  20                 	db	32
  1277  00FD83  20                 	db	32
  1278  00FD84  20                 	db	32
  1279  00FD85  74                 	db	116
  1280  00FD86  6F                 	db	111
  1281  00FD87  20                 	db	32
  1282  00FD88  6C                 	db	108
  1283  00FD89  69                 	db	105
  1284  00FD8A  6E                 	db	110
  1285  00FD8B  6B                 	db	107
  1286  00FD8C  20                 	db	32
  1287  00FD8D  74                 	db	116
  1288  00FD8E  6F                 	db	111
  1289  00FD8F  20                 	db	32
  1290  00FD90  20                 	db	32
  1291  00FD91  20                 	db	32
  1292  00FD92  20                 	db	32
  1293  00FD93  20                 	db	32
  1294  00FD94  20                 	db	32
  1295  00FD95  53                 	db	83
  1296  00FD96  65                 	db	101
  1297  00FD97  72                 	db	114
  1298  00FD98  76                 	db	118
  1299  00FD99  69                 	db	105
  1300  00FD9A  63                 	db	99
  1301  00FD9B  65                 	db	101
  1302  00FD9C  20                 	db	32
  1303  00FD9D  3D                 	db	61
  1304  00FD9E  20                 	db	32
  1305  00FD9F  45                 	db	69
  1306  00FDA0  78                 	db	120
  1307  00FDA1  69                 	db	105
  1308  00FDA2  74                 	db	116
  1309  00FDA3  00                 	db	0
  1310  00FDA4                     __end_of_chanlinkm:
  1311                           	opt callstack 0
  1312  00FDA4                     _hoppcoin:
  1313                           	opt callstack 0
  1314  00FDA4  48                 	db	72
  1315  00FDA5  6F                 	db	111
  1316  00FDA6  70                 	db	112
  1317  00FDA7  70                 	db	112
  1318  00FDA8  65                 	db	101
  1319  00FDA9  72                 	db	114
  1320  00FDAA  20                 	db	32
  1321  00FDAB  43                 	db	67
  1322  00FDAC  6F                 	db	111
  1323  00FDAD  69                 	db	105
  1324  00FDAE  6E                 	db	110
  1325  00FDAF  20                 	db	32
  1326  00FDB0  20                 	db	32
  1327  00FDB1  20                 	db	32
  1328  00FDB2  20                 	db	32
  1329  00FDB3  20                 	db	32
  1330  00FDB4  20                 	db	32
  1331  00FDB5  20                 	db	32
  1332  00FDB6  20                 	db	32
  1333  00FDB7  20                 	db	32
  1334  00FDB8  42                 	db	66
  1335  00FDB9  75                 	db	117
  1336  00FDBA  74                 	db	116
  1337  00FDBB  74                 	db	116
  1338  00FDBC  6F                 	db	111
  1339  00FDBD  6E                 	db	110
  1340  00FDBE  20                 	db	32
  1341  00FDBF  31                 	db	49
  1342  00FDC0  20                 	db	32
  1343  00FDC1  3D                 	db	61
  1344  00FDC2  20                 	db	32
  1345  00FDC3  2B                 	db	43
  1346  00FDC4  20                 	db	32
  1347  00FDC5  26                 	db	38
  1348  00FDC6  20                 	db	32
  1349  00FDC7  32                 	db	50
  1350  00FDC8  20                 	db	32
  1351  00FDC9  3D                 	db	61
  1352  00FDCA  20                 	db	32
  1353  00FDCB  2D                 	db	45
  1354  00FDCC  20                 	db	32
  1355  00FDCD  56                 	db	86
  1356  00FDCE  61                 	db	97
  1357  00FDCF  6C                 	db	108
  1358  00FDD0  75                 	db	117
  1359  00FDD1  65                 	db	101
  1360  00FDD2  20                 	db	32
  1361  00FDD3  3D                 	db	61
  1362  00FDD4  20                 	db	32
  1363  00FDD5  52                 	db	82
  1364  00FDD6  00                 	db	0
  1365  00FDD7                     __end_of_hoppcoin:
  1366                           	opt callstack 0
  1367  00FDD7                     _vendtimem:
  1368                           	opt callstack 0
  1369  00FDD7  50                 	db	80
  1370  00FDD8  75                 	db	117
  1371  00FDD9  73                 	db	115
  1372  00FDDA  68                 	db	104
  1373  00FDDB  20                 	db	32
  1374  00FDDC  31                 	db	49
  1375  00FDDD  20                 	db	32
  1376  00FDDE  3D                 	db	61
  1377  00FDDF  20                 	db	32
  1378  00FDE0  2B                 	db	43
  1379  00FDE1  2E                 	db	46
  1380  00FDE2  35                 	db	53
  1381  00FDE3  20                 	db	32
  1382  00FDE4  73                 	db	115
  1383  00FDE5  65                 	db	101
  1384  00FDE6  63                 	db	99
  1385  00FDE7  6F                 	db	111
  1386  00FDE8  6E                 	db	110
  1387  00FDE9  64                 	db	100
  1388  00FDEA  20                 	db	32
  1389  00FDEB  50                 	db	80
  1390  00FDEC  75                 	db	117
  1391  00FDED  73                 	db	115
  1392  00FDEE  68                 	db	104
  1393  00FDEF  20                 	db	32
  1394  00FDF0  32                 	db	50
  1395  00FDF1  20                 	db	32
  1396  00FDF2  3D                 	db	61
  1397  00FDF3  20                 	db	32
  1398  00FDF4  2D                 	db	45
  1399  00FDF5  2E                 	db	46
  1400  00FDF6  35                 	db	53
  1401  00FDF7  20                 	db	32
  1402  00FDF8  73                 	db	115
  1403  00FDF9  65                 	db	101
  1404  00FDFA  63                 	db	99
  1405  00FDFB  6F                 	db	111
  1406  00FDFC  6E                 	db	110
  1407  00FDFD  64                 	db	100
  1408  00FDFE  20                 	db	32
  1409  00FDFF  00                 	db	0
  1410  00FE00                     __end_of_vendtimem:
  1411                           	opt callstack 0
  1412  00FE00                     _setimemsg:
  1413                           	opt callstack 0
  1414  00FE00  50                 	db	80
  1415  00FE01  75                 	db	117
  1416  00FE02  73                 	db	115
  1417  00FE03  68                 	db	104
  1418  00FE04  20                 	db	32
  1419  00FE05  63                 	db	99
  1420  00FE06  68                 	db	104
  1421  00FE07  61                 	db	97
  1422  00FE08  6E                 	db	110
  1423  00FE09  6E                 	db	110
  1424  00FE0A  65                 	db	101
  1425  00FE0B  6C                 	db	108
  1426  00FE0C  20                 	db	32
  1427  00FE0D  62                 	db	98
  1428  00FE0E  75                 	db	117
  1429  00FE0F  74                 	db	116
  1430  00FE10  74                 	db	116
  1431  00FE11  6F                 	db	111
  1432  00FE12  6E                 	db	110
  1433  00FE13  20                 	db	32
  1434  00FE14  50                 	db	80
  1435  00FE15  75                 	db	117
  1436  00FE16  73                 	db	115
  1437  00FE17  68                 	db	104
  1438  00FE18  20                 	db	32
  1439  00FE19  73                 	db	115
  1440  00FE1A  65                 	db	101
  1441  00FE1B  72                 	db	114
  1442  00FE1C  76                 	db	118
  1443  00FE1D  69                 	db	105
  1444  00FE1E  63                 	db	99
  1445  00FE1F  65                 	db	101
  1446  00FE20  20                 	db	32
  1447  00FE21  74                 	db	116
  1448  00FE22  6F                 	db	111
  1449  00FE23  20                 	db	32
  1450  00FE24  65                 	db	101
  1451  00FE25  78                 	db	120
  1452  00FE26  69                 	db	105
  1453  00FE27  74                 	db	116
  1454  00FE28  00                 	db	0
  1455  00FE29                     __end_of_setimemsg:
  1456                           	opt callstack 0
  1457  00FE29                     _inscoin:
  1458                           	opt callstack 0
  1459  00FE29  49                 	db	73
  1460  00FE2A  6E                 	db	110
  1461  00FE2B  73                 	db	115
  1462  00FE2C  65                 	db	101
  1463  00FE2D  72                 	db	114
  1464  00FE2E  74                 	db	116
  1465  00FE2F  20                 	db	32
  1466  00FE30  4E                 	db	78
  1467  00FE31  6F                 	db	111
  1468  00FE32  74                 	db	116
  1469  00FE33  65                 	db	101
  1470  00FE34  73                 	db	115
  1471  00FE35  20                 	db	32
  1472  00FE36  26                 	db	38
  1473  00FE37  20                 	db	32
  1474  00FE38  50                 	db	80
  1475  00FE39  72                 	db	114
  1476  00FE3A  65                 	db	101
  1477  00FE3B  73                 	db	115
  1478  00FE3C  73                 	db	115
  1479  00FE3D  4C                 	db	76
  1480  00FE3E  69                 	db	105
  1481  00FE3F  74                 	db	116
  1482  00FE40  20                 	db	32
  1483  00FE41  42                 	db	66
  1484  00FE42  75                 	db	117
  1485  00FE43  74                 	db	116
  1486  00FE44  74                 	db	116
  1487  00FE45  6F                 	db	111
  1488  00FE46  6E                 	db	110
  1489  00FE47  20                 	db	32
  1490  00FE48  54                 	db	84
  1491  00FE49  6F                 	db	111
  1492  00FE4A  20                 	db	32
  1493  00FE4B  56                 	db	86
  1494  00FE4C  65                 	db	101
  1495  00FE4D  6E                 	db	110
  1496  00FE4E  64                 	db	100
  1497  00FE4F  00                 	db	0
  1498  00FE50                     __end_of_inscoin:
  1499                           	opt callstack 0
  1500  00FE50                     _initnote:
  1501                           	opt callstack 0
  1502  00FE50  20                 	db	32
  1503  00FE51  20                 	db	32
  1504  00FE52  20                 	db	32
  1505  00FE53  20                 	db	32
  1506  00FE54  20                 	db	32
  1507  00FE55  49                 	db	73
  1508  00FE56  6E                 	db	110
  1509  00FE57  69                 	db	105
  1510  00FE58  74                 	db	116
  1511  00FE59  69                 	db	105
  1512  00FE5A  61                 	db	97
  1513  00FE5B  6C                 	db	108
  1514  00FE5C  69                 	db	105
  1515  00FE5D  7A                 	db	122
  1516  00FE5E  65                 	db	101
  1517  00FE5F  20                 	db	32
  1518  00FE60  20                 	db	32
  1519  00FE61  20                 	db	32
  1520  00FE62  20                 	db	32
  1521  00FE63  20                 	db	32
  1522  00FE64  20                 	db	32
  1523  00FE65  20                 	db	32
  1524  00FE66  20                 	db	32
  1525  00FE67  20                 	db	32
  1526  00FE68  20                 	db	32
  1527  00FE69  4E                 	db	78
  1528  00FE6A  6F                 	db	111
  1529  00FE6B  74                 	db	116
  1530  00FE6C  65                 	db	101
  1531  00FE6D  20                 	db	32
  1532  00FE6E  52                 	db	82
  1533  00FE6F  65                 	db	101
  1534  00FE70  61                 	db	97
  1535  00FE71  64                 	db	100
  1536  00FE72  65                 	db	101
  1537  00FE73  72                 	db	114
  1538  00FE74  00                 	db	0
  1539  00FE75                     __end_of_initnote:
  1540                           	opt callstack 0
  1541  00FE75                     _nochange:
  1542                           	opt callstack 0
  1543  00FE75  4E                 	db	78
  1544  00FE76  6F                 	db	111
  1545  00FE77  20                 	db	32
  1546  00FE78  43                 	db	67
  1547  00FE79  68                 	db	104
  1548  00FE7A  61                 	db	97
  1549  00FE7B  6E                 	db	110
  1550  00FE7C  67                 	db	103
  1551  00FE7D  65                 	db	101
  1552  00FE7E  20                 	db	32
  1553  00FE7F  55                 	db	85
  1554  00FE80  73                 	db	115
  1555  00FE81  65                 	db	101
  1556  00FE82  20                 	db	32
  1557  00FE83  45                 	db	69
  1558  00FE84  78                 	db	120
  1559  00FE85  61                 	db	97
  1560  00FE86  63                 	db	99
  1561  00FE87  74                 	db	116
  1562  00FE88  20                 	db	32
  1563  00FE89  20                 	db	32
  1564  00FE8A  20                 	db	32
  1565  00FE8B  20                 	db	32
  1566  00FE8C  20                 	db	32
  1567  00FE8D  20                 	db	32
  1568  00FE8E  41                 	db	65
  1569  00FE8F  6D                 	db	109
  1570  00FE90  6F                 	db	111
  1571  00FE91  75                 	db	117
  1572  00FE92  6E                 	db	110
  1573  00FE93  74                 	db	116
  1574  00FE94  21                 	db	33
  1575  00FE95  00                 	db	0
  1576  00FE96                     __end_of_nochange:
  1577                           	opt callstack 0
  1578  00FE96                     _chanresetmsg:
  1579                           	opt callstack 0
  1580  00FE96  52                 	db	82
  1581  00FE97  65                 	db	101
  1582  00FE98  73                 	db	115
  1583  00FE99  65                 	db	101
  1584  00FE9A  74                 	db	116
  1585  00FE9B  20                 	db	32
  1586  00FE9C  74                 	db	116
  1587  00FE9D  6F                 	db	111
  1588  00FE9E  20                 	db	32
  1589  00FE9F  44                 	db	68
  1590  00FEA0  65                 	db	101
  1591  00FEA1  66                 	db	102
  1592  00FEA2  61                 	db	97
  1593  00FEA3  75                 	db	117
  1594  00FEA4  6C                 	db	108
  1595  00FEA5  74                 	db	116
  1596  00FEA6  20                 	db	32
  1597  00FEA7  20                 	db	32
  1598  00FEA8  20                 	db	32
  1599  00FEA9  20                 	db	32
  1600  00FEAA  53                 	db	83
  1601  00FEAB  74                 	db	116
  1602  00FEAC  61                 	db	97
  1603  00FEAD  72                 	db	114
  1604  00FEAE  74                 	db	116
  1605  00FEAF  20                 	db	32
  1606  00FEB0  41                 	db	65
  1607  00FEB1  67                 	db	103
  1608  00FEB2  61                 	db	97
  1609  00FEB3  69                 	db	105
  1610  00FEB4  6E                 	db	110
  1611  00FEB5  00                 	db	0
  1612  00FEB6                     __end_of_chanresetmsg:
  1613                           	opt callstack 0
  1614  00FEB6                     _sensoffmsg:
  1615                           	opt callstack 0
  1616  00FEB6  50                 	db	80
  1617  00FEB7  75                 	db	117
  1618  00FEB8  73                 	db	115
  1619  00FEB9  68                 	db	104
  1620  00FEBA  20                 	db	32
  1621  00FEBB  31                 	db	49
  1622  00FEBC  20                 	db	32
  1623  00FEBD  3D                 	db	61
  1624  00FEBE  20                 	db	32
  1625  00FEBF  4F                 	db	79
  1626  00FEC0  6E                 	db	110
  1627  00FEC1  2C                 	db	44
  1628  00FEC2  20                 	db	32
  1629  00FEC3  32                 	db	50
  1630  00FEC4  20                 	db	32
  1631  00FEC5  3D                 	db	61
  1632  00FEC6  20                 	db	32
  1633  00FEC7  4F                 	db	79
  1634  00FEC8  66                 	db	102
  1635  00FEC9  66                 	db	102
  1636  00FECA  2C                 	db	44
  1637  00FECB  20                 	db	32
  1638  00FECC  38                 	db	56
  1639  00FECD  20                 	db	32
  1640  00FECE  3D                 	db	61
  1641  00FECF  20                 	db	32
  1642  00FED0  45                 	db	69
  1643  00FED1  78                 	db	120
  1644  00FED2  69                 	db	105
  1645  00FED3  74                 	db	116
  1646  00FED4  00                 	db	0
  1647  00FED5                     __end_of_sensoffmsg:
  1648                           	opt callstack 0
  1649  00FED5                     _noteerr:
  1650                           	opt callstack 0
  1651  00FED5  20                 	db	32
  1652  00FED6  20                 	db	32
  1653  00FED7  20                 	db	32
  1654  00FED8  4E                 	db	78
  1655  00FED9  6F                 	db	111
  1656  00FEDA  74                 	db	116
  1657  00FEDB  65                 	db	101
  1658  00FEDC  20                 	db	32
  1659  00FEDD  65                 	db	101
  1660  00FEDE  72                 	db	114
  1661  00FEDF  72                 	db	114
  1662  00FEE0  6F                 	db	111
  1663  00FEE1  72                 	db	114
  1664  00FEE2  20                 	db	32
  1665  00FEE3  20                 	db	32
  1666  00FEE4  20                 	db	32
  1667  00FEE5  20                 	db	32
  1668  00FEE6  20                 	db	32
  1669  00FEE7  63                 	db	99
  1670  00FEE8  6F                 	db	111
  1671  00FEE9  64                 	db	100
  1672  00FEEA  65                 	db	101
  1673  00FEEB  20                 	db	32
  1674  00FEEC  3D                 	db	61
  1675  00FEED  20                 	db	32
  1676  00FEEE  30                 	db	48
  1677  00FEEF  78                 	db	120
  1678  00FEF0  00                 	db	0
  1679  00FEF1                     __end_of_noteerr:
  1680                           	opt callstack 0
  1681  00FEF1                     _vendispmsg:
  1682                           	opt callstack 0
  1683  00FEF1  55                 	db	85
  1684  00FEF2  73                 	db	115
  1685  00FEF3  65                 	db	101
  1686  00FEF4  20                 	db	32
  1687  00FEF5  62                 	db	98
  1688  00FEF6  75                 	db	117
  1689  00FEF7  74                 	db	116
  1690  00FEF8  74                 	db	116
  1691  00FEF9  6F                 	db	111
  1692  00FEFA  6E                 	db	110
  1693  00FEFB  20                 	db	32
  1694  00FEFC  2F                 	db	47
  1695  00FEFD  20                 	db	32
  1696  00FEFE  53                 	db	83
  1697  00FEFF  65                 	db	101
  1698  00FF00  72                 	db	114
  1699  00FF01  76                 	db	118
  1700  00FF02  69                 	db	105
  1701  00FF03  63                 	db	99
  1702  00FF04  65                 	db	101
  1703  00FF05  00                 	db	0
  1704  00FF06                     __end_of_vendispmsg:
  1705                           	opt callstack 0
  1706  00FF06                     _clrline:
  1707                           	opt callstack 0
  1708  00FF06  20                 	db	32
  1709  00FF07  20                 	db	32
  1710  00FF08  20                 	db	32
  1711  00FF09  20                 	db	32
  1712  00FF0A  20                 	db	32
  1713  00FF0B  20                 	db	32
  1714  00FF0C  20                 	db	32
  1715  00FF0D  20                 	db	32
  1716  00FF0E  20                 	db	32
  1717  00FF0F  20                 	db	32
  1718  00FF10  20                 	db	32
  1719  00FF11  20                 	db	32
  1720  00FF12  20                 	db	32
  1721  00FF13  20                 	db	32
  1722  00FF14  20                 	db	32
  1723  00FF15  20                 	db	32
  1724  00FF16  20                 	db	32
  1725  00FF17  20                 	db	32
  1726  00FF18  20                 	db	32
  1727  00FF19  20                 	db	32
  1728  00FF1A  00                 	db	0
  1729  00FF1B                     __end_of_clrline:
  1730                           	opt callstack 0
  1731  00FF1B                     _timemsg:
  1732                           	opt callstack 0
  1733  00FF1B  54                 	db	84
  1734  00FF1C  69                 	db	105
  1735  00FF1D  6D                 	db	109
  1736  00FF1E  65                 	db	101
  1737  00FF1F  20                 	db	32
  1738  00FF20  69                 	db	105
  1739  00FF21  6E                 	db	110
  1740  00FF22  20                 	db	32
  1741  00FF23  31                 	db	49
  1742  00FF24  2F                 	db	47
  1743  00FF25  32                 	db	50
  1744  00FF26  73                 	db	115
  1745  00FF27  65                 	db	101
  1746  00FF28  63                 	db	99
  1747  00FF29  20                 	db	32
  1748  00FF2A  3D                 	db	61
  1749  00FF2B  20                 	db	32
  1750  00FF2C  00                 	db	0
  1751  00FF2D                     __end_of_timemsg:
  1752                           	opt callstack 0
  1753  00FF2D                     _pricesetmsg:
  1754                           	opt callstack 0
  1755  00FF2D  20                 	db	32
  1756  00FF2E  20                 	db	32
  1757  00FF2F  20                 	db	32
  1758  00FF30  50                 	db	80
  1759  00FF31  72                 	db	114
  1760  00FF32  69                 	db	105
  1761  00FF33  63                 	db	99
  1762  00FF34  65                 	db	101
  1763  00FF35  20                 	db	32
  1764  00FF36  73                 	db	115
  1765  00FF37  65                 	db	101
  1766  00FF38  74                 	db	116
  1767  00FF39  20                 	db	32
  1768  00FF3A  6D                 	db	109
  1769  00FF3B  6F                 	db	111
  1770  00FF3C  64                 	db	100
  1771  00FF3D  65                 	db	101
  1772  00FF3E  00                 	db	0
  1773  00FF3F                     __end_of_pricesetmsg:
  1774                           	opt callstack 0
  1775  00FF3F                     _creditclr:
  1776                           	opt callstack 0
  1777  00FF3F  43                 	db	67
  1778  00FF40  72                 	db	114
  1779  00FF41  65                 	db	101
  1780  00FF42  64                 	db	100
  1781  00FF43  69                 	db	105
  1782  00FF44  74                 	db	116
  1783  00FF45  73                 	db	115
  1784  00FF46  20                 	db	32
  1785  00FF47  43                 	db	67
  1786  00FF48  6C                 	db	108
  1787  00FF49  65                 	db	101
  1788  00FF4A  61                 	db	97
  1789  00FF4B  72                 	db	114
  1790  00FF4C  65                 	db	101
  1791  00FF4D  64                 	db	100
  1792  00FF4E  00                 	db	0
  1793  00FF4F                     __end_of_creditclr:
  1794                           	opt callstack 0
  1795  00FF4F                     _dacmsg:
  1796                           	opt callstack 0
  1797  00FF4F  53                 	db	83
  1798  00FF50  65                 	db	101
  1799  00FF51  6E                 	db	110
  1800  00FF52  73                 	db	115
  1801  00FF53  69                 	db	105
  1802  00FF54  74                 	db	116
  1803  00FF55  69                 	db	105
  1804  00FF56  76                 	db	118
  1805  00FF57  69                 	db	105
  1806  00FF58  74                 	db	116
  1807  00FF59  79                 	db	121
  1808  00FF5A  20                 	db	32
  1809  00FF5B  00                 	db	0
  1810  00FF5C                     __end_of_dacmsg:
  1811                           	opt callstack 0
  1812  00FF5C                     _credits:
  1813                           	opt callstack 0
  1814  00FF5C  20                 	db	32
  1815  00FF5D  20                 	db	32
  1816  00FF5E  43                 	db	67
  1817  00FF5F  72                 	db	114
  1818  00FF60  65                 	db	101
  1819  00FF61  64                 	db	100
  1820  00FF62  69                 	db	105
  1821  00FF63  74                 	db	116
  1822  00FF64  20                 	db	32
  1823  00FF65  3D                 	db	61
  1824  00FF66  20                 	db	32
  1825  00FF67  52                 	db	82
  1826  00FF68  00                 	db	0
  1827  00FF69                     __end_of_credits:
  1828                           	opt callstack 0
  1829  00FF69                     _chanmsg:
  1830                           	opt callstack 0
  1831  00FF69  20                 	db	32
  1832  00FF6A  20                 	db	32
  1833  00FF6B  20                 	db	32
  1834  00FF6C  43                 	db	67
  1835  00FF6D  68                 	db	104
  1836  00FF6E  61                 	db	97
  1837  00FF6F  6E                 	db	110
  1838  00FF70  6E                 	db	110
  1839  00FF71  65                 	db	101
  1840  00FF72  6C                 	db	108
  1841  00FF73  20                 	db	32
  1842  00FF74  00                 	db	0
  1843  00FF75                     __end_of_chanmsg:
  1844                           	opt callstack 0
  1845  00FF75                     _linkmsg:
  1846                           	opt callstack 0
  1847  00FF75  6C                 	db	108
  1848  00FF76  69                 	db	105
  1849  00FF77  6E                 	db	110
  1850  00FF78  6B                 	db	107
  1851  00FF79  65                 	db	101
  1852  00FF7A  64                 	db	100
  1853  00FF7B  20                 	db	32
  1854  00FF7C  74                 	db	116
  1855  00FF7D  6F                 	db	111
  1856  00FF7E  20                 	db	32
  1857  00FF7F  3A                 	db	58
  1858  00FF80  00                 	db	0
  1859  00FF81                     __end_of_linkmsg:
  1860                           	opt callstack 0
  1861  00FF81                     _sensmsg:
  1862                           	opt callstack 0
  1863  00FF81  53                 	db	83
  1864  00FF82  65                 	db	101
  1865  00FF83  6E                 	db	110
  1866  00FF84  73                 	db	115
  1867  00FF85  6F                 	db	111
  1868  00FF86  72                 	db	114
  1869  00FF87  20                 	db	32
  1870  00FF88  69                 	db	105
  1871  00FF89  73                 	db	115
  1872  00FF8A  20                 	db	32
  1873  00FF8B  00                 	db	0
  1874  00FF8C                     __end_of_sensmsg:
  1875                           	opt callstack 0
  1876  00FF8C                     _cashinmsg:
  1877                           	opt callstack 0
  1878  00FF8C  43                 	db	67
  1879  00FF8D  61                 	db	97
  1880  00FF8E  73                 	db	115
  1881  00FF8F  68                 	db	104
  1882  00FF90  20                 	db	32
  1883  00FF91  69                 	db	105
  1884  00FF92  6E                 	db	110
  1885  00FF93  20                 	db	32
  1886  00FF94  52                 	db	82
  1887  00FF95  00                 	db	0
  1888  00FF96                     __end_of_cashinmsg:
  1889                           	opt callstack 0
  1890  00FF96                     _clrmsg:
  1891                           	opt callstack 0
  1892  00FF96  20                 	db	32
  1893  00FF97  20                 	db	32
  1894  00FF98  20                 	db	32
  1895  00FF99  20                 	db	32
  1896  00FF9A  20                 	db	32
  1897  00FF9B  20                 	db	32
  1898  00FF9C  20                 	db	32
  1899  00FF9D  20                 	db	32
  1900  00FF9E  20                 	db	32
  1901  00FF9F  00                 	db	0
  1902  00FFA0                     __end_of_clrmsg:
  1903                           	opt callstack 0
  1904  00FFA0                     _disabled:
  1905                           	opt callstack 0
  1906  00FFA0  20                 	db	32
  1907  00FFA1  64                 	db	100
  1908  00FFA2  69                 	db	105
  1909  00FFA3  73                 	db	115
  1910  00FFA4  61                 	db	97
  1911  00FFA5  62                 	db	98
  1912  00FFA6  6C                 	db	108
  1913  00FFA7  65                 	db	101
  1914  00FFA8  64                 	db	100
  1915  00FFA9  00                 	db	0
  1916  00FFAA                     __end_of_disabled:
  1917                           	opt callstack 0
  1918  00FFAA                     _enabled:
  1919                           	opt callstack 0
  1920  00FFAA  20                 	db	32
  1921  00FFAB  65                 	db	101
  1922  00FFAC  6E                 	db	110
  1923  00FFAD  61                 	db	97
  1924  00FFAE  62                 	db	98
  1925  00FFAF  6C                 	db	108
  1926  00FFB0  65                 	db	101
  1927  00FFB1  64                 	db	100
  1928  00FFB2  20                 	db	32
  1929  00FFB3  00                 	db	0
  1930  00FFB4                     __end_of_enabled:
  1931                           	opt callstack 0
  1932  00FFB4                     _tenrand:
  1933                           	opt callstack 0
  1934  00FFB4  20                 	db	32
  1935  00FFB5  20                 	db	32
  1936  00FFB6  20                 	db	32
  1937  00FFB7  52                 	db	82
  1938  00FFB8  31                 	db	49
  1939  00FFB9  30                 	db	48
  1940  00FFBA  20                 	db	32
  1941  00FFBB  20                 	db	32
  1942  00FFBC  00                 	db	0
  1943  00FFBD                     __end_of_tenrand:
  1944                           	opt callstack 0
  1945  00FFBD                     _emptymsg:
  1946                           	opt callstack 0
  1947  00FFBD  4E                 	db	78
  1948  00FFBE  6F                 	db	111
  1949  00FFBF  20                 	db	32
  1950  00FFC0  53                 	db	83
  1951  00FFC1  74                 	db	116
  1952  00FFC2  6F                 	db	111
  1953  00FFC3  63                 	db	99
  1954  00FFC4  6B                 	db	107
  1955  00FFC5  00                 	db	0
  1956  00FFC6                     __end_of_emptymsg:
  1957                           	opt callstack 0
  1958  00FFC6                     _totalmsg:
  1959                           	opt callstack 0
  1960  00FFC6  54                 	db	84
  1961  00FFC7  6F                 	db	111
  1962  00FFC8  74                 	db	116
  1963  00FFC9  61                 	db	97
  1964  00FFCA  6C                 	db	108
  1965  00FFCB  20                 	db	32
  1966  00FFCC  52                 	db	82
  1967  00FFCD  00                 	db	0
  1968  00FFCE                     __end_of_totalmsg:
  1969                           	opt callstack 0
  1970  00FFCE                     _twohundredrand:
  1971                           	opt callstack 0
  1972  00FFCE  20                 	db	32
  1973  00FFCF  20                 	db	32
  1974  00FFD0  52                 	db	82
  1975  00FFD1  32                 	db	50
  1976  00FFD2  30                 	db	48
  1977  00FFD3  30                 	db	48
  1978  00FFD4  20                 	db	32
  1979  00FFD5  00                 	db	0
  1980  00FFD6                     __end_of_twohundredrand:
  1981                           	opt callstack 0
  1982  00FFD6                     _hundredrand:
  1983                           	opt callstack 0
  1984  00FFD6  20                 	db	32
  1985  00FFD7  20                 	db	32
  1986  00FFD8  52                 	db	82
  1987  00FFD9  31                 	db	49
  1988  00FFDA  30                 	db	48
  1989  00FFDB  30                 	db	48
  1990  00FFDC  20                 	db	32
  1991  00FFDD  00                 	db	0
  1992  00FFDE                     __end_of_hundredrand:
  1993                           	opt callstack 0
  1994  00FFDE                     _fiftyrand:
  1995                           	opt callstack 0
  1996  00FFDE  20                 	db	32
  1997  00FFDF  20                 	db	32
  1998  00FFE0  52                 	db	82
  1999  00FFE1  35                 	db	53
  2000  00FFE2  30                 	db	48
  2001  00FFE3  20                 	db	32
  2002  00FFE4  20                 	db	32
  2003  00FFE5  00                 	db	0
  2004  00FFE6                     __end_of_fiftyrand:
  2005                           	opt callstack 0
  2006  00FFE6                     _twentyrand:
  2007                           	opt callstack 0
  2008  00FFE6  20                 	db	32
  2009  00FFE7  20                 	db	32
  2010  00FFE8  52                 	db	82
  2011  00FFE9  32                 	db	50
  2012  00FFEA  30                 	db	48
  2013  00FFEB  20                 	db	32
  2014  00FFEC  20                 	db	32
  2015  00FFED  00                 	db	0
  2016  00FFEE                     __end_of_twentyrand:
  2017                           	opt callstack 0
  2018  00FFEE                     _totalvendsm:
  2019                           	opt callstack 0
  2020  00FFEE  56                 	db	86
  2021  00FFEF  65                 	db	101
  2022  00FFF0  6E                 	db	110
  2023  00FFF1  64                 	db	100
  2024  00FFF2  73                 	db	115
  2025  00FFF3  20                 	db	32
  2026  00FFF4  00                 	db	0
  2027  00FFF5                     __end_of_totalvendsm:
  2028                           	opt callstack 0
  2029  00FFF5                     _offmsg:
  2030                           	opt callstack 0
  2031  00FFF5  4F                 	db	79
  2032  00FFF6  66                 	db	102
  2033  00FFF7  66                 	db	102
  2034  00FFF8  00                 	db	0
  2035  00FFF9                     __end_of_offmsg:
  2036                           	opt callstack 0
  2037  00FFF9                     _onmsg:
  2038                           	opt callstack 0
  2039  00FFF9  4F                 	db	79
  2040  00FFFA  6E                 	db	110
  2041  00FFFB  20                 	db	32
  2042  00FFFC  00                 	db	0
  2043  00FFFD                     __end_of_onmsg:
  2044                           	opt callstack 0
  2045  00FFFD  40                 	db	64
  2046  00FFFE                     __end_of_line2:
  2047                           	opt callstack 0
  2048  00FFFE  00                 	db	0	; dummy byte at the end
  2049  0000                     
  2050                           	psect	nvBANK0
  2051  0000A6                     __pnvBANK0:
  2052                           	opt callstack 0
  2053  0000A6                     _timer0ReloadVal16bit:
  2054                           	opt callstack 0
  2055  0000A6                     	ds	2
  2056  0000A8                     _timer5ReloadVal:
  2057                           	opt callstack 0
  2058  0000A8                     	ds	2
  2059  0000AA                     _timer3ReloadVal:
  2060                           	opt callstack 0
  2061  0000AA                     	ds	2
  2062  0000AC                     _timer1ReloadVal:
  2063                           	opt callstack 0
  2064  0000AC                     	ds	2
  2065  0000                     _RX2PPSbits	set	3725
  2066  0000                     _RB5PPS	set	3828
  2067  0000                     _PPSLOCKbits	set	3744
  2068  0000                     _PPSLOCK	set	3744
  2069  0000                     _PIR0bits	set	3786
  2070  0000                     _PIR4bits	set	3790
  2071  0000                     _PIR7bits	set	3793
  2072  0000                     _PMD5	set	3814
  2073  0000                     _PMD4	set	3813
  2074  0000                     _PMD3	set	3812
  2075  0000                     _PMD2	set	3811
  2076  0000                     _PMD1	set	3810
  2077  0000                     _PMD0	set	3809
  2078  0000                     _OSCTUNE	set	3805
  2079  0000                     _OSCFRQ	set	3806
  2080  0000                     _OSCEN	set	3804
  2081  0000                     _OSCCON3	set	3802
  2082  0000                     _OSCCON1	set	3800
  2083  0000                     _PIR3bits	set	3789
  2084  0000                     _RC6PPS	set	3837
  2085  0000                     _RX1PPSbits	set	3765
  2086  0000                     _CMOUT	set	3901
  2087  0000                     _DAC1CON1	set	3892
  2088  0000                     _DAC1CON0	set	3891
  2089  0000                     _CMOUTbits	set	3901
  2090  0000                     _CM1PCH	set	3900
  2091  0000                     _CM1NCH	set	3899
  2092  0000                     _CM1CON1	set	3898
  2093  0000                     _CM1CON0	set	3897
  2094  0000                     _ODCOND	set	3876
  2095  0000                     _ODCONC	set	3871
  2096  0000                     _ODCONB	set	3863
  2097  0000                     _ODCONA	set	3855
  2098  0000                     _ODCONE	set	3884
  2099  0000                     _WPUC	set	3872
  2100  0000                     _WPUA	set	3856
  2101  0000                     _WPUB	set	3864
  2102  0000                     _WPUE	set	3885
  2103  0000                     _WPUD	set	3877
  2104  0000                     _ANSELA	set	3857
  2105  0000                     _ANSELE	set	3886
  2106  0000                     _ANSELD	set	3878
  2107  0000                     _ANSELB	set	3865
  2108  0000                     _ANSELC	set	3873
  2109  0000                     _PORTBbits	set	3982
  2110  0000                     _BAUD1CONbits	set	3999
  2111  0000                     _TX1STAbits	set	3998
  2112  0000                     _PORTA	set	3981
  2113  0000                     _LATCbits	set	3973
  2114  0000                     _LATAbits	set	3971
  2115  0000                     _PORTD	set	3984
  2116  0000                     _PR4	set	4022
  2117  0000                     _TMR4	set	4021
  2118  0000                     _T4CONbits	set	4023
  2119  0000                     _T4RSTbits	set	4026
  2120  0000                     _T4HLTbits	set	4024
  2121  0000                     _T4CON	set	4023
  2122  0000                     _T4TMR	set	4021
  2123  0000                     _T4PR	set	4022
  2124  0000                     _T4RST	set	4026
  2125  0000                     _T4HLT	set	4024
  2126  0000                     _T4CLKCON	set	4025
  2127  0000                     _PR2	set	4028
  2128  0000                     _TMR2	set	4027
  2129  0000                     _T2CONbits	set	4029
  2130  0000                     _T2RSTbits	set	4032
  2131  0000                     _T2HLTbits	set	4030
  2132  0000                     _T2CON	set	4029
  2133  0000                     _T2TMR	set	4027
  2134  0000                     _T2PR	set	4028
  2135  0000                     _T2RST	set	4032
  2136  0000                     _T2HLT	set	4030
  2137  0000                     _T2CLKCON	set	4031
  2138  0000                     _T0CON0bits	set	4053
  2139  0000                     _T0CON0	set	4053
  2140  0000                     _TMR0L	set	4051
  2141  0000                     _TMR0H	set	4052
  2142  0000                     _T0CON1	set	4054
  2143  0000                     _T5GCONbits	set	4036
  2144  0000                     _T5CONbits	set	4035
  2145  0000                     _T5CON	set	4035
  2146  0000                     _TMR5L	set	4033
  2147  0000                     _TMR5H	set	4034
  2148  0000                     _T5CLK	set	4038
  2149  0000                     _T5GATE	set	4037
  2150  0000                     _T5GCON	set	4036
  2151  0000                     _T3GCONbits	set	4042
  2152  0000                     _T3CONbits	set	4041
  2153  0000                     _T3CON	set	4041
  2154  0000                     _TMR3L	set	4039
  2155  0000                     _TMR3H	set	4040
  2156  0000                     _T3CLK	set	4044
  2157  0000                     _T3GATE	set	4043
  2158  0000                     _T3GCON	set	4042
  2159  0000                     _T1GCONbits	set	4048
  2160  0000                     _T1CONbits	set	4047
  2161  0000                     _T1CON	set	4047
  2162  0000                     _TMR1L	set	4045
  2163  0000                     _TMR1H	set	4046
  2164  0000                     _T1CLK	set	4050
  2165  0000                     _T1GATE	set	4049
  2166  0000                     _T1GCON	set	4048
  2167  0000                     _NVMDAT	set	3968
  2168  0000                     _NVMADRL	set	3966
  2169  0000                     _NVMADRH	set	3967
  2170  0000                     _NVMCON2	set	3970
  2171  0000                     _INTCONbits	set	4082
  2172  0000                     _TABLAT	set	4085
  2173  0000                     _TBLPTRL	set	4086
  2174  0000                     _TBLPTRH	set	4087
  2175  0000                     _TBLPTRU	set	4088
  2176  0000                     _NVMCON1bits	set	3969
  2177  0000                     _TX1REG	set	3994
  2178  0000                     _RC1REG	set	3993
  2179  0000                     _RC1STAbits	set	3997
  2180  0000                     _SP1BRGH	set	3996
  2181  0000                     _SP1BRGL	set	3995
  2182  0000                     _TX1STA	set	3998
  2183  0000                     _RC1STA	set	3997
  2184  0000                     _BAUD1CON	set	3999
  2185  0000                     _TRISD	set	3979
  2186  0000                     _TRISC	set	3978
  2187  0000                     _TRISB	set	3977
  2188  0000                     _TRISA	set	3976
  2189  0000                     _TRISE	set	3980
  2190  0000                     _LATC	set	3973
  2191  0000                     _LATB	set	3972
  2192  0000                     _LATA	set	3971
  2193  0000                     _LATD	set	3974
  2194  0000                     _LATE	set	3975
  2195  0000                     _LATA6	set	31774
  2196  0000                     _LATA7	set	31775
  2197                           
  2198                           	psect	nvCOMRAMh
  2199  00005D                     __pnvCOMRAMh:
  2200                           	opt callstack 0
  2201  00005D                     _count:
  2202                           	opt callstack 0
  2203  00005D                     	ds	1
  2204                           
  2205                           ; #config settings
  2206  0000                     
  2207                           	psect	cinit
  2208  0119CE                     __pcinit:
  2209                           	opt callstack 0
  2210  0119CE                     start_initialization:
  2211                           	opt callstack 0
  2212  0119CE                     __initialization:
  2213                           	opt callstack 0
  2214                           
  2215                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2216                           ; load TBLPTR registers with __pidataCOMRAMh
  2217  0119CE  0EDB               	movlw	low __pidataCOMRAMh
  2218  0119D0  6EF6               	movwf	tblptrl,c
  2219  0119D2  0E22               	movlw	high __pidataCOMRAMh
  2220  0119D4  6EF7               	movwf	tblptrh,c
  2221  0119D6  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2222  0119D8  6EF8               	movwf	tblptru,c
  2223  0119DA  0009               	tblrd		*+	;fetch initializer
  2224  0119DC  CFF5 F05E          	movff	tablat,__pdataCOMRAMh
  2225                           
  2226                           ; Initialize objects allocated to COMRAMl (1 bytes)
  2227                           ; load TBLPTR registers with __pidataCOMRAMl
  2228  0119E0  0EDA               	movlw	low __pidataCOMRAMl
  2229  0119E2  6EF6               	movwf	tblptrl,c
  2230  0119E4  0E22               	movlw	high __pidataCOMRAMl
  2231  0119E6  6EF7               	movwf	tblptrh,c
  2232  0119E8  0E01               	movlw	low (__pidataCOMRAMl shr (0+16))
  2233  0119EA  6EF8               	movwf	tblptru,c
  2234  0119EC  0009               	tblrd		*+	;fetch initializer
  2235  0119EE  CFF5 F001          	movff	tablat,__pdataCOMRAMl
  2236                           
  2237                           ; Clear objects allocated to BANK0 (70 bytes)
  2238  0119F2  EE00  F060         	lfsr	0,__pbssBANK0
  2239  0119F6  0E46               	movlw	70
  2240  0119F8                     clear_0:
  2241  0119F8  6AEE               	clrf	postinc0,c
  2242  0119FA  06E8               	decf	wreg,f,c
  2243  0119FC  E1FD               	bnz	clear_0
  2244                           
  2245                           ; Clear objects allocated to COMRAMh (44 bytes)
  2246  0119FE  EE00  F00B         	lfsr	0,__pbssCOMRAMh
  2247  011A02  0E2C               	movlw	44
  2248  011A04                     clear_1:
  2249  011A04  6AEE               	clrf	postinc0,c
  2250  011A06  06E8               	decf	wreg,f,c
  2251  011A08  E1FD               	bnz	clear_1
  2252                           
  2253                           ; Clear objects allocated to COMRAMl (1 bytes)
  2254  011A0A  6A5F               	clrf	__pbssCOMRAMl& (0+255),c
  2255  011A0C                     end_of_initialization:
  2256                           	opt callstack 0
  2257  011A0C                     __end_of__initialization:
  2258                           	opt callstack 0
  2259  011A0C  0100               	movlb	0
  2260  011A0E  EFA2  F080         	goto	_main	;jump to C main() function
  2261                           
  2262                           	psect	bssCOMRAMh
  2263  00000B                     __pbssCOMRAMh:
  2264                           	opt callstack 0
  2265  00000B                     _pricevend:
  2266                           	opt callstack 0
  2267  00000B                     	ds	8
  2268  000013                     _venflags:
  2269                           	opt callstack 0
  2270  000013                     	ds	3
  2271  000016                     _dbcount:
  2272                           	opt callstack 0
  2273  000016                     	ds	2
  2274  000018                     _venderr:
  2275                           	opt callstack 0
  2276  000018                     	ds	1
  2277  000019                     _senschk:
  2278                           	opt callstack 0
  2279  000019                     	ds	1
  2280  00001A                     _channel:
  2281                           	opt callstack 0
  2282  00001A                     	ds	1
  2283  00001B                     _errormask:
  2284                           	opt callstack 0
  2285  00001B                     	ds	1
  2286  00001C                     _chanmask:
  2287                           	opt callstack 0
  2288  00001C                     	ds	1
  2289  00001D                     _lowprice:
  2290                           	opt callstack 0
  2291  00001D                     	ds	1
  2292  00001E                     _highprice:
  2293                           	opt callstack 0
  2294  00001E                     	ds	1
  2295  00001F                     _senspos:
  2296                           	opt callstack 0
  2297  00001F                     	ds	1
  2298  000020                     _sensorval:
  2299                           	opt callstack 0
  2300  000020                     	ds	1
  2301  000021                     _vendprice:
  2302                           	opt callstack 0
  2303  000021                     	ds	1
  2304  000022                     _buttons:
  2305                           	opt callstack 0
  2306  000022                     	ds	1
  2307  000023                     _cash:
  2308                           	opt callstack 0
  2309  000023                     	ds	1
  2310  000024                     _credit:
  2311                           	opt callstack 0
  2312  000024                     	ds	1
  2313  000025                     _outcoins:
  2314                           	opt callstack 0
  2315  000025                     	ds	1
  2316  000026                     _change:
  2317                           	opt callstack 0
  2318  000026                     	ds	1
  2319  000027                     _noteen_byte:
  2320                           	opt callstack 0
  2321  000027                     	ds	1
  2322  000028                     _noteen:
  2323                           	opt callstack 0
  2324  000028                     	ds	1
  2325  000029                     _mdbflags:
  2326                           	opt callstack 0
  2327  000029                     	ds	1
  2328  00002A                     _chkbyte:
  2329                           	opt callstack 0
  2330  00002A                     	ds	1
  2331  00002B                     _notebyte:
  2332                           	opt callstack 0
  2333  00002B                     	ds	1
  2334  00002C                     _mcount:
  2335                           	opt callstack 0
  2336  00002C                     	ds	1
  2337  00002D                     _dspposition:
  2338                           	opt callstack 0
  2339  00002D                     	ds	1
  2340  00002E                     _ercode:
  2341                           	opt callstack 0
  2342  00002E                     	ds	1
  2343  00002F                     _stradd:
  2344                           	opt callstack 0
  2345  00002F                     	ds	1
  2346  000030                     _lcdata:
  2347                           	opt callstack 0
  2348  000030                     	ds	1
  2349  000031                     _bflag:
  2350                           	opt callstack 0
  2351  000031                     	ds	1
  2352  000032                     _pnvcash:
  2353                           	opt callstack 0
  2354  000032                     	ds	3
  2355  000035                     _pvcash:
  2356                           	opt callstack 0
  2357  000035                     	ds	2
  2358                           
  2359                           	psect	dataCOMRAMh
  2360  00005E                     __pdataCOMRAMh:
  2361                           	opt callstack 0
  2362  00005E                     _notenum:
  2363                           	opt callstack 0
  2364  00005E                     	ds	1
  2365                           
  2366                           	psect	bssCOMRAMl
  2367  00005F                     __pbssCOMRAMl:
  2368                           	opt callstack 0
  2369  00005F                     _cctflags:
  2370                           	opt callstack 0
  2371  00005F                     	ds	1
  2372                           
  2373                           	psect	dataCOMRAMl
  2374  000001                     __pdataCOMRAMl:
  2375                           	opt callstack 0
  2376  000001                     _hopercount:
  2377                           	opt callstack 0
  2378  000001                     	ds	1
  2379                           
  2380                           	psect	bssBANK0
  2381  000060                     __pbssBANK0:
  2382                           	opt callstack 0
  2383  000060                     _mdbdata:
  2384                           	opt callstack 0
  2385  000060                     	ds	32
  2386  000080                     _dummy:
  2387                           	opt callstack 0
  2388  000080                     	ds	8
  2389  000088                     _tvends:
  2390                           	opt callstack 0
  2391  000088                     	ds	8
  2392  000090                     _nvcash:
  2393                           	opt callstack 0
  2394  000090                     	ds	3
  2395  000093                     _hpserial:
  2396                           	opt callstack 0
  2397  000093                     	ds	3
  2398  000096                     _hexnum:
  2399                           	opt callstack 0
  2400  000096                     	ds	3
  2401  000099                     _vcashout:
  2402                           	opt callstack 0
  2403  000099                     	ds	2
  2404  00009B                     _vcash:
  2405                           	opt callstack 0
  2406  00009B                     	ds	2
  2407  00009D                     _command:
  2408                           	opt callstack 0
  2409  00009D                     	ds	1
  2410  00009E                     _nobytes:
  2411                           	opt callstack 0
  2412  00009E                     	ds	1
  2413  00009F                     _dest:
  2414                           	opt callstack 0
  2415  00009F                     	ds	1
  2416  0000A0                     _mdbtxbyte:
  2417                           	opt callstack 0
  2418  0000A0                     	ds	1
  2419  0000A1                     _errorflags:
  2420                           	opt callstack 0
  2421  0000A1                     	ds	1
  2422  0000A2                     _slvadd:
  2423                           	opt callstack 0
  2424  0000A2                     	ds	1
  2425  0000A3                     _lcdaddress:
  2426                           	opt callstack 0
  2427  0000A3                     	ds	1
  2428  0000A4                     _lcdline:
  2429                           	opt callstack 0
  2430  0000A4                     	ds	1
  2431  0000A5                     _lcdfunc:
  2432                           	opt callstack 0
  2433  0000A5                     	ds	1
  2434                           
  2435                           	psect	cstackCOMRAMh
  2436  000037                     __pcstackCOMRAMh:
  2437                           	opt callstack 0
  2438  000037                     ??_TMR3_Initialize:
  2439  000037                     ??_TMR5_Initialize:
  2440  000037                     ??_TMR1_Initialize:
  2441  000037                     ??_TMR0_Initialize:
  2442  000037                     ??_butin:
  2443  000037                     ??_switch_read:
  2444  000037                     ??_Reset_hopper:
  2445  000037                     ?___wmul:
  2446                           	opt callstack 0
  2447  000037                     ?___ltdiv:
  2448                           	opt callstack 0
  2449  000037                     ?___ltmod:
  2450                           	opt callstack 0
  2451  000037                     EUSART1_Write@txData:
  2452                           	opt callstack 0
  2453  000037                     DAC1_SetOutput@inputData:
  2454                           	opt callstack 0
  2455  000037                     read_busy@savelate:
  2456                           	opt callstack 0
  2457  000037                     Read_Service@senval:
  2458                           	opt callstack 0
  2459  000037                     get_channel@butons:
  2460                           	opt callstack 0
  2461  000037                     init_mdbdata@initdata:
  2462                           	opt callstack 0
  2463  000037                     ___lbdiv@divisor:
  2464                           	opt callstack 0
  2465  000037                     DATAEE_WriteByte@bAdd:
  2466                           	opt callstack 0
  2467  000037                     DATAEE_ReadByte@bAdd:
  2468                           	opt callstack 0
  2469  000037                     TMR0_Write16bitTimer@timerVal:
  2470                           	opt callstack 0
  2471  000037                     ___wmul@multiplier:
  2472                           	opt callstack 0
  2473  000037                     ___ltdiv@dividend:
  2474                           	opt callstack 0
  2475  000037                     ___ltmod@dividend:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 3 bytes @ 0x0
  2479  000037                     	ds	1
  2480  000038                     read_busy@savelatd:
  2481                           	opt callstack 0
  2482  000038                     butin@butons:
  2483                           	opt callstack 0
  2484  000038                     init_mdbdata@i:
  2485                           	opt callstack 0
  2486  000038                     mdb_transmit@txbyte:
  2487                           	opt callstack 0
  2488  000038                     find_highprice@i:
  2489                           	opt callstack 0
  2490  000038                     find_lowprice@i:
  2491                           	opt callstack 0
  2492  000038                     ___lbdiv@dividend:
  2493                           	opt callstack 0
  2494                           
  2495                           ; 1 bytes @ 0x1
  2496  000038                     	ds	1
  2497  000039                     ??_mdb_unlock:
  2498  000039                     ??_butindb:
  2499  000039                     DATAEE_WriteByte@bData:
  2500                           	opt callstack 0
  2501  000039                     lcd_write@savelatd:
  2502                           	opt callstack 0
  2503  000039                     mdb_comm@mcount:
  2504                           	opt callstack 0
  2505  000039                     ___lbdiv@counter:
  2506                           	opt callstack 0
  2507  000039                     Init_vendmem@chanlinkbits:
  2508                           	opt callstack 0
  2509  000039                     Read_NVstore@storeadd:
  2510                           	opt callstack 0
  2511  000039                     ___wmul@multiplicand:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x2
  2515  000039                     	ds	1
  2516  00003A                     ??_vend_nosense:
  2517  00003A                     DATAEE_WriteByte@GIEBitValue:
  2518                           	opt callstack 0
  2519  00003A                     lcd_write@lcdata:
  2520                           	opt callstack 0
  2521  00003A                     mdb_comm@slvadd:
  2522                           	opt callstack 0
  2523  00003A                     ___lbdiv@quotient:
  2524                           	opt callstack 0
  2525  00003A                     ___ltdiv@divisor:
  2526                           	opt callstack 0
  2527  00003A                     ___ltmod@divisor:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 3 bytes @ 0x3
  2531  00003A                     	ds	1
  2532  00003B                     ??_disable_channel:
  2533  00003B                     lcd_dispadd@lcdaddress:
  2534                           	opt callstack 0
  2535  00003B                     credit_subtract@credit:
  2536                           	opt callstack 0
  2537  00003B                     butindb@butval:
  2538                           	opt callstack 0
  2539  00003B                     mdb_comm@i:
  2540                           	opt callstack 0
  2541  00003B                     update_vends@x:
  2542                           	opt callstack 0
  2543  00003B                     Init_vendmem@chanlink:
  2544                           	opt callstack 0
  2545  00003B                     Write_NVstore@storeadd:
  2546                           	opt callstack 0
  2547  00003B                     Read_NVstore@storemem:
  2548                           	opt callstack 0
  2549  00003B                     Clear_Totals@eeaddress:
  2550                           	opt callstack 0
  2551  00003B                     ___wmul@product:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x4
  2555  00003B                     	ds	1
  2556  00003C                     ??_mdb_poll:
  2557  00003C                     lcd_dispadd@lcdatasave:
  2558                           	opt callstack 0
  2559  00003C                     butindb@butt:
  2560                           	opt callstack 0
  2561  00003C                     vend_nosense@chanel:
  2562                           	opt callstack 0
  2563  00003C                     update_vends@chanel:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 1 bytes @ 0x5
  2567  00003C                     	ds	1
  2568  00003D                     ??_lcd_writeC:
  2569  00003D                     Init_vendmem@i:
  2570                           	opt callstack 0
  2571  00003D                     Read_NVstore@storesize:
  2572                           	opt callstack 0
  2573  00003D                     set_motortime@chanel:
  2574                           	opt callstack 0
  2575  00003D                     disable_channel@channel:
  2576                           	opt callstack 0
  2577  00003D                     ___ltmod@counter:
  2578                           	opt callstack 0
  2579  00003D                     Write_NVstore@storemem:
  2580                           	opt callstack 0
  2581  00003D                     ___ltdiv@quotient:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 3 bytes @ 0x6
  2585  00003D                     	ds	1
  2586  00003E                     Read_NVstore@i:
  2587                           	opt callstack 0
  2588  00003E                     mdb_reset@i_3863:
  2589                           	opt callstack 0
  2590  00003E                     set_motortime@i:
  2591                           	opt callstack 0
  2592  00003E                     disable_channel@errormask:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 1 bytes @ 0x7
  2596  00003E                     	ds	1
  2597  00003F                     ??_mdb_init:
  2598  00003F                     lcd_writeC@lcdata:
  2599                           	opt callstack 0
  2600  00003F                     Write_NVstore@storesize:
  2601                           	opt callstack 0
  2602  00003F                     set_motortime@time:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 2 bytes @ 0x8
  2606  00003F                     	ds	1
  2607  000040                     ??_displ_code:
  2608  000040                     lcd_test@character:
  2609                           	opt callstack 0
  2610  000040                     Write_NVstore@i:
  2611                           	opt callstack 0
  2612  000040                     ___ltdiv@counter:
  2613                           	opt callstack 0
  2614  000040                     lcd_string@lcdstring:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x9
  2618  000040                     	ds	1
  2619  000041                     ??_lcd_init:
  2620  000041                     ??_vend_dispense:
  2621  000041                     Update_cashaudit@addcash:
  2622                           	opt callstack 0
  2623  000041                     Update_coinsout@coinsout:
  2624                           	opt callstack 0
  2625  000041                     displ_hex@hexnum:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 3 bytes @ 0xA
  2629  000041                     	ds	1
  2630  000042                     ??_hopper_pay:
  2631  000042                     displ_code@ercode:
  2632                           	opt callstack 0
  2633  000042                     lcd_string@lcdline:
  2634                           	opt callstack 0
  2635  000042                     credit_add@credit:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 1 bytes @ 0xB
  2639  000042                     	ds	1
  2640  000043                     ??_lcd_string:
  2641  000043                     hopper_pay@change:
  2642                           	opt callstack 0
  2643  000043                     vend_dispense@chanel:
  2644                           	opt callstack 0
  2645                           
  2646                           ; 1 bytes @ 0xC
  2647  000043                     	ds	1
  2648  000044                     give_change@paycash:
  2649                           	opt callstack 0
  2650  000044                     dispense@sensmask:
  2651                           	opt callstack 0
  2652  000044                     displ_hex@value:
  2653                           	opt callstack 0
  2654                           
  2655                           ; 8 bytes @ 0xD
  2656  000044                     	ds	1
  2657  000045                     ??_Clear_cred:
  2658  000045                     ??_Reset_settings:
  2659  000045                     displ_lflags@linkflgs:
  2660                           	opt callstack 0
  2661  000045                     displ_sflags@chanel:
  2662                           	opt callstack 0
  2663  000045                     displ_nendis@note2disp:
  2664                           	opt callstack 0
  2665  000045                     give_change@i:
  2666                           	opt callstack 0
  2667  000045                     dispense@chanel:
  2668                           	opt callstack 0
  2669  000045                     displ_note@notestring:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 2 bytes @ 0xE
  2673  000045                     	ds	1
  2674  000046                     displ_lflags@chanel:
  2675                           	opt callstack 0
  2676  000046                     displ_sflags@chanbit:
  2677                           	opt callstack 0
  2678  000046                     displ_nendis@x:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 1 bytes @ 0xF
  2682  000046                     	ds	1
  2683  000047                     ??_enable_notes:
  2684  000047                     displ_lflags@lchan:
  2685                           	opt callstack 0
  2686  000047                     displ_sflags@senseflags:
  2687                           	opt callstack 0
  2688  000047                     price_check@savechan:
  2689                           	opt callstack 0
  2690  000047                     Reset_settings@chanlinkbits:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x10
  2694  000047                     	ds	1
  2695  000048                     ??_off_sens:
  2696  000048                     price_check@savebut:
  2697                           	opt callstack 0
  2698                           
  2699                           ; 1 bytes @ 0x11
  2700  000048                     	ds	1
  2701  000049                     Link_chan@channel:
  2702                           	opt callstack 0
  2703  000049                     enable_notes@notenum:
  2704                           	opt callstack 0
  2705  000049                     price_check@chanlinkbit:
  2706                           	opt callstack 0
  2707  000049                     Reset_settings@chantimebits:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 2 bytes @ 0x12
  2711  000049                     	ds	1
  2712  00004A                     ??_set_notes:
  2713  00004A                     Link_chan@linkflags:
  2714                           	opt callstack 0
  2715  00004A                     off_sens@channel:
  2716                           	opt callstack 0
  2717  00004A                     price_check@i:
  2718                           	opt callstack 0
  2719                           
  2720                           ; 1 bytes @ 0x13
  2721  00004A                     	ds	1
  2722  00004B                     ??_Chan_link:
  2723  00004B                     off_sens@chanbit:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 1 bytes @ 0x14
  2727  00004B                     	ds	1
  2728  00004C                     off_sens@senseflags:
  2729                           	opt callstack 0
  2730  00004C                     displ_hex@hexnumsave:
  2731                           	opt callstack 0
  2732                           
  2733                           ; 3 bytes @ 0x15
  2734  00004C                     	ds	1
  2735  00004D                     ??_Sens_off:
  2736                           
  2737                           ; 1 bytes @ 0x16
  2738  00004D                     	ds	2
  2739  00004F                     displ_hex@i:
  2740                           	opt callstack 0
  2741                           
  2742                           ; 1 bytes @ 0x18
  2743  00004F                     	ds	1
  2744  000050                     displ_sens@dmsgpos:
  2745                           	opt callstack 0
  2746  000050                     displ_time@channel:
  2747                           	opt callstack 0
  2748  000050                     displ_credit@cash:
  2749                           	opt callstack 0
  2750  000050                     displ_price@vendprice:
  2751                           	opt callstack 0
  2752  000050                     Audit@vends:
  2753                           	opt callstack 0
  2754  000050                     Update_Hopcoin@direction:
  2755                           	opt callstack 0
  2756                           
  2757                           ; 1 bytes @ 0x19
  2758  000050                     	ds	1
  2759  000051                     ??_Update_Hopcoin:
  2760  000051                     ??_set_price:
  2761  000051                     displ_sens@smsgpos:
  2762                           	opt callstack 0
  2763  000051                     displ_time@motortime:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 1 bytes @ 0x1A
  2767  000051                     	ds	1
  2768  000052                     ??_Sensor_set:
  2769  000052                     ??_Vend_timeset:
  2770                           
  2771                           ; 1 bytes @ 0x1B
  2772  000052                     	ds	1
  2773  000053                     Update_Hopcoin@newval:
  2774                           	opt callstack 0
  2775  000053                     set_price@buttons:
  2776                           	opt callstack 0
  2777                           
  2778                           ; 1 bytes @ 0x1C
  2779  000053                     	ds	1
  2780  000054                     ??_Hopper_coin:
  2781  000054                     Sensor_set@dacpos:
  2782                           	opt callstack 0
  2783  000054                     set_price@channel:
  2784                           	opt callstack 0
  2785  000054                     Vend_timeset@chantime:
  2786                           	opt callstack 0
  2787                           
  2788                           ; 1 bytes @ 0x1D
  2789  000054                     	ds	1
  2790  000055                     Vend_timeset@channel:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 1 bytes @ 0x1E
  2794  000055                     	ds	1
  2795  000056                     ??_Vend_setup:
  2796  000056                     Hopper_coin@coinval:
  2797                           	opt callstack 0
  2798                           
  2799                           ; 1 bytes @ 0x1F
  2800  000056                     	ds	2
  2801  000058                     ??_enter_service:
  2802                           
  2803                           ; 1 bytes @ 0x21
  2804  000058                     	ds	2
  2805  00005A                     ??_main:
  2806                           
  2807                           ; 1 bytes @ 0x23
  2808  00005A                     	ds	2
  2809  00005C                     main@channel:
  2810                           	opt callstack 0
  2811                           
  2812                           ; 1 bytes @ 0x25
  2813  00005C                     	ds	1
  2814                           
  2815                           	psect	cstackCOMRAMl
  2816  000000                     __pcstackCOMRAMl:
  2817                           	opt callstack 0
  2818  000000                     
  2819                           ; 1 bytes @ 0x0
  2820 ;;
  2821 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2822 ;;
  2823 ;; *************** function _main *****************
  2824 ;; Defined at:
  2825 ;;		line 58 in file "main.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  channel         1   37[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:        3 bytes
  2844 ;; Hardware stack levels required when called:   11
  2845 ;; This function calls:
  2846 ;;		_CMP1_GetOutputStatus
  2847 ;;		_DATAEE_ReadByte
  2848 ;;		_SYSTEM_Initialize
  2849 ;;		_butin
  2850 ;;		_credit_add
  2851 ;;		_displ_credit
  2852 ;;		_displ_nochange
  2853 ;;		_displ_noteer
  2854 ;;		_displ_price
  2855 ;;		_enter_service
  2856 ;;		_get_channel
  2857 ;;		_lcd_init
  2858 ;;		_lcd_string
  2859 ;;		_mdb_init
  2860 ;;		_mdb_on
  2861 ;;		_mdb_poll
  2862 ;;		_price_check
  2863 ;;		_vend_init
  2864 ;; This function is called by:
  2865 ;;		Startup code after reset
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text0
  2870  010144                     __ptext0:
  2871                           	opt callstack 0
  2872  010144                     _main:
  2873                           	opt callstack 20
  2874                           
  2875                           ;main.c: 61:     SYSTEM_Initialize();
  2876                           
  2877                           ;incstack = 0
  2878  010144  EC51  F08F         	call	_SYSTEM_Initialize	;wreg free
  2879                           
  2880                           ;main.c: 63:     lcd_init();
  2881  010148  ECC0  F089         	call	_lcd_init	;wreg free
  2882                           
  2883                           ;main.c: 64:     mdb_on();
  2884  01014C  EC67  F091         	call	_mdb_on	;wreg free
  2885                           
  2886                           ;main.c: 65:     vend_init();
  2887  010150  ECF0  F086         	call	_vend_init	;wreg free
  2888  010154                     l1011:
  2889  010154  F000               	nop		;# 
  2890                           
  2891                           ;main.c: 71:         DAC1CON1 = 0x01;
  2892  010156  0E01               	movlw	1
  2893  010158  010F               	movlb	15	; () banked
  2894  01015A  6F34               	movwf	52,b	;volatile
  2895                           
  2896                           ; BSR set to: 15
  2897                           ;main.c: 72:         if (!CMP1_GetOutputStatus())
  2898  01015C  EC33  F091         	call	_CMP1_GetOutputStatus	;wreg free
  2899  010160  0900               	iorlw	0
  2900  010162  B4D8               	btfsc	status,2,c
  2901                           
  2902                           ;main.c: 73:         {;main.c: 74:             venflags.service = 1;
  2903  010164  8E13               	bsf	_venflags,7,c
  2904                           
  2905                           ;main.c: 77:         DAC1CON1 = sensorval;
  2906                           
  2907                           ;main.c: 76:         }
  2908  010166  C020  FF34         	movff	_sensorval,3892	;volatile
  2909                           
  2910                           ;main.c: 79:         if(venflags.service == 1)
  2911  01016A  BE13               	btfsc	_venflags,7,c
  2912                           
  2913                           ;main.c: 80:         {;main.c: 81:             enter_service();
  2914  01016C  EC9F  F086         	call	_enter_service	;wreg free
  2915                           
  2916                           ;main.c: 84:         if(venflags.inscoin == 1)
  2917  010170  A413               	btfss	_venflags,2,c
  2918  010172  D00C               	goto	l9826
  2919  010174  0E29               	movlw	low _inscoin
  2920  010176  6E40               	movwf	lcd_string@lcdstring,c
  2921  010178  0EFE               	movlw	high _inscoin
  2922  01017A  6E41               	movwf	lcd_string@lcdstring+1,c
  2923  01017C  0E00               	movlw	0
  2924  01017E  6E42               	movwf	lcd_string@lcdline,c
  2925  010180  ECCC  F088         	call	_lcd_string	;wreg free
  2926                           
  2927                           ;main.c: 87:             venflags.inscoin = 0;
  2928  010184  9413               	bcf	_venflags,2,c
  2929                           
  2930                           ;main.c: 88:             if(venflags.nochange)
  2931  010186  B613               	btfsc	_venflags,3,c
  2932                           
  2933                           ;main.c: 89:             {;main.c: 90:                 displ_nochange();
  2934  010188  EC9C  F090         	call	_displ_nochange	;wreg free
  2935  01018C                     l9826:
  2936                           
  2937                           ;main.c: 93:         if(venflags.initialrun == 1)
  2938  01018C  BA13               	btfsc	_venflags,5,c
  2939                           
  2940                           ;main.c: 94:         {;main.c: 95:             venflags.initialrun = 0;
  2941  01018E  9A13               	bcf	_venflags,5,c
  2942                           
  2943                           ;main.c: 98:         if(venflags.credisplay == 1)
  2944                           
  2945                           ;main.c: 97:         }
  2946  010190  A813               	btfss	_venflags,4,c
  2947  010192  D005               	goto	l9836
  2948                           
  2949                           ;main.c: 99:         {;main.c: 100:             displ_credit();
  2950  010194  EC05  F090         	call	_displ_credit	;wreg free
  2951                           
  2952                           ;main.c: 101:             if(venflags.nochange)
  2953  010198  B613               	btfsc	_venflags,3,c
  2954                           
  2955                           ;main.c: 102:             {;main.c: 103:                 displ_nochange();
  2956  01019A  EC9C  F090         	call	_displ_nochange	;wreg free
  2957  01019E                     l9836:
  2958                           
  2959                           ;main.c: 107:         if(PIR4bits.TMR3IF)
  2960  01019E  010E               	movlb	14	; () banked
  2961  0101A0  A5CE               	btfss	206,2,b	;volatile
  2962  0101A2  D030               	goto	l9870
  2963                           
  2964                           ; BSR set to: 14
  2965                           ;main.c: 108:         {;main.c: 109:             credit = mdb_poll();
  2966  0101A4  EC3C  F081         	call	_mdb_poll	;wreg free
  2967  0101A8  6E24               	movwf	_credit,c	;volatile
  2968                           
  2969                           ;main.c: 110:             if(credit != 0x00)
  2970  0101AA  5024               	movf	_credit,w,c	;volatile
  2971  0101AC  B4D8               	btfsc	status,2,c
  2972  0101AE  D028               	goto	l1020
  2973                           
  2974                           ;main.c: 111:             {;main.c: 112:                 if(mdbflags.noteerr == 1)
  2975  0101B0  B229               	btfsc	_mdbflags,1,c
  2976  0101B2  D00C               	goto	l9862
  2977  0101B4  D020               	goto	l9864
  2978  0101B6                     l9846:
  2979  0101B6  ECC3  F08C         	call	_mdb_init	;wreg free
  2980  0101BA                     l9848:
  2981                           
  2982                           ;main.c: 119:                         credit = 0;
  2983  0101BA  0E00               	movlw	0
  2984  0101BC  6E24               	movwf	_credit,c	;volatile
  2985                           
  2986                           ;main.c: 120:                         break;
  2987  0101BE  D022               	goto	l9870
  2988  0101C0                     l1025:
  2989                           
  2990                           ;main.c: 123:                             if(mdbflags.vending)
  2991  0101C0  B829               	btfsc	_mdbflags,4,c
  2992  0101C2  D7FB               	goto	l9848
  2993  0101C4  D7F8               	goto	l9846
  2994  0101C6                     l9860:
  2995  0101C6  EC39  F090         	call	_displ_noteer	;wreg free
  2996                           
  2997                           ;main.c: 140:                     }
  2998  0101CA  D01C               	goto	l9870
  2999  0101CC                     l9862:
  3000  0101CC  5024               	movf	_credit,w,c	;volatile
  3001  0101CE  6E5A               	movwf	??_main& (0+255),c
  3002  0101D0  6A5B               	clrf	(??_main+1)& (0+255),c
  3003                           
  3004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3005                           ; Switch size 1, requested type "simple"
  3006                           ; Number of cases is 1, Range of values is 0 to 0
  3007                           ; switch strategies available:
  3008                           ; Name         Instructions Cycles
  3009                           ; simple_byte            4     3 (average)
  3010                           ;	Chosen strategy is simple_byte
  3011  0101D2  505B               	movf	??_main+1,w,c
  3012  0101D4  0A00               	xorlw	0	; case 0
  3013  0101D6  A4D8               	btfss	status,2,c
  3014  0101D8  D7F6               	goto	l9860
  3015                           
  3016                           ; Switch size 1, requested type "simple"
  3017                           ; Number of cases is 4, Range of values is 6 to 16
  3018                           ; switch strategies available:
  3019                           ; Name         Instructions Cycles
  3020                           ; simple_byte           13     7 (average)
  3021                           ;	Chosen strategy is simple_byte
  3022  0101DA  505A               	movf	??_main,w,c
  3023  0101DC  0A06               	xorlw	6	; case 6
  3024  0101DE  B4D8               	btfsc	status,2,c
  3025  0101E0  D7EA               	goto	l9846
  3026  0101E2  0A0F               	xorlw	15	; case 9
  3027  0101E4  B4D8               	btfsc	status,2,c
  3028  0101E6  D7EC               	goto	l1025
  3029  0101E8  0A05               	xorlw	5	; case 12
  3030  0101EA  B4D8               	btfsc	status,2,c
  3031  0101EC  D7E6               	goto	l9848
  3032  0101EE  0A1C               	xorlw	28	; case 16
  3033  0101F0  B4D8               	btfsc	status,2,c
  3034  0101F2  D7E3               	goto	l9848
  3035  0101F4  D7E8               	goto	l9860
  3036  0101F6                     l9864:
  3037                           
  3038                           ;main.c: 143:                 {;main.c: 144:                     credit_add(credit);
  3039  0101F6  5024               	movf	_credit,w,c	;volatile
  3040  0101F8  ECED  F08D         	call	_credit_add
  3041                           
  3042                           ;main.c: 145:                     venflags.iscredit = 1;
  3043  0101FC  8013               	bsf	_venflags,0,c
  3044  0101FE  D002               	goto	l9870
  3045  010200                     l1020:
  3046                           
  3047                           ;main.c: 149:             {;main.c: 150:                 if(mdbflags.noteerr == 1)
  3048  010200  B229               	btfsc	_mdbflags,1,c
  3049  010202  D7E1               	goto	l9860
  3050  010204                     l9870:
  3051                           
  3052                           ;main.c: 158:         if(venflags.iscredit)
  3053  010204  A013               	btfss	_venflags,0,c
  3054  010206  D007               	goto	l9876
  3055                           
  3056                           ;main.c: 159:         {;main.c: 160:             if(price_check())
  3057  010208  EC00  F080         	call	_price_check	;wreg free
  3058  01020C  0900               	iorlw	0
  3059  01020E  B4D8               	btfsc	status,2,c
  3060  010210  D7A1               	goto	l1011
  3061  010212  00FF               	reset		;# 
  3062  010214  D79F               	goto	l1011
  3063  010216                     l9876:
  3064                           
  3065                           ;main.c: 166:         {;main.c: 167:             if(butin() != 0)
  3066  010216  EC79  F08C         	call	_butin	;wreg free
  3067  01021A  0900               	iorlw	0
  3068  01021C  B4D8               	btfsc	status,2,c
  3069  01021E  D027               	goto	l1037
  3070                           
  3071                           ;main.c: 168:             {;main.c: 170:                 buttons = butin();
  3072  010220  EC79  F08C         	call	_butin	;wreg free
  3073  010224  6E22               	movwf	_buttons,c	;volatile
  3074                           
  3075                           ;main.c: 171:                 if(((buttons & ~errormask) == 0x00) && !venflags.pricedisp
      +                          lay)
  3076  010226  501B               	movf	_errormask,w,c	;volatile
  3077  010228  0AFF               	xorlw	255
  3078  01022A  1422               	andwf	_buttons,w,c	;volatile
  3079  01022C  0900               	iorlw	0
  3080  01022E  B4D8               	btfsc	status,2,c
  3081  010230  B415               	btfsc	_venflags+2,2,c
  3082  010232  D009               	goto	l9888
  3083  010234  0EBD               	movlw	low _emptymsg
  3084  010236  6E40               	movwf	lcd_string@lcdstring,c
  3085  010238  0EFF               	movlw	high _emptymsg
  3086  01023A  6E41               	movwf	lcd_string@lcdstring+1,c
  3087  01023C  0E00               	movlw	0
  3088  01023E  6E42               	movwf	lcd_string@lcdline,c
  3089  010240  ECCC  F088         	call	_lcd_string	;wreg free
  3090                           
  3091                           ;main.c: 174:                     venflags.pricedisplay = 1;
  3092  010244  8415               	bsf	_venflags+2,2,c
  3093  010246                     l9888:
  3094                           
  3095                           ;main.c: 176:                 if(!venflags.pricedisplay)
  3096  010246  B415               	btfsc	_venflags+2,2,c
  3097  010248  D785               	goto	l1011
  3098                           
  3099                           ;main.c: 177:                 {;main.c: 178:                     uint8_t channel = get_c
      +                          hannel(buttons);
  3100  01024A  5022               	movf	_buttons,w,c	;volatile
  3101  01024C  EC66  F090         	call	_get_channel
  3102  010250  6E5C               	movwf	main@channel,c
  3103  010252  0E0F               	movlw	15
  3104  010254  245C               	addwf	main@channel,w,c
  3105  010256  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3106  010258  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  3107  01025A  0E00               	movlw	0
  3108  01025C  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  3109  01025E  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3110  010262  6E21               	movwf	_vendprice,c	;volatile
  3111                           
  3112                           ;main.c: 180:                     displ_price(vendprice);
  3113  010264  5021               	movf	_vendprice,w,c	;volatile
  3114  010266  EC18  F090         	call	_displ_price
  3115                           
  3116                           ;main.c: 181:                     venflags.pricedisplay = 1;
  3117  01026A  8415               	bsf	_venflags+2,2,c
  3118  01026C  D773               	goto	l1011
  3119  01026E                     l1037:
  3120                           
  3121                           ;main.c: 185:             {;main.c: 186:                 if(venflags.pricedisplay)
  3122  01026E  A415               	btfss	_venflags+2,2,c
  3123  010270  D771               	goto	l1011
  3124                           
  3125                           ;main.c: 187:                 {;main.c: 188:                     venflags.pricedisplay =
      +                           0;
  3126  010272  9415               	bcf	_venflags+2,2,c
  3127                           
  3128                           ;main.c: 189:                     venflags.inscoin = 1;
  3129  010274  8413               	bsf	_venflags,2,c
  3130                           
  3131                           ;main.c: 194:         }
  3132  010276  D76E               	goto	l1011
  3133  010278                     __end_of_main:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _vend_init *****************
  3137 ;; Defined at:
  3138 ;;		line 33 in file "vend.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    6
  3159 ;; This function calls:
  3160 ;;		_DAC1_SetOutput
  3161 ;;		_DATAEE_ReadByte
  3162 ;;		_Init_vendmem
  3163 ;;		_credit_check
  3164 ;;		_find_highprice
  3165 ;;		_find_lowprice
  3166 ;;		_lcd_string
  3167 ;;		_mdb_init
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text1
  3174  010DE0                     __ptext1:
  3175                           	opt callstack 0
  3176  010DE0                     _vend_init:
  3177                           	opt callstack 24
  3178                           
  3179                           ;incstack = 0
  3180  010DE0  0E00               	movlw	0
  3181  010DE2  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  3182  010DE4  0E17               	movlw	23
  3183  010DE6  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3184  010DE8  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3185  010DEC  6E18               	movwf	_venderr,c
  3186                           
  3187                           ;vend.c: 37:     venflags.hiprice = 0;
  3188  010DEE  9815               	bcf	_venflags+2,4,c
  3189  010DF0  0E00               	movlw	0
  3190  010DF2  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  3191  010DF4  0E2F               	movlw	47
  3192  010DF6  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3193  010DF8  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3194  010DFC  0900               	iorlw	0
  3195  010DFE  B4D8               	btfsc	status,2,c
  3196  010E00  D002               	goto	l2087
  3197                           
  3198                           ;vend.c: 40:     {;vend.c: 41:         venflags.nochange = 1;
  3199  010E02  8613               	bsf	_venflags,3,c
  3200                           
  3201                           ;vend.c: 42:     }
  3202  010E04  D001               	goto	l9514
  3203  010E06                     l2087:
  3204                           
  3205                           ;vend.c: 44:     {;vend.c: 45:         venflags.nochange = 0;
  3206  010E06  9613               	bcf	_venflags,3,c
  3207  010E08                     l9514:
  3208                           
  3209                           ;vend.c: 48:     Init_vendmem();
  3210  010E08  EC49  F089         	call	_Init_vendmem	;wreg free
  3211                           
  3212                           ;vend.c: 49:     find_highprice();
  3213  010E0C  EC60  F08E         	call	_find_highprice	;wreg free
  3214                           
  3215                           ;vend.c: 50:     find_lowprice();
  3216  010E10  EC44  F08E         	call	_find_lowprice	;wreg free
  3217  010E14  0E00               	movlw	0
  3218  010E16  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  3219  010E18  0E19               	movlw	25
  3220  010E1A  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3221  010E1C  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3222  010E20  6E20               	movwf	_sensorval,c	;volatile
  3223                           
  3224                           ;vend.c: 53:     DAC1_SetOutput(sensorval);
  3225  010E22  5020               	movf	_sensorval,w,c	;volatile
  3226  010E24  EC51  F091         	call	_DAC1_SetOutput
  3227  010E28  0E00               	movlw	0
  3228  010E2A  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  3229  010E2C  0E17               	movlw	23
  3230  010E2E  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3231  010E30  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3232  010E34  6E1B               	movwf	_errormask,c	;volatile
  3233  010E36  0E50               	movlw	low _initnote
  3234  010E38  6E40               	movwf	lcd_string@lcdstring,c
  3235  010E3A  0EFE               	movlw	high _initnote
  3236  010E3C  6E41               	movwf	lcd_string@lcdstring+1,c
  3237  010E3E  0E00               	movlw	0
  3238  010E40  6E42               	movwf	lcd_string@lcdline,c
  3239  010E42  ECCC  F088         	call	_lcd_string	;wreg free
  3240                           
  3241                           ;vend.c: 60:     mdb_init();
  3242  010E46  ECC3  F08C         	call	_mdb_init	;wreg free
  3243                           
  3244                           ;vend.c: 62:     venflags.pricedisplay = 0;
  3245  010E4A  9415               	bcf	_venflags+2,2,c
  3246                           
  3247                           ;vend.c: 63:     venflags.service = 0;
  3248  010E4C  9E13               	bcf	_venflags,7,c
  3249                           
  3250                           ;vend.c: 64:     venflags.initialrun = 1;
  3251  010E4E  8A13               	bsf	_venflags,5,c
  3252                           
  3253                           ;vend.c: 65:     if(credit_check() == 0)
  3254  010E50  EC1C  F091         	call	_credit_check	;wreg free
  3255  010E54  0900               	iorlw	0
  3256  010E56  A4D8               	btfss	status,2,c
  3257  010E58  D004               	goto	l2089
  3258                           
  3259                           ;vend.c: 66:     {;vend.c: 67:         venflags.iscredit = 0;
  3260  010E5A  9013               	bcf	_venflags,0,c
  3261                           
  3262                           ;vend.c: 68:         venflags.inscoin = 1;
  3263  010E5C  8413               	bsf	_venflags,2,c
  3264                           
  3265                           ;vend.c: 69:         venflags.credisplay = 0;
  3266  010E5E  9813               	bcf	_venflags,4,c
  3267  010E60  D003               	goto	L1
  3268  010E62                     l2089:
  3269                           
  3270                           ;vend.c: 73:     {;vend.c: 74:         venflags.iscredit = 1;
  3271  010E62  8013               	bsf	_venflags,0,c
  3272                           
  3273                           ;vend.c: 75:         venflags.inscoin = 0;
  3274  010E64  9413               	bcf	_venflags,2,c
  3275                           
  3276                           ;vend.c: 76:         venflags.credisplay = 1;
  3277  010E66  8813               	bsf	_venflags,4,c
  3278  010E68                     L1:
  3279                           
  3280                           ;vend.c: 77:         mdbflags.noteerr = 0;
  3281  010E68  9229               	bcf	_mdbflags,1,c
  3282                           
  3283                           ;vend.c: 80:     LATAbits.LA5 = 0;
  3284                           
  3285                           ;vend.c: 78:     }
  3286  010E6A  9A83               	bcf	3971,5,c	;volatile
  3287                           
  3288                           ;vend.c: 82:     LATCbits.LC2 = 1;
  3289  010E6C  8485               	bsf	3973,2,c	;volatile
  3290  010E6E  0012               	return		;funcret
  3291  010E70                     __end_of_vend_init:
  3292                           	opt callstack 0
  3293                           
  3294 ;; *************** function _mdb_init *****************
  3295 ;; Defined at:
  3296 ;;		line 21 in file "mdb.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  i               1    0        unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;Total ram usage:        3 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    4
  3317 ;; This function calls:
  3318 ;;		_DATAEE_ReadByte
  3319 ;;		_eusartmdb_Initialize
  3320 ;;		_mdb_comm
  3321 ;;		_mdb_noten
  3322 ;;		_mdb_reset
  3323 ;;		_mdb_security
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;;		_vend_init
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text2
  3331  011986                     __ptext2:
  3332                           	opt callstack 0
  3333  011986                     _mdb_init:
  3334                           	opt callstack 25
  3335                           
  3336                           ;mdb.c: 23:     _delay((unsigned long)((250)*(12000000/4000.0)));
  3337                           
  3338                           ;incstack = 0
  3339  011986  0E04               	movlw	4
  3340  011988  6E40               	movwf	(??_mdb_init+1)& (0+255),c
  3341  01198A  0ECF               	movlw	207
  3342  01198C  6E3F               	movwf	??_mdb_init& (0+255),c
  3343  01198E  0E02               	movlw	2
  3344  011990                     u3697:
  3345  011990  2EE8               	decfsz	wreg,f,c
  3346  011992  D7FE               	bra	u3697
  3347  011994  2E3F               	decfsz	??_mdb_init& (0+255),f,c
  3348  011996  D7FC               	bra	u3697
  3349  011998  2E40               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3350  01199A  D7FA               	bra	u3697
  3351  01199C  0E00               	movlw	0
  3352  01199E  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  3353  0119A0  0E18               	movlw	24
  3354  0119A2  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  3355  0119A4  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  3356  0119A8  6E27               	movwf	_noteen_byte,c	;volatile
  3357                           
  3358                           ;mdb.c: 25:     ((uint8_t*) &noteen)[0] = noteen_byte;
  3359  0119AA  C027  F028         	movff	_noteen_byte,_noteen	;volatile
  3360                           
  3361                           ;mdb.c: 26:     eusartmdb_Initialize();
  3362  0119AE  ECCC  F090         	call	_eusartmdb_Initialize	;wreg free
  3363                           
  3364                           ;mdb.c: 27:     mdbflags.noteerr = 0;
  3365  0119B2  9229               	bcf	_mdbflags,1,c
  3366                           
  3367                           ;mdb.c: 28:     mdbflags.isdata = 0;
  3368  0119B4  9029               	bcf	_mdbflags,0,c
  3369                           
  3370                           ;mdb.c: 29:     mdb_reset();
  3371  0119B6  EC2B  F08D         	call	_mdb_reset	;wreg free
  3372                           
  3373                           ;mdb.c: 30:     mdb_noten();
  3374  0119BA  ECB0  F08F         	call	_mdb_noten	;wreg free
  3375                           
  3376                           ;mdb.c: 31:     mdb_security();
  3377  0119BE  EC01  F091         	call	_mdb_security	;wreg free
  3378  0119C2  0E00               	movlw	0
  3379  0119C4  6E39               	movwf	mdb_comm@mcount,c
  3380  0119C6  0E33               	movlw	51
  3381  0119C8  ECE5  F082         	call	_mdb_comm
  3382  0119CC  0012               	return		;funcret
  3383  0119CE                     __end_of_mdb_init:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _mdb_security *****************
  3387 ;; Defined at:
  3388 ;;		line 151 in file "mdb.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    3
  3409 ;; This function calls:
  3410 ;;		_init_mdbdata
  3411 ;;		_mdb_comm
  3412 ;; This function is called by:
  3413 ;;		_mdb_init
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text3
  3418  012202                     __ptext3:
  3419                           	opt callstack 0
  3420  012202                     _mdb_security:
  3421                           	opt callstack 25
  3422                           
  3423                           ;mdb.c: 153:     init_mdbdata(0x00);
  3424                           
  3425                           ;incstack = 0
  3426  012202  0E00               	movlw	0
  3427  012204  EC29  F090         	call	_init_mdbdata
  3428  012208  0E01               	movlw	1
  3429  01220A  6E39               	movwf	mdb_comm@mcount,c
  3430  01220C  0E32               	movlw	50
  3431  01220E  ECE5  F082         	call	_mdb_comm
  3432  012212  0012               	return		;funcret
  3433  012214                     __end_of_mdb_security:
  3434                           	opt callstack 0
  3435                           
  3436 ;; *************** function _mdb_reset *****************
  3437 ;; Defined at:
  3438 ;;		line 36 in file "mdb.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  i               1    0        unsigned char 
  3443 ;;  i               1    7[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;Total ram usage:        3 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		_mdb_comm
  3462 ;; This function is called by:
  3463 ;;		_mdb_init
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text4
  3468  011A56                     __ptext4:
  3469                           	opt callstack 0
  3470  011A56                     _mdb_reset:
  3471                           	opt callstack 25
  3472                           
  3473                           ;mdb.c: 41:     mdbflags.timeout = 1;
  3474                           
  3475                           ;incstack = 0
  3476  011A56  8629               	bsf	_mdbflags,3,c
  3477                           
  3478                           ;mdb.c: 42:     while(mdbflags.timeout)
  3479  011A58  D005               	goto	l8884
  3480  011A5A                     l8882:
  3481  011A5A  0E00               	movlw	0
  3482  011A5C  6E39               	movwf	mdb_comm@mcount,c
  3483  011A5E  0E30               	movlw	48
  3484  011A60  ECE5  F082         	call	_mdb_comm
  3485  011A64                     l8884:
  3486                           
  3487                           ;mdb.c: 42:     while(mdbflags.timeout)
  3488  011A64  B629               	btfsc	_mdbflags,3,c
  3489  011A66  D7F9               	goto	l8882
  3490  011A68  F000               	nop		;# 
  3491  011A6A  0E00               	movlw	0
  3492  011A6C  6E39               	movwf	mdb_comm@mcount,c
  3493  011A6E  0E33               	movlw	51
  3494  011A70  ECE5  F082         	call	_mdb_comm
  3495  011A74  6E3E               	movwf	mdb_reset@i_3863,c
  3496  011A76  063E               	decf	mdb_reset@i_3863,f,c
  3497  011A78  0E60               	movlw	low _mdbdata
  3498  011A7A  243E               	addwf	mdb_reset@i_3863,w,c
  3499  011A7C  6ED9               	movwf	fsr2l,c
  3500  011A7E  6ADA               	clrf	fsr2h,c
  3501  011A80  0E00               	movlw	high _mdbdata
  3502  011A82  22DA               	addwfc	fsr2h,f,c
  3503  011A84  0E06               	movlw	6
  3504  011A86  18DE               	xorwf	postinc2,w,c
  3505  011A88  A4D8               	btfss	status,2,c
  3506  011A8A  0012               	return	
  3507  011A8C  0E00               	movlw	0
  3508  011A8E  6E39               	movwf	mdb_comm@mcount,c
  3509  011A90  0E33               	movlw	51
  3510  011A92  ECE5  F082         	call	_mdb_comm
  3511  011A96  0012               	return		;funcret
  3512  011A98                     __end_of_mdb_reset:
  3513                           	opt callstack 0
  3514                           
  3515 ;; *************** function _eusartmdb_Initialize *****************
  3516 ;; Defined at:
  3517 ;;		line 55 in file "eusart_mdb.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_mdb_init
  3541 ;;		_cctalk_init
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text5
  3546  012198                     __ptext5:
  3547                           	opt callstack 0
  3548  012198                     _eusartmdb_Initialize:
  3549                           	opt callstack 28
  3550                           
  3551                           ;eusart_mdb.c: 60:     BAUD1CON = 0x08;
  3552                           
  3553                           ;incstack = 0
  3554  012198  0E08               	movlw	8
  3555  01219A  6E9F               	movwf	3999,c	;volatile
  3556                           
  3557                           ;eusart_mdb.c: 63:     RC1STA = 0xD0;
  3558  01219C  0ED0               	movlw	208
  3559  01219E  6E9D               	movwf	3997,c	;volatile
  3560                           
  3561                           ;eusart_mdb.c: 66:     TX1STA = 0xEC;
  3562  0121A0  0EEC               	movlw	236
  3563  0121A2  6E9E               	movwf	3998,c	;volatile
  3564                           
  3565                           ;eusart_mdb.c: 69:     SP1BRGL = 0x38;
  3566  0121A4  0E38               	movlw	56
  3567  0121A6  6E9B               	movwf	3995,c	;volatile
  3568                           
  3569                           ;eusart_mdb.c: 72:     SP1BRGH = 0x01;
  3570  0121A8  0E01               	movlw	1
  3571  0121AA  6E9C               	movwf	3996,c	;volatile
  3572  0121AC  0012               	return		;funcret
  3573  0121AE                     __end_of_eusartmdb_Initialize:
  3574                           	opt callstack 0
  3575                           
  3576 ;; *************** function _find_lowprice *****************
  3577 ;; Defined at:
  3578 ;;		line 201 in file "dispense.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  i               1    1[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;Total ram usage:        2 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_vend_init
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text6
  3606  011C88                     __ptext6:
  3607                           	opt callstack 0
  3608  011C88                     _find_lowprice:
  3609                           	opt callstack 29
  3610                           
  3611                           ;dispense.c: 203:     char i = 0;
  3612                           
  3613                           ;incstack = 0
  3614  011C88  0E00               	movlw	0
  3615  011C8A  6E38               	movwf	find_lowprice@i,c
  3616                           
  3617                           ;dispense.c: 204:     lowprice = pricevend[0];
  3618  011C8C  C00B  F01D         	movff	_pricevend,_lowprice	;volatile
  3619                           
  3620                           ;dispense.c: 205:     while(i < 8)
  3621  011C90  D013               	goto	l9386
  3622  011C92                     l9380:
  3623                           
  3624                           ;dispense.c: 206:     {;dispense.c: 207:         if(lowprice > pricevend[i])
  3625  011C92  0E0B               	movlw	low _pricevend
  3626  011C94  2438               	addwf	find_lowprice@i,w,c
  3627  011C96  6ED9               	movwf	fsr2l,c
  3628  011C98  6ADA               	clrf	fsr2h,c
  3629  011C9A  0E00               	movlw	high _pricevend
  3630  011C9C  22DA               	addwfc	fsr2h,f,c
  3631  011C9E  501D               	movf	_lowprice,w,c	;volatile
  3632  011CA0  5CDE               	subwf	postinc2,w,c
  3633  011CA2  B0D8               	btfsc	status,0,c
  3634  011CA4  D008               	goto	l9384
  3635                           
  3636                           ;dispense.c: 208:         {;dispense.c: 209:             lowprice = pricevend[i];
  3637  011CA6  0E0B               	movlw	low _pricevend
  3638  011CA8  2438               	addwf	find_lowprice@i,w,c
  3639  011CAA  6ED9               	movwf	fsr2l,c
  3640  011CAC  6ADA               	clrf	fsr2h,c
  3641  011CAE  0E00               	movlw	high _pricevend
  3642  011CB0  22DA               	addwfc	fsr2h,f,c
  3643  011CB2  50DF               	movf	indf2,w,c
  3644  011CB4  6E1D               	movwf	_lowprice,c	;volatile
  3645  011CB6                     l9384:
  3646                           
  3647                           ;dispense.c: 211:         i++;
  3648  011CB6  2A38               	incf	find_lowprice@i,f,c
  3649  011CB8                     l9386:
  3650                           
  3651                           ;dispense.c: 205:     while(i < 8)
  3652  011CB8  0E07               	movlw	7
  3653  011CBA  6438               	cpfsgt	find_lowprice@i,c
  3654  011CBC  D7EA               	goto	l9380
  3655  011CBE  0012               	return	
  3656  011CC0                     __end_of_find_lowprice:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _find_highprice *****************
  3660 ;; Defined at:
  3661 ;;		line 187 in file "dispense.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  i               1    1[COMRAM] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_vend_init
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text7
  3689  011CC0                     __ptext7:
  3690                           	opt callstack 0
  3691  011CC0                     _find_highprice:
  3692                           	opt callstack 29
  3693                           
  3694                           ;dispense.c: 189:     char i = 0;
  3695                           
  3696                           ;incstack = 0
  3697  011CC0  0E00               	movlw	0
  3698  011CC2  6E38               	movwf	find_highprice@i,c
  3699                           
  3700                           ;dispense.c: 190:     highprice = pricevend[0];
  3701  011CC4  C00B  F01E         	movff	_pricevend,_highprice	;volatile
  3702                           
  3703                           ;dispense.c: 191:     while(i < 8)
  3704  011CC8  D013               	goto	l9374
  3705  011CCA                     l9368:
  3706                           
  3707                           ;dispense.c: 192:     {;dispense.c: 193:         if(highprice < pricevend[i])
  3708  011CCA  0E0B               	movlw	low _pricevend
  3709  011CCC  2438               	addwf	find_highprice@i,w,c
  3710  011CCE  6ED9               	movwf	fsr2l,c
  3711  011CD0  6ADA               	clrf	fsr2h,c
  3712  011CD2  0E00               	movlw	high _pricevend
  3713  011CD4  22DA               	addwfc	fsr2h,f,c
  3714  011CD6  50DE               	movf	postinc2,w,c
  3715  011CD8  5C1E               	subwf	_highprice,w,c	;volatile
  3716  011CDA  B0D8               	btfsc	status,0,c
  3717  011CDC  D008               	goto	l9372
  3718                           
  3719                           ;dispense.c: 194:         {;dispense.c: 195:             highprice = pricevend[i];
  3720  011CDE  0E0B               	movlw	low _pricevend
  3721  011CE0  2438               	addwf	find_highprice@i,w,c
  3722  011CE2  6ED9               	movwf	fsr2l,c
  3723  011CE4  6ADA               	clrf	fsr2h,c
  3724  011CE6  0E00               	movlw	high _pricevend
  3725  011CE8  22DA               	addwfc	fsr2h,f,c
  3726  011CEA  50DF               	movf	indf2,w,c
  3727  011CEC  6E1E               	movwf	_highprice,c	;volatile
  3728  011CEE                     l9372:
  3729                           
  3730                           ;dispense.c: 197:         i++;
  3731  011CEE  2A38               	incf	find_highprice@i,f,c
  3732  011CF0                     l9374:
  3733                           
  3734                           ;dispense.c: 191:     while(i < 8)
  3735  011CF0  0E07               	movlw	7
  3736  011CF2  6438               	cpfsgt	find_highprice@i,c
  3737  011CF4  D7EA               	goto	l9368
  3738  011CF6  0012               	return	
  3739  011CF8                     __end_of_find_highprice:
  3740                           	opt callstack 0
  3741                           
  3742 ;; *************** function _DAC1_SetOutput *****************
  3743 ;; Defined at:
  3744 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  inputData       1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  inputData       1    0[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:        1 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_vend_init
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text8
  3772  0122A2                     __ptext8:
  3773                           	opt callstack 0
  3774  0122A2                     _DAC1_SetOutput:
  3775                           	opt callstack 29
  3776                           
  3777                           ;incstack = 0
  3778                           ;DAC1_SetOutput@inputData stored from wreg
  3779  0122A2  6E37               	movwf	DAC1_SetOutput@inputData,c
  3780                           
  3781                           ;mcc_generated_files/dac1.c: 65: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 66: {;mcc_generated_files/dac1.c: 67:     DAC1CON1 = inputData;
  3782  0122A4  C037  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3783  0122A8  0012               	return		;funcret
  3784  0122AA                     __end_of_DAC1_SetOutput:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _price_check *****************
  3788 ;; Defined at:
  3789 ;;		line 10 in file "dispense.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  chanlinkbit     1   18[COMRAM] unsigned char 
  3794 ;;  savebut         1   17[COMRAM] unsigned char 
  3795 ;;  savechan        1   16[COMRAM] unsigned char 
  3796 ;;  i               1   19[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      _Bool 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        5 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    6
  3813 ;; This function calls:
  3814 ;;		_DATAEE_ReadByte
  3815 ;;		_butin
  3816 ;;		_credit_check
  3817 ;;		_credit_subtract
  3818 ;;		_dispense
  3819 ;;		_get_channel
  3820 ;;		_give_change
  3821 ;;		_lcd_string
  3822 ;;		_note_disable
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text9
  3829  010000                     __ptext9:
  3830                           	opt callstack 0
  3831  010000                     _price_check:
  3832                           	opt callstack 24
  3833                           
  3834                           ;dispense.c: 13:     channel = 0x00;
  3835                           
  3836                           ;incstack = 0
  3837  010000  0E00               	movlw	0
  3838  010002  6E1A               	movwf	_channel,c	;volatile
  3839                           
  3840                           ;dispense.c: 14:     cash = credit_check();
  3841  010004  EC1C  F091         	call	_credit_check	;wreg free
  3842  010008  6E23               	movwf	_cash,c	;volatile
  3843                           
  3844                           ;dispense.c: 15:     if(lowprice > cash)
  3845  01000A  501D               	movf	_lowprice,w,c	;volatile
  3846  01000C  5C23               	subwf	_cash,w,c	;volatile
  3847  01000E  B0D8               	btfsc	status,0,c
  3848  010010  D002               	goto	l9690
  3849  010012                     u3230:
  3850                           
  3851                           ;dispense.c: 16:     {;dispense.c: 17:         return 0;
  3852  010012  0E00               	movlw	0
  3853  010014  0012               	return	
  3854  010016                     l9690:
  3855                           
  3856                           ;dispense.c: 19:     if(highprice <= cash && !venflags.hiprice)
  3857  010016  501E               	movf	_highprice,w,c	;volatile
  3858  010018  5C23               	subwf	_cash,w,c	;volatile
  3859  01001A  B0D8               	btfsc	status,0,c
  3860  01001C  B815               	btfsc	_venflags+2,4,c
  3861  01001E  D003               	goto	l9698
  3862                           
  3863                           ;dispense.c: 20:     {;dispense.c: 21:         note_disable();
  3864  010020  EC47  F091         	call	_note_disable	;wreg free
  3865                           
  3866                           ;dispense.c: 22:         venflags.hiprice = 1;
  3867  010024  8815               	bsf	_venflags+2,4,c
  3868  010026                     l9698:
  3869                           
  3870                           ;dispense.c: 24:     chanmask = 0;
  3871  010026  0E00               	movlw	0
  3872  010028  6E1C               	movwf	_chanmask,c	;volatile
  3873                           
  3874                           ;dispense.c: 25:     char i = 7;
  3875  01002A  0E07               	movlw	7
  3876  01002C  6E4A               	movwf	price_check@i,c
  3877                           
  3878                           ;dispense.c: 26:     while(i > 0x00)
  3879  01002E  D011               	goto	l9708
  3880  010030                     l9702:
  3881                           
  3882                           ;dispense.c: 27:     {;dispense.c: 28:         if(pricevend[i] <= cash)
  3883  010030  0E0B               	movlw	low _pricevend
  3884  010032  244A               	addwf	price_check@i,w,c
  3885  010034  6ED9               	movwf	fsr2l,c
  3886  010036  6ADA               	clrf	fsr2h,c
  3887  010038  0E00               	movlw	high _pricevend
  3888  01003A  22DA               	addwfc	fsr2h,f,c
  3889  01003C  50DE               	movf	postinc2,w,c
  3890  01003E  5C23               	subwf	_cash,w,c	;volatile
  3891  010040  A0D8               	btfss	status,0,c
  3892  010042  D003               	goto	l4367
  3893                           
  3894                           ;dispense.c: 29:         {;dispense.c: 30:             chanmask = chanmask | 0x01;
  3895  010044  501C               	movf	_chanmask,w,c	;volatile
  3896  010046  0901               	iorlw	1
  3897  010048  6E1C               	movwf	_chanmask,c	;volatile
  3898  01004A                     l4367:
  3899                           
  3900                           ;dispense.c: 32:         chanmask = chanmask << 1;
  3901  01004A  501C               	movf	_chanmask,w,c	;volatile
  3902  01004C  241C               	addwf	_chanmask,w,c	;volatile
  3903  01004E  6E1C               	movwf	_chanmask,c	;volatile
  3904                           
  3905                           ;dispense.c: 33:         i--;
  3906  010050  064A               	decf	price_check@i,f,c
  3907  010052                     l9708:
  3908                           
  3909                           ;dispense.c: 26:     while(i > 0x00)
  3910  010052  504A               	movf	price_check@i,w,c
  3911  010054  A4D8               	btfss	status,2,c
  3912  010056  D7EC               	goto	l9702
  3913                           
  3914                           ;dispense.c: 35:     if(pricevend[0] <= cash)
  3915  010058  500B               	movf	_pricevend,w,c	;volatile
  3916  01005A  5C23               	subwf	_cash,w,c	;volatile
  3917  01005C  A0D8               	btfss	status,0,c
  3918  01005E  D003               	goto	l4369
  3919                           
  3920                           ;dispense.c: 36:     {;dispense.c: 37:         chanmask = chanmask | 0x01;
  3921  010060  501C               	movf	_chanmask,w,c	;volatile
  3922  010062  0901               	iorlw	1
  3923  010064  6E1C               	movwf	_chanmask,c	;volatile
  3924  010066                     l4369:
  3925                           
  3926                           ;dispense.c: 39:     chanmask = chanmask & ~errormask;
  3927  010066  501B               	movf	_errormask,w,c	;volatile
  3928  010068  0AFF               	xorlw	255
  3929  01006A  141C               	andwf	_chanmask,w,c	;volatile
  3930  01006C  6E1C               	movwf	_chanmask,c	;volatile
  3931                           
  3932                           ;dispense.c: 40:     venflags.error = 0;
  3933  01006E  9213               	bcf	_venflags,1,c
  3934                           
  3935                           ;dispense.c: 44:     LATCbits.LC2 = 1;
  3936  010070  8485               	bsf	3973,2,c	;volatile
  3937                           
  3938                           ;dispense.c: 45:     LATB = chanmask & 0x0F;
  3939  010072  501C               	movf	_chanmask,w,c	;volatile
  3940  010074  0B0F               	andlw	15
  3941  010076  6E84               	movwf	3972,c	;volatile
  3942                           
  3943                           ;dispense.c: 46:     LATD = chanmask & 0xF0;
  3944  010078  501C               	movf	_chanmask,w,c	;volatile
  3945  01007A  0BF0               	andlw	240
  3946  01007C  6E86               	movwf	3974,c	;volatile
  3947                           
  3948                           ;dispense.c: 47:     buttons = butin();
  3949  01007E  EC79  F08C         	call	_butin	;wreg free
  3950  010082  6E22               	movwf	_buttons,c	;volatile
  3951                           
  3952                           ;dispense.c: 48:     if((buttons & errormask) != 0x00)
  3953  010084  5022               	movf	_buttons,w,c	;volatile
  3954  010086  141B               	andwf	_errormask,w,c	;volatile
  3955  010088  0900               	iorlw	0
  3956  01008A  B4D8               	btfsc	status,2,c
  3957  01008C  D00C               	goto	l9732
  3958                           
  3959                           ;dispense.c: 49:     {;dispense.c: 50:         if(!venflags.pricedisplay)
  3960  01008E  B415               	btfsc	_venflags+2,2,c
  3961  010090  D7C0               	goto	u3230
  3962  010092  0EBD               	movlw	low _emptymsg
  3963  010094  6E40               	movwf	lcd_string@lcdstring,c
  3964  010096  0EFF               	movlw	high _emptymsg
  3965  010098  6E41               	movwf	lcd_string@lcdstring+1,c
  3966  01009A  0E00               	movlw	0
  3967  01009C  6E42               	movwf	lcd_string@lcdline,c
  3968  01009E  ECCC  F088         	call	_lcd_string	;wreg free
  3969                           
  3970                           ;dispense.c: 53:             venflags.pricedisplay = 1;
  3971  0100A2  8415               	bsf	_venflags+2,2,c
  3972  0100A4  D7B6               	goto	u3230
  3973  0100A6                     l9732:
  3974                           
  3975                           ;dispense.c: 58:     buttons = buttons & chanmask;
  3976  0100A6  5022               	movf	_buttons,w,c	;volatile
  3977  0100A8  141C               	andwf	_chanmask,w,c	;volatile
  3978  0100AA  6E22               	movwf	_buttons,c	;volatile
  3979                           
  3980                           ;dispense.c: 59:     if(buttons != 0)
  3981  0100AC  5022               	movf	_buttons,w,c	;volatile
  3982  0100AE  B4D8               	btfsc	status,2,c
  3983  0100B0  D046               	goto	l4372
  3984                           
  3985                           ;dispense.c: 60:     {;dispense.c: 61:         channel = get_channel(buttons);
  3986  0100B2  5022               	movf	_buttons,w,c	;volatile
  3987  0100B4  EC66  F090         	call	_get_channel
  3988  0100B8  6E1A               	movwf	_channel,c	;volatile
  3989                           
  3990                           ;dispense.c: 62:         vendprice = pricevend[channel];
  3991  0100BA  0E0B               	movlw	low _pricevend
  3992  0100BC  241A               	addwf	_channel,w,c	;volatile
  3993  0100BE  6ED9               	movwf	fsr2l,c
  3994  0100C0  6ADA               	clrf	fsr2h,c
  3995  0100C2  0E00               	movlw	high _pricevend
  3996  0100C4  22DA               	addwfc	fsr2h,f,c
  3997  0100C6  50DF               	movf	indf2,w,c
  3998  0100C8  6E21               	movwf	_vendprice,c	;volatile
  3999                           
  4000                           ;dispense.c: 63:         uint8_t savechan = channel;
  4001  0100CA  C01A  F047         	movff	_channel,price_check@savechan	;volatile
  4002                           
  4003                           ;dispense.c: 64:         uint8_t savebut = buttons;
  4004  0100CE  C022  F048         	movff	_buttons,price_check@savebut	;volatile
  4005                           
  4006                           ;dispense.c: 66:         if(channel > 0x03)
  4007  0100D2  0E03               	movlw	3
  4008  0100D4  641A               	cpfsgt	_channel,c	;volatile
  4009  0100D6  D004               	goto	l9748
  4010                           
  4011                           ;dispense.c: 67:         {;dispense.c: 68:             buttons = 0x80;
  4012  0100D8  0E80               	movlw	128
  4013  0100DA  6E22               	movwf	_buttons,c	;volatile
  4014                           
  4015                           ;dispense.c: 69:             channel = 0x07;
  4016  0100DC  0E07               	movlw	7
  4017  0100DE  6E1A               	movwf	_channel,c	;volatile
  4018  0100E0                     l9748:
  4019                           
  4020                           ;dispense.c: 71:         dispense(channel);
  4021  0100E0  501A               	movf	_channel,w,c	;volatile
  4022  0100E2  EC7C  F08E         	call	_dispense
  4023                           
  4024                           ;dispense.c: 72:         channel = savechan;
  4025  0100E6  C047  F01A         	movff	price_check@savechan,_channel	;volatile
  4026                           
  4027                           ;dispense.c: 73:         buttons = savebut;
  4028  0100EA  C048  F022         	movff	price_check@savebut,_buttons	;volatile
  4029  0100EE  0E1D               	movlw	29
  4030  0100F0  241A               	addwf	_channel,w,c	;volatile
  4031  0100F2  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  4032  0100F4  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  4033  0100F6  0E00               	movlw	0
  4034  0100F8  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  4035  0100FA  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  4036  0100FE  6E49               	movwf	price_check@chanlinkbit,c
  4037                           
  4038                           ;dispense.c: 75:         if(chanlinkbit != 0x00 && !venflags.error)
  4039  010100  5049               	movf	price_check@chanlinkbit,w,c
  4040  010102  A4D8               	btfss	status,2,c
  4041  010104  B213               	btfsc	_venflags,1,c
  4042  010106  D007               	goto	l9764
  4043                           
  4044                           ;dispense.c: 76:         {;dispense.c: 77:             channel = get_channel(chanlinkbit
      +                          );
  4045  010108  5049               	movf	price_check@chanlinkbit,w,c
  4046  01010A  EC66  F090         	call	_get_channel
  4047  01010E  6E1A               	movwf	_channel,c	;volatile
  4048                           
  4049                           ;dispense.c: 78:             dispense(channel);
  4050  010110  501A               	movf	_channel,w,c	;volatile
  4051  010112  EC7C  F08E         	call	_dispense
  4052  010116                     l9764:
  4053                           
  4054                           ;dispense.c: 80:         credit_subtract(vendprice);
  4055  010116  5021               	movf	_vendprice,w,c	;volatile
  4056  010118  EC05  F08F         	call	_credit_subtract
  4057                           
  4058                           ;dispense.c: 81:         venflags.hiprice = 0;
  4059  01011C  9815               	bcf	_venflags+2,4,c
  4060                           
  4061                           ;dispense.c: 82:         cash = credit_check();
  4062  01011E  EC1C  F091         	call	_credit_check	;wreg free
  4063  010122  6E23               	movwf	_cash,c	;volatile
  4064                           
  4065                           ;dispense.c: 83:         if(cash > 0 && !venflags.nochange && !venflags.error)
  4066  010124  5023               	movf	_cash,w,c	;volatile
  4067  010126  A4D8               	btfss	status,2,c
  4068  010128  B613               	btfsc	_venflags,3,c
  4069  01012A  D005               	goto	l9778
  4070  01012C  B213               	btfsc	_venflags,1,c
  4071  01012E  D003               	goto	l9778
  4072                           
  4073                           ;dispense.c: 84:         {;dispense.c: 86:             give_change(cash);
  4074  010130  5023               	movf	_cash,w,c	;volatile
  4075  010132  EC09  F08D         	call	_give_change
  4076  010136                     l9778:
  4077                           
  4078                           ;dispense.c: 88:         LATAbits.LA5 = 0;
  4079  010136  9A83               	bcf	3971,5,c	;volatile
  4080                           
  4081                           ;dispense.c: 89:         LATCbits.LC2 = 1;
  4082  010138  8485               	bsf	3973,2,c	;volatile
  4083                           
  4084                           ;dispense.c: 90:         return 1;
  4085  01013A  0E01               	movlw	1
  4086  01013C  0012               	return	
  4087  01013E                     l4372:
  4088                           
  4089                           ;dispense.c: 93:     {;dispense.c: 94:         venflags.pricedisplay = 0;
  4090  01013E  9415               	bcf	_venflags+2,2,c
  4091                           
  4092                           ;dispense.c: 95:         venflags.credisplay = 1;
  4093  010140  8813               	bsf	_venflags,4,c
  4094  010142  D767               	goto	u3230
  4095  010144                     __end_of_price_check:
  4096                           	opt callstack 0
  4097                           
  4098 ;; *************** function _note_disable *****************
  4099 ;; Defined at:
  4100 ;;		line 123 in file "mdb.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    4
  4121 ;; This function calls:
  4122 ;;		_mdb_noten
  4123 ;; This function is called by:
  4124 ;;		_price_check
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text10
  4129  01228E                     __ptext10:
  4130                           	opt callstack 0
  4131  01228E                     _note_disable:
  4132                           	opt callstack 25
  4133                           
  4134                           ;mdb.c: 125:     noteen_byte = 0x00;
  4135                           
  4136                           ;incstack = 0
  4137  01228E  0E00               	movlw	0
  4138  012290  6E27               	movwf	_noteen_byte,c	;volatile
  4139                           
  4140                           ;mdb.c: 126:     mdb_noten();
  4141  012292  ECB0  F08F         	call	_mdb_noten	;wreg free
  4142  012296  0012               	return		;funcret
  4143  012298                     __end_of_note_disable:
  4144                           	opt callstack 0
  4145                           
  4146 ;; *************** function _mdb_noten *****************
  4147 ;; Defined at:
  4148 ;;		line 135 in file "mdb.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    3
  4169 ;; This function calls:
  4170 ;;		_init_mdbdata
  4171 ;;		_mdb_comm
  4172 ;; This function is called by:
  4173 ;;		_mdb_init
  4174 ;;		_note_disable
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text11
  4179  011F60                     __ptext11:
  4180                           	opt callstack 0
  4181  011F60                     _mdb_noten:
  4182                           	opt callstack 25
  4183                           
  4184                           ;mdb.c: 138:     init_mdbdata(0x00);
  4185                           
  4186                           ;incstack = 0
  4187  011F60  0E00               	movlw	0
  4188  011F62  EC29  F090         	call	_init_mdbdata
  4189                           
  4190                           ;mdb.c: 140:     mcount = 3;
  4191  011F66  0E03               	movlw	3
  4192  011F68  6E2C               	movwf	_mcount,c
  4193                           
  4194                           ;mdb.c: 142:     mdbdata[0] = 0x00;
  4195  011F6A  0E00               	movlw	0
  4196  011F6C  0100               	movlb	0	; () banked
  4197  011F6E  6F60               	movwf	_mdbdata& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;mdb.c: 143:     mdbdata[1] = 0x00;
  4201  011F70  0E00               	movlw	0
  4202  011F72  6F61               	movwf	(_mdbdata+1)& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;mdb.c: 145:     mdbdata[2] = noteen_byte;
  4206  011F74  C027  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;mdb.c: 147:     mdbdata[3] = 0x00;
  4210  011F78  0E00               	movlw	0
  4211  011F7A  6F63               	movwf	(_mdbdata+3)& (0+255),b
  4212  011F7C  C02C  F039         	movff	_mcount,mdb_comm@mcount
  4213  011F80  0E34               	movlw	52
  4214  011F82  ECE5  F082         	call	_mdb_comm
  4215  011F86  6E2C               	movwf	_mcount,c
  4216                           
  4217                           ;mdb.c: 149:     mdbflags.vending = 0;
  4218  011F88  9829               	bcf	_mdbflags,4,c
  4219  011F8A  0012               	return		;funcret
  4220  011F8C                     __end_of_mdb_noten:
  4221                           	opt callstack 0
  4222                           
  4223 ;; *************** function _give_change *****************
  4224 ;; Defined at:
  4225 ;;		line 21 in file "hopper.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  paycash         1    wreg     unsigned char 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  paycash         1   13[COMRAM] unsigned char 
  4230 ;;  i               1   14[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    4
  4247 ;; This function calls:
  4248 ;;		_DATAEE_ReadByte
  4249 ;;		___lbdiv
  4250 ;;		_credit_add
  4251 ;;		_credit_subtract
  4252 ;;		_hopper_pay
  4253 ;; This function is called by:
  4254 ;;		_price_check
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text12
  4259  011A12                     __ptext12:
  4260                           	opt callstack 0
  4261  011A12                     _give_change:
  4262                           	opt callstack 25
  4263                           
  4264                           ;incstack = 0
  4265                           ;give_change@paycash stored from wreg
  4266  011A12  6E44               	movwf	give_change@paycash,c
  4267                           
  4268                           ;hopper.c: 21: void give_change(uint8_t paycash);hopper.c: 22: {;hopper.c: 23:     cash 
      +                          = paycash;
  4269  011A14  C044  F023         	movff	give_change@paycash,_cash	;volatile
  4270                           
  4271                           ;hopper.c: 24:     credit_subtract(cash);
  4272  011A18  5023               	movf	_cash,w,c	;volatile
  4273  011A1A  EC05  F08F         	call	_credit_subtract
  4274  011A1E  0E00               	movlw	0
  4275  011A20  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  4276  011A22  0E1C               	movlw	28
  4277  011A24  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  4278  011A26  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  4279  011A2A  6E45               	movwf	give_change@i,c
  4280                           
  4281                           ;hopper.c: 26:     change = paycash / i;
  4282  011A2C  C045  F037         	movff	give_change@i,___lbdiv@divisor
  4283  011A30  5044               	movf	give_change@paycash,w,c
  4284  011A32  EC0A  F08E         	call	___lbdiv
  4285  011A36  6E26               	movwf	_change,c
  4286                           
  4287                           ;hopper.c: 27:     change = hopper_pay(change);
  4288  011A38  5026               	movf	_change,w,c
  4289  011A3A  ECF6  F08A         	call	_hopper_pay
  4290  011A3E  6E26               	movwf	_change,c
  4291                           
  4292                           ;hopper.c: 28:     if(change > 0)
  4293  011A40  5026               	movf	_change,w,c
  4294  011A42  B4D8               	btfsc	status,2,c
  4295  011A44  0012               	return	
  4296                           
  4297                           ;hopper.c: 29:     {;hopper.c: 30:         change = change * i;
  4298  011A46  5026               	movf	_change,w,c
  4299  011A48  0245               	mulwf	give_change@i,c
  4300  011A4A  CFF3 F026          	movff	prodl,_change
  4301                           
  4302                           ;hopper.c: 31:         credit_add(change);
  4303  011A4E  5026               	movf	_change,w,c
  4304  011A50  ECED  F08D         	call	_credit_add
  4305  011A54  0012               	return		;funcret
  4306  011A56                     __end_of_give_change:
  4307                           	opt callstack 0
  4308                           
  4309 ;; *************** function _credit_subtract *****************
  4310 ;; Defined at:
  4311 ;;		line 136 in file "vend.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  credit          1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  credit          1    4[COMRAM] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:        1 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    1
  4332 ;; This function calls:
  4333 ;;		_DATAEE_ReadByte
  4334 ;;		_DATAEE_WriteByte
  4335 ;; This function is called by:
  4336 ;;		_give_change
  4337 ;;		_price_check
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text13
  4342  011E0A                     __ptext13:
  4343                           	opt callstack 0
  4344  011E0A                     _credit_subtract:
  4345                           	opt callstack 27
  4346                           
  4347                           ;incstack = 0
  4348                           ;credit_subtract@credit stored from wreg
  4349  011E0A  6E3B               	movwf	credit_subtract@credit,c
  4350  011E0C  0E00               	movlw	0
  4351  011E0E  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  4352  011E10  0E00               	movlw	0
  4353  011E12  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  4354  011E14  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  4355  011E18  6E23               	movwf	_cash,c	;volatile
  4356                           
  4357                           ;vend.c: 139:     cash = (cash - credit) & 0xFF;
  4358  011E1A  503B               	movf	credit_subtract@credit,w,c
  4359  011E1C  5C23               	subwf	_cash,w,c	;volatile
  4360  011E1E  6E23               	movwf	_cash,c	;volatile
  4361  011E20  0E00               	movlw	0
  4362  011E22  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  4363  011E24  0E00               	movlw	0
  4364  011E26  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  4365  011E28  C023  F039         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  4366  011E2C  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  4367                           
  4368                           ;vend.c: 141:     if(cash == 0)
  4369  011E30  5023               	movf	_cash,w,c	;volatile
  4370  011E32  A4D8               	btfss	status,2,c
  4371  011E34  0012               	return	
  4372                           
  4373                           ;vend.c: 142:     {;vend.c: 143:         venflags.iscredit = 0;
  4374  011E36  9013               	bcf	_venflags,0,c
  4375                           
  4376                           ;vend.c: 144:         venflags.inscoin = 1;
  4377  011E38  8413               	bsf	_venflags,2,c
  4378                           
  4379                           ;vend.c: 145:         venflags.credisplay = 0;
  4380  011E3A  9813               	bcf	_venflags,4,c
  4381  011E3C  0012               	return		;funcret
  4382  011E3E                     __end_of_credit_subtract:
  4383                           	opt callstack 0
  4384                           
  4385 ;; *************** function _credit_add *****************
  4386 ;; Defined at:
  4387 ;;		line 121 in file "vend.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  credit          1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  credit          1   11[COMRAM] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;Total ram usage:        1 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    3
  4408 ;; This function calls:
  4409 ;;		_DATAEE_ReadByte
  4410 ;;		_DATAEE_WriteByte
  4411 ;;		_Update_cashaudit
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;;		_give_change
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text14
  4419  011BDA                     __ptext14:
  4420                           	opt callstack 0
  4421  011BDA                     _credit_add:
  4422                           	opt callstack 25
  4423                           
  4424                           ;incstack = 0
  4425                           ;credit_add@credit stored from wreg
  4426  011BDA  6E42               	movwf	credit_add@credit,c
  4427  011BDC  0E00               	movlw	0
  4428  011BDE  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  4429  011BE0  0E00               	movlw	0
  4430  011BE2  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  4431  011BE4  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  4432  011BE8  6E23               	movwf	_cash,c	;volatile
  4433                           
  4434                           ;vend.c: 124:     cash = cash + credit;
  4435  011BEA  5023               	movf	_cash,w,c	;volatile
  4436  011BEC  2442               	addwf	credit_add@credit,w,c
  4437  011BEE  6E23               	movwf	_cash,c	;volatile
  4438  011BF0  0E00               	movlw	0
  4439  011BF2  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  4440  011BF4  0E00               	movlw	0
  4441  011BF6  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  4442  011BF8  C023  F039         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  4443  011BFC  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  4444                           
  4445                           ;vend.c: 126:     if(cash != 0)
  4446  011C00  5023               	movf	_cash,w,c	;volatile
  4447  011C02  B4D8               	btfsc	status,2,c
  4448  011C04  D003               	goto	l8674
  4449                           
  4450                           ;vend.c: 127:     {;vend.c: 128:         venflags.iscredit = 1;
  4451  011C06  8013               	bsf	_venflags,0,c
  4452                           
  4453                           ;vend.c: 129:         venflags.inscoin = 0;
  4454  011C08  9413               	bcf	_venflags,2,c
  4455                           
  4456                           ;vend.c: 130:         venflags.credisplay = 1;
  4457  011C0A  8813               	bsf	_venflags,4,c
  4458  011C0C                     l8674:
  4459                           
  4460                           ;vend.c: 133:     Update_cashaudit(credit);
  4461  011C0C  5042               	movf	credit_add@credit,w,c
  4462  011C0E  EC07  F088         	call	_Update_cashaudit
  4463  011C12  0012               	return		;funcret
  4464  011C14                     __end_of_credit_add:
  4465                           	opt callstack 0
  4466                           
  4467 ;; *************** function _Update_cashaudit *****************
  4468 ;; Defined at:
  4469 ;;		line 106 in file "vend.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  addcash         1    wreg     unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  addcash         1   10[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;Total ram usage:        1 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    2
  4490 ;; This function calls:
  4491 ;;		_Read_NVstore
  4492 ;;		_Write_NVstore
  4493 ;; This function is called by:
  4494 ;;		_credit_add
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text15
  4499  01100E                     __ptext15:
  4500                           	opt callstack 0
  4501  01100E                     _Update_cashaudit:
  4502                           	opt callstack 25
  4503                           
  4504                           ;incstack = 0
  4505                           ;Update_cashaudit@addcash stored from wreg
  4506  01100E  6E41               	movwf	Update_cashaudit@addcash,c
  4507  011010  0E00               	movlw	0
  4508  011012  6E3A               	movwf	Read_NVstore@storeadd+1,c
  4509  011014  0E02               	movlw	2
  4510  011016  6E39               	movwf	Read_NVstore@storeadd,c
  4511  011018  0E35               	movlw	low _pvcash
  4512  01101A  6E3B               	movwf	Read_NVstore@storemem,c
  4513  01101C  0E00               	movlw	high _pvcash
  4514  01101E  6E3C               	movwf	Read_NVstore@storemem+1,c
  4515  011020  0E02               	movlw	2
  4516  011022  6E3D               	movwf	Read_NVstore@storesize,c
  4517  011024  EC6A  F08F         	call	_Read_NVstore	;wreg free
  4518  011028  0E00               	movlw	0
  4519  01102A  6E3A               	movwf	Read_NVstore@storeadd+1,c
  4520  01102C  0E0C               	movlw	12
  4521  01102E  6E39               	movwf	Read_NVstore@storeadd,c
  4522  011030  0E32               	movlw	low _pnvcash
  4523  011032  6E3B               	movwf	Read_NVstore@storemem,c
  4524  011034  0E00               	movlw	high _pnvcash
  4525  011036  6E3C               	movwf	Read_NVstore@storemem+1,c
  4526  011038  0E03               	movlw	3
  4527  01103A  6E3D               	movwf	Read_NVstore@storesize,c
  4528  01103C  EC6A  F08F         	call	_Read_NVstore	;wreg free
  4529                           
  4530                           ;vend.c: 111:     pvcash = pvcash + (uint16_t)addcash;
  4531  011040  5041               	movf	Update_cashaudit@addcash,w,c
  4532  011042  2435               	addwf	_pvcash,w,c	;volatile
  4533  011044  6E35               	movwf	_pvcash,c	;volatile
  4534  011046  0E00               	movlw	0
  4535  011048  2036               	addwfc	_pvcash+1,w,c	;volatile
  4536  01104A  6E36               	movwf	_pvcash+1,c	;volatile
  4537                           
  4538                           ;vend.c: 113:     pnvcash = pnvcash + (__uint24)addcash;
  4539  01104C  5041               	movf	Update_cashaudit@addcash,w,c
  4540  01104E  2432               	addwf	_pnvcash,w,c	;volatile
  4541  011050  6E32               	movwf	_pnvcash,c	;volatile
  4542  011052  0E00               	movlw	0
  4543  011054  2033               	addwfc	_pnvcash+1,w,c	;volatile
  4544  011056  6E33               	movwf	_pnvcash+1,c	;volatile
  4545  011058  0E00               	movlw	0
  4546  01105A  2034               	addwfc	_pnvcash+2,w,c	;volatile
  4547  01105C  6E34               	movwf	_pnvcash+2,c	;volatile
  4548  01105E  0E00               	movlw	0
  4549  011060  6E3C               	movwf	Write_NVstore@storeadd+1,c
  4550  011062  0E02               	movlw	2
  4551  011064  6E3B               	movwf	Write_NVstore@storeadd,c
  4552  011066  0E35               	movlw	low _pvcash
  4553  011068  6E3D               	movwf	Write_NVstore@storemem,c
  4554  01106A  0E00               	movlw	high _pvcash
  4555  01106C  6E3E               	movwf	Write_NVstore@storemem+1,c
  4556  01106E  0E02               	movlw	2
  4557  011070  6E3F               	movwf	Write_NVstore@storesize,c
  4558  011072  EC38  F08F         	call	_Write_NVstore	;wreg free
  4559  011076  0E00               	movlw	0
  4560  011078  6E3C               	movwf	Write_NVstore@storeadd+1,c
  4561  01107A  0E0C               	movlw	12
  4562  01107C  6E3B               	movwf	Write_NVstore@storeadd,c
  4563  01107E  0E32               	movlw	low _pnvcash
  4564  011080  6E3D               	movwf	Write_NVstore@storemem,c
  4565  011082  0E00               	movlw	high _pnvcash
  4566  011084  6E3E               	movwf	Write_NVstore@storemem+1,c
  4567  011086  0E03               	movlw	3
  4568  011088  6E3F               	movwf	Write_NVstore@storesize,c
  4569  01108A  EC38  F08F         	call	_Write_NVstore	;wreg free
  4570  01108E  F000               	nop		;# 
  4571  011090  0012               	return		;funcret
  4572  011092                     __end_of_Update_cashaudit:
  4573                           	opt callstack 0
  4574                           
  4575 ;; *************** function ___lbdiv *****************
  4576 ;; Defined at:
  4577 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lbdiv.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  dividend        1    wreg     unsigned char 
  4580 ;;  divisor         1    0[COMRAM] unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  dividend        1    1[COMRAM] unsigned char 
  4583 ;;  quotient        1    3[COMRAM] unsigned char 
  4584 ;;  counter         1    2[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      unsigned char 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:        4 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_give_change
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text16
  4608  011C14                     __ptext16:
  4609                           	opt callstack 0
  4610  011C14                     ___lbdiv:
  4611                           	opt callstack 28
  4612                           
  4613                           ;incstack = 0
  4614                           ;___lbdiv@dividend stored from wreg
  4615  011C14  6E38               	movwf	___lbdiv@dividend,c
  4616  011C16  0E00               	movlw	0
  4617  011C18  6E3A               	movwf	___lbdiv@quotient,c
  4618  011C1A  5037               	movf	___lbdiv@divisor,w,c
  4619  011C1C  B4D8               	btfsc	status,2,c
  4620  011C1E  D015               	goto	l9058
  4621  011C20  0E01               	movlw	1
  4622  011C22  6E39               	movwf	___lbdiv@counter,c
  4623  011C24  D003               	goto	l9046
  4624  011C26                     l9042:
  4625  011C26  90D8               	bcf	status,0,c
  4626  011C28  3637               	rlcf	___lbdiv@divisor,f,c
  4627  011C2A  2A39               	incf	___lbdiv@counter,f,c
  4628  011C2C                     l9046:
  4629  011C2C  AE37               	btfss	___lbdiv@divisor,7,c
  4630  011C2E  D7FB               	goto	l9042
  4631  011C30                     u2900:
  4632  011C30  90D8               	bcf	status,0,c
  4633  011C32  363A               	rlcf	___lbdiv@quotient,f,c
  4634  011C34  5037               	movf	___lbdiv@divisor,w,c
  4635  011C36  5C38               	subwf	___lbdiv@dividend,w,c
  4636  011C38  A0D8               	btfss	status,0,c
  4637  011C3A  D003               	goto	l9054
  4638  011C3C  5037               	movf	___lbdiv@divisor,w,c
  4639  011C3E  5E38               	subwf	___lbdiv@dividend,f,c
  4640  011C40  803A               	bsf	___lbdiv@quotient,0,c
  4641  011C42                     l9054:
  4642  011C42  90D8               	bcf	status,0,c
  4643  011C44  3237               	rrcf	___lbdiv@divisor,f,c
  4644  011C46  2E39               	decfsz	___lbdiv@counter,f,c
  4645  011C48  D7F3               	goto	u2900
  4646  011C4A                     l9058:
  4647  011C4A  503A               	movf	___lbdiv@quotient,w,c
  4648  011C4C  0012               	return		;funcret
  4649  011C4E                     __end_of___lbdiv:
  4650                           	opt callstack 0
  4651                           
  4652 ;; *************** function _dispense *****************
  4653 ;; Defined at:
  4654 ;;		line 100 in file "dispense.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  chanel          1    wreg     unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  chanel          1   14[COMRAM] unsigned char 
  4659 ;;  sensmask        1   13[COMRAM] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    3
  4676 ;; This function calls:
  4677 ;;		_DATAEE_ReadByte
  4678 ;;		_update_vends
  4679 ;;		_vend_dispense
  4680 ;;		_vend_nosense
  4681 ;; This function is called by:
  4682 ;;		_price_check
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text17
  4687  011CF8                     __ptext17:
  4688                           	opt callstack 0
  4689  011CF8                     _dispense:
  4690                           	opt callstack 26
  4691                           
  4692                           ;incstack = 0
  4693                           ;dispense@chanel stored from wreg
  4694  011CF8  6E45               	movwf	dispense@chanel,c
  4695                           
  4696                           ;dispense.c: 100: void dispense(uint8_t chanel);dispense.c: 101: {;dispense.c: 102:     
      +                          channel = chanel;
  4697  011CFA  C045  F01A         	movff	dispense@chanel,_channel	;volatile
  4698  011CFE  0E00               	movlw	0
  4699  011D00  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  4700  011D02  0E25               	movlw	37
  4701  011D04  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  4702  011D06  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  4703  011D0A  6E44               	movwf	dispense@sensmask,c
  4704                           
  4705                           ;dispense.c: 104:     if((buttons & sensmask) != 0)
  4706  011D0C  5022               	movf	_buttons,w,c	;volatile
  4707  011D0E  1444               	andwf	dispense@sensmask,w,c
  4708  011D10  0900               	iorlw	0
  4709  011D12  B4D8               	btfsc	status,2,c
  4710  011D14  D004               	goto	l9416
  4711                           
  4712                           ;dispense.c: 105:     {;dispense.c: 106:         vend_nosense(chanel);
  4713  011D16  5045               	movf	dispense@chanel,w,c
  4714  011D18  EC24  F08B         	call	_vend_nosense
  4715                           
  4716                           ;dispense.c: 107:     }
  4717  011D1C  D003               	goto	l9418
  4718  011D1E                     l9416:
  4719                           
  4720                           ;dispense.c: 109:     {;dispense.c: 110:         vend_dispense(chanel);
  4721  011D1E  5045               	movf	dispense@chanel,w,c
  4722  011D20  ECC4  F087         	call	_vend_dispense
  4723  011D24                     l9418:
  4724                           
  4725                           ;dispense.c: 112:     if(!venflags.error)
  4726  011D24  B213               	btfsc	_venflags,1,c
  4727  011D26  0012               	return	
  4728                           
  4729                           ;dispense.c: 113:     {;dispense.c: 114:         update_vends(channel);
  4730  011D28  501A               	movf	_channel,w,c	;volatile
  4731  011D2A  ECC6  F08F         	call	_update_vends
  4732  011D2E  0012               	return		;funcret
  4733  011D30                     __end_of_dispense:
  4734                           	opt callstack 0
  4735                           
  4736 ;; *************** function _vend_nosense *****************
  4737 ;; Defined at:
  4738 ;;		line 119 in file "dispense.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  chanel          1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  chanel          1    5[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:        3 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    2
  4759 ;; This function calls:
  4760 ;;		_mdb_unlock
  4761 ;; This function is called by:
  4762 ;;		_dispense
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text18
  4767  011648                     __ptext18:
  4768                           	opt callstack 0
  4769  011648                     _vend_nosense:
  4770                           	opt callstack 26
  4771                           
  4772                           ;incstack = 0
  4773                           ;vend_nosense@chanel stored from wreg
  4774  011648  6E3C               	movwf	vend_nosense@chanel,c
  4775                           
  4776                           ;dispense.c: 119: void vend_nosense(uint8_t chanel);dispense.c: 120: {;dispense.c: 121: 
      +                              LATB = 0x00;
  4777  01164A  0E00               	movlw	0
  4778  01164C  6E84               	movwf	3972,c	;volatile
  4779                           
  4780                           ;dispense.c: 122:     LATD = 0x00;
  4781  01164E  0E00               	movlw	0
  4782  011650  6E86               	movwf	3974,c	;volatile
  4783                           
  4784                           ;dispense.c: 124:     LATCbits.LC2 = 0;
  4785  011652  9485               	bcf	3973,2,c	;volatile
  4786                           
  4787                           ;dispense.c: 126:     chanmask = 0x01;
  4788  011654  0E01               	movlw	1
  4789  011656  6E1C               	movwf	_chanmask,c	;volatile
  4790                           
  4791                           ;dispense.c: 127:     chanmask = chanmask << chanel;
  4792  011658  C03C  F03A         	movff	vend_nosense@chanel,??_vend_nosense
  4793  01165C  C01C  F03B         	movff	_chanmask,??_vend_nosense+1	;volatile
  4794  011660  2A3A               	incf	??_vend_nosense,f,c
  4795  011662  D002               	goto	u2814
  4796  011664                     u2815:
  4797  011664  90D8               	bcf	status,0,c
  4798  011666  363B               	rlcf	??_vend_nosense+1,f,c
  4799  011668                     u2814:
  4800  011668  2E3A               	decfsz	??_vend_nosense,f,c
  4801  01166A  D7FC               	goto	u2815
  4802  01166C  503B               	movf	??_vend_nosense+1,w,c
  4803  01166E  6E1C               	movwf	_chanmask,c	;volatile
  4804                           
  4805                           ;dispense.c: 128:     mdb_unlock();
  4806  011670  ECCA  F083         	call	_mdb_unlock	;wreg free
  4807                           
  4808                           ;dispense.c: 130:     LATAbits.LA5 = 1;
  4809  011674  8A83               	bsf	3971,5,c	;volatile
  4810                           
  4811                           ;dispense.c: 131:     LATB = chanmask & 0x0F;
  4812  011676  501C               	movf	_chanmask,w,c	;volatile
  4813  011678  0B0F               	andlw	15
  4814  01167A  6E84               	movwf	3972,c	;volatile
  4815                           
  4816                           ;dispense.c: 132:     LATD = chanmask & 0xF0;
  4817  01167C  501C               	movf	_chanmask,w,c	;volatile
  4818  01167E  0BF0               	andlw	240
  4819  011680  6E86               	movwf	3974,c	;volatile
  4820                           
  4821                           ;dispense.c: 133:     _delay((unsigned long)((250)*(12000000/4000.0)));
  4822  011682  0E04               	movlw	4
  4823  011684  6E3B               	movwf	(??_vend_nosense+1)& (0+255),c
  4824  011686  0ECF               	movlw	207
  4825  011688  6E3A               	movwf	??_vend_nosense& (0+255),c
  4826  01168A  0E02               	movlw	2
  4827  01168C                     u3707:
  4828  01168C  2EE8               	decfsz	wreg,f,c
  4829  01168E  D7FE               	bra	u3707
  4830  011690  2E3A               	decfsz	??_vend_nosense& (0+255),f,c
  4831  011692  D7FC               	bra	u3707
  4832  011694  2E3B               	decfsz	(??_vend_nosense+1)& (0+255),f,c
  4833  011696  D7FA               	bra	u3707
  4834                           
  4835                           ;dispense.c: 134:     LATB = 0;
  4836  011698  0E00               	movlw	0
  4837  01169A  6E84               	movwf	3972,c	;volatile
  4838                           
  4839                           ;dispense.c: 135:     LATD = 0;
  4840  01169C  0E00               	movlw	0
  4841  01169E  6E86               	movwf	3974,c	;volatile
  4842  0116A0  0012               	return		;funcret
  4843  0116A2                     __end_of_vend_nosense:
  4844                           	opt callstack 0
  4845                           
  4846 ;; *************** function _vend_dispense *****************
  4847 ;; Defined at:
  4848 ;;		line 138 in file "dispense.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  chanel          1    wreg     unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  chanel          1   12[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;Total ram usage:        3 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    2
  4869 ;; This function calls:
  4870 ;;		_TMR0_StopTimer
  4871 ;;		_disable_channel
  4872 ;;		_mdb_unlock
  4873 ;;		_set_motortime
  4874 ;; This function is called by:
  4875 ;;		_dispense
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text19
  4880  010F88                     __ptext19:
  4881                           	opt callstack 0
  4882  010F88                     _vend_dispense:
  4883                           	opt callstack 26
  4884                           
  4885                           ;incstack = 0
  4886                           ;vend_dispense@chanel stored from wreg
  4887  010F88  6E43               	movwf	vend_dispense@chanel,c
  4888                           
  4889                           ;dispense.c: 138: void vend_dispense(uint8_t chanel);dispense.c: 139: {;dispense.c: 140:
      +                               mdb_unlock();
  4890  010F8A  ECCA  F083         	call	_mdb_unlock	;wreg free
  4891                           
  4892                           ;dispense.c: 141:     LATB = 0x00;
  4893  010F8E  0E00               	movlw	0
  4894  010F90  6E84               	movwf	3972,c	;volatile
  4895                           
  4896                           ;dispense.c: 142:     LATD = 0x00;
  4897  010F92  0E00               	movlw	0
  4898  010F94  6E86               	movwf	3974,c	;volatile
  4899                           
  4900                           ;dispense.c: 144:     LATAbits.LA5 = 1;
  4901  010F96  8A83               	bsf	3971,5,c	;volatile
  4902                           
  4903                           ;dispense.c: 146:     LATCbits.LC2 = 0;
  4904  010F98  9485               	bcf	3973,2,c	;volatile
  4905                           
  4906                           ;dispense.c: 148:     chanmask = 0x01;
  4907  010F9A  0E01               	movlw	1
  4908  010F9C  6E1C               	movwf	_chanmask,c	;volatile
  4909                           
  4910                           ;dispense.c: 149:     chanmask = chanmask << chanel;
  4911  010F9E  C043  F041         	movff	vend_dispense@chanel,??_vend_dispense
  4912  010FA2  C01C  F042         	movff	_chanmask,??_vend_dispense+1	;volatile
  4913  010FA6  2A41               	incf	??_vend_dispense,f,c
  4914  010FA8  D002               	goto	u2824
  4915  010FAA                     u2825:
  4916  010FAA  90D8               	bcf	status,0,c
  4917  010FAC  3642               	rlcf	??_vend_dispense+1,f,c
  4918  010FAE                     u2824:
  4919  010FAE  2E41               	decfsz	??_vend_dispense,f,c
  4920  010FB0  D7FC               	goto	u2825
  4921  010FB2  5042               	movf	??_vend_dispense+1,w,c
  4922  010FB4  6E1C               	movwf	_chanmask,c	;volatile
  4923                           
  4924                           ;dispense.c: 150:     set_motortime(chanel);
  4925  010FB6  5043               	movf	vend_dispense@chanel,w,c
  4926  010FB8  ECD5  F08B         	call	_set_motortime
  4927                           
  4928                           ;dispense.c: 151:     while(!CMOUTbits.MC1OUT && !PIR0bits.TMR0IF)
  4929  010FBC  D006               	goto	l9010
  4930  010FBE                     l9008:
  4931                           
  4932                           ; BSR set to: 14
  4933                           ;dispense.c: 152:     {;dispense.c: 153:         LATB = chanmask & 0x0F;
  4934  010FBE  501C               	movf	_chanmask,w,c	;volatile
  4935  010FC0  0B0F               	andlw	15
  4936  010FC2  6E84               	movwf	3972,c	;volatile
  4937                           
  4938                           ;dispense.c: 154:         LATD = chanmask & 0xF0;
  4939  010FC4  501C               	movf	_chanmask,w,c	;volatile
  4940  010FC6  0BF0               	andlw	240
  4941  010FC8  6E86               	movwf	3974,c	;volatile
  4942  010FCA                     l9010:
  4943                           
  4944                           ;dispense.c: 151:     while(!CMOUTbits.MC1OUT && !PIR0bits.TMR0IF)
  4945  010FCA  010F               	movlb	15	; () banked
  4946  010FCC  B13D               	btfsc	61,0,b	;volatile
  4947  010FCE  D003               	goto	u2840
  4948                           
  4949                           ; BSR set to: 15
  4950  010FD0  010E               	movlb	14	; () banked
  4951  010FD2  ABCA               	btfss	202,5,b	;volatile
  4952  010FD4  D7F4               	goto	l9008
  4953  010FD6                     u2840:
  4954                           
  4955                           ;dispense.c: 156:     LATB = 0;
  4956  010FD6  0E00               	movlw	0
  4957  010FD8  6E84               	movwf	3972,c	;volatile
  4958                           
  4959                           ;dispense.c: 157:     LATD = 0;
  4960  010FDA  0E00               	movlw	0
  4961  010FDC  6E86               	movwf	3974,c	;volatile
  4962                           
  4963                           ;dispense.c: 158:     TMR0_StopTimer();
  4964  010FDE  EC63  F091         	call	_TMR0_StopTimer	;wreg free
  4965                           
  4966                           ;dispense.c: 159:     if(PIR0bits.TMR0IF)
  4967  010FE2  010E               	movlb	14	; () banked
  4968  010FE4  ABCA               	btfss	202,5,b	;volatile
  4969  010FE6  0012               	return	
  4970                           
  4971                           ; BSR set to: 14
  4972                           ;dispense.c: 160:     {;dispense.c: 161:         set_motortime(chanel);
  4973  010FE8  5043               	movf	vend_dispense@chanel,w,c
  4974  010FEA  ECD5  F08B         	call	_set_motortime
  4975  010FEE                     l4394:
  4976  010FEE  010F               	movlb	15	; () banked
  4977  010FF0  B13D               	btfsc	61,0,b	;volatile
  4978  010FF2  D003               	goto	u2870
  4979                           
  4980                           ; BSR set to: 15
  4981  010FF4  010E               	movlb	14	; () banked
  4982  010FF6  ABCA               	btfss	202,5,b	;volatile
  4983  010FF8  D7FA               	goto	l4394
  4984  010FFA                     u2870:
  4985                           
  4986                           ;dispense.c: 164:         if(PIR0bits.TMR0IF)
  4987  010FFA  010E               	movlb	14	; () banked
  4988  010FFC  ABCA               	btfss	202,5,b	;volatile
  4989  010FFE  0012               	return	
  4990                           
  4991                           ; BSR set to: 14
  4992                           ;dispense.c: 165:         {;dispense.c: 166:             venflags.error = 1;
  4993  011000  8213               	bsf	_venflags,1,c
  4994                           
  4995                           ; BSR set to: 14
  4996                           ;dispense.c: 167:             disable_channel(chanel);
  4997  011002  5043               	movf	vend_dispense@chanel,w,c
  4998  011004  EC6D  F08D         	call	_disable_channel
  4999                           
  5000                           ;dispense.c: 169:             vendprice = 0x00;
  5001  011008  0E00               	movlw	0
  5002  01100A  6E21               	movwf	_vendprice,c	;volatile
  5003  01100C  0012               	return		;funcret
  5004  01100E                     __end_of_vend_dispense:
  5005                           	opt callstack 0
  5006                           
  5007 ;; *************** function _set_motortime *****************
  5008 ;; Defined at:
  5009 ;;		line 175 in file "dispense.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  chanel          1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  chanel          1    6[COMRAM] unsigned char 
  5014 ;;  time            2    8[COMRAM] unsigned short 
  5015 ;;  i               1    7[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        4 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    1
  5032 ;; This function calls:
  5033 ;;		_DATAEE_ReadByte
  5034 ;;		_TMR0_StartTimer
  5035 ;;		_TMR0_StopTimer
  5036 ;;		_TMR0_Write16bitTimer
  5037 ;;		___wmul
  5038 ;; This function is called by:
  5039 ;;		_vend_dispense
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text20
  5044  0117AA                     __ptext20:
  5045                           	opt callstack 0
  5046  0117AA                     _set_motortime:
  5047                           	opt callstack 26
  5048                           
  5049                           ;incstack = 0
  5050                           ;set_motortime@chanel stored from wreg
  5051  0117AA  6E3D               	movwf	set_motortime@chanel,c
  5052  0117AC  0E26               	movlw	38
  5053  0117AE  243D               	addwf	set_motortime@chanel,w,c
  5054  0117B0  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  5055  0117B2  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  5056  0117B4  0E00               	movlw	0
  5057  0117B6  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  5058  0117B8  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  5059  0117BC  6E3E               	movwf	set_motortime@i,c
  5060                           
  5061                           ;dispense.c: 178:     TMR0_StopTimer();
  5062  0117BE  EC63  F091         	call	_TMR0_StopTimer	;wreg free
  5063                           
  5064                           ;dispense.c: 179:     PIR0bits.TMR0IF = 0;
  5065  0117C2  010E               	movlb	14	; () banked
  5066  0117C4  9BCA               	bcf	202,5,b	;volatile
  5067                           
  5068                           ; BSR set to: 14
  5069  0117C6  0EE1               	movlw	225
  5070  0117C8  6E40               	movwf	set_motortime@time+1,c
  5071  0117CA  0EBA               	movlw	186
  5072  0117CC  6E3F               	movwf	set_motortime@time,c
  5073                           
  5074                           ; BSR set to: 14
  5075                           ;dispense.c: 182:     time = time - (second_5 * i);
  5076  0117CE  C03E  F037         	movff	set_motortime@i,___wmul@multiplier
  5077  0117D2  6A38               	clrf	___wmul@multiplier+1,c
  5078  0117D4  0EF0               	movlw	240
  5079  0117D6  6E3A               	movwf	___wmul@multiplicand+1,c
  5080  0117D8  0EDD               	movlw	221
  5081  0117DA  6E39               	movwf	___wmul@multiplicand,c
  5082  0117DC  ECF2  F08F         	call	___wmul	;wreg free
  5083  0117E0  503F               	movf	set_motortime@time,w,c
  5084  0117E2  2437               	addwf	?___wmul,w,c
  5085  0117E4  6E3F               	movwf	set_motortime@time,c
  5086  0117E6  5040               	movf	set_motortime@time+1,w,c
  5087  0117E8  2038               	addwfc	?___wmul+1,w,c
  5088  0117EA  6E40               	movwf	set_motortime@time+1,c
  5089                           
  5090                           ;dispense.c: 183:     TMR0_Write16bitTimer(time);
  5091  0117EC  C03F  F037         	movff	set_motortime@time,TMR0_Write16bitTimer@timerVal
  5092  0117F0  C040  F038         	movff	set_motortime@time+1,TMR0_Write16bitTimer@timerVal+1
  5093  0117F4  EC4C  F091         	call	_TMR0_Write16bitTimer	;wreg free
  5094                           
  5095                           ;dispense.c: 184:     TMR0_StartTimer();
  5096  0117F8  EC65  F091         	call	_TMR0_StartTimer	;wreg free
  5097  0117FC  0012               	return		;funcret
  5098  0117FE                     __end_of_set_motortime:
  5099                           	opt callstack 0
  5100                           
  5101 ;; *************** function ___wmul *****************
  5102 ;; Defined at:
  5103 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  multiplier      2    0[COMRAM] unsigned int 
  5106 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  product         2    4[COMRAM] unsigned int 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2    0[COMRAM] unsigned int 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, prodl, prodh
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;Total ram usage:        6 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_set_motortime
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text21
  5132  011FE4                     __ptext21:
  5133                           	opt callstack 0
  5134  011FE4                     ___wmul:
  5135                           	opt callstack 26
  5136                           
  5137                           ;incstack = 0
  5138  011FE4  5037               	movf	___wmul@multiplier,w,c
  5139  011FE6  0239               	mulwf	___wmul@multiplicand,c
  5140  011FE8  CFF3 F03B          	movff	prodl,___wmul@product
  5141  011FEC  CFF4 F03C          	movff	prodh,___wmul@product+1
  5142  011FF0  5037               	movf	___wmul@multiplier,w,c
  5143  011FF2  023A               	mulwf	___wmul@multiplicand+1,c
  5144  011FF4  50F3               	movf	prodl,w,c
  5145  011FF6  263C               	addwf	___wmul@product+1,f,c
  5146  011FF8  5038               	movf	___wmul@multiplier+1,w,c
  5147  011FFA  0239               	mulwf	___wmul@multiplicand,c
  5148  011FFC  50F3               	movf	prodl,w,c
  5149  011FFE  263C               	addwf	___wmul@product+1,f,c
  5150  012000  C03B  F037         	movff	___wmul@product,?___wmul
  5151  012004  C03C  F038         	movff	___wmul@product+1,?___wmul+1
  5152  012008  0012               	return		;funcret
  5153  01200A                     __end_of___wmul:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function _TMR0_Write16bitTimer *****************
  5157 ;; Defined at:
  5158 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  timerVal        2    0[COMRAM] unsigned short 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        2 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_set_motortime
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text22
  5186  012298                     __ptext22:
  5187                           	opt callstack 0
  5188  012298                     _TMR0_Write16bitTimer:
  5189                           	opt callstack 26
  5190                           
  5191                           ;mcc_generated_files/tmr0.c: 112: void TMR0_Write16bitTimer(uint16_t timerVal);mcc_gener
      +                          ated_files/tmr0.c: 113: {;mcc_generated_files/tmr0.c: 115:     TMR0H = timerVal >> 8;
  5192                           
  5193                           ;incstack = 0
  5194  012298  5038               	movf	TMR0_Write16bitTimer@timerVal+1,w,c
  5195  01229A  6ED4               	movwf	4052,c	;volatile
  5196                           
  5197                           ;mcc_generated_files/tmr0.c: 116:     TMR0L = (uint8_t) timerVal;
  5198  01229C  C037  FFD3         	movff	TMR0_Write16bitTimer@timerVal,4051	;volatile
  5199  0122A0  0012               	return		;funcret
  5200  0122A2                     __end_of_TMR0_Write16bitTimer:
  5201                           	opt callstack 0
  5202                           
  5203 ;; *************** function _TMR0_StopTimer *****************
  5204 ;; Defined at:
  5205 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		None
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_vend_dispense
  5229 ;;		_set_motortime
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text23
  5234  0122C6                     __ptext23:
  5235                           	opt callstack 0
  5236  0122C6                     _TMR0_StopTimer:
  5237                           	opt callstack 26
  5238                           
  5239                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
  5240                           
  5241                           ;incstack = 0
  5242  0122C6  9ED5               	bcf	4053,7,c	;volatile
  5243  0122C8  0012               	return		;funcret
  5244  0122CA                     __end_of_TMR0_StopTimer:
  5245                           	opt callstack 0
  5246                           
  5247 ;; *************** function _TMR0_StartTimer *****************
  5248 ;; Defined at:
  5249 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		None
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_set_motortime
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text24
  5277  0122CA                     __ptext24:
  5278                           	opt callstack 0
  5279  0122CA                     _TMR0_StartTimer:
  5280                           	opt callstack 26
  5281                           
  5282                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  5283                           
  5284                           ;incstack = 0
  5285  0122CA  8ED5               	bsf	4053,7,c	;volatile
  5286  0122CC  0012               	return		;funcret
  5287  0122CE                     __end_of_TMR0_StartTimer:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _disable_channel *****************
  5291 ;; Defined at:
  5292 ;;		line 233 in file "dispense.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  channel         1    wreg     unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  channel         1    6[COMRAM] unsigned char 
  5297 ;;  errormask       1    7[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        4 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    1
  5314 ;; This function calls:
  5315 ;;		_DATAEE_ReadByte
  5316 ;;		_DATAEE_WriteByte
  5317 ;; This function is called by:
  5318 ;;		_vend_dispense
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text25
  5323  011ADA                     __ptext25:
  5324                           	opt callstack 0
  5325  011ADA                     _disable_channel:
  5326                           	opt callstack 26
  5327                           
  5328                           ;incstack = 0
  5329                           ;disable_channel@channel stored from wreg
  5330  011ADA  6E3D               	movwf	disable_channel@channel,c
  5331                           
  5332                           ;dispense.c: 233: void disable_channel(uint8_t channel);dispense.c: 234: {;dispense.c: 2
      +                          35:     uint8_t errormask = 0x01;
  5333  011ADC  0E01               	movlw	1
  5334  011ADE  6E3E               	movwf	disable_channel@errormask,c
  5335                           
  5336                           ;dispense.c: 236:     errormask = errormask << channel;
  5337  011AE0  C03D  F03B         	movff	disable_channel@channel,??_disable_channel
  5338  011AE4  C03E  F03C         	movff	disable_channel@errormask,??_disable_channel+1
  5339  011AE8  2A3B               	incf	??_disable_channel,f,c
  5340  011AEA  D002               	goto	u2534
  5341  011AEC                     u2535:
  5342  011AEC  90D8               	bcf	status,0,c
  5343  011AEE  363C               	rlcf	??_disable_channel+1,f,c
  5344  011AF0                     u2534:
  5345  011AF0  2E3B               	decfsz	??_disable_channel,f,c
  5346  011AF2  D7FC               	goto	u2535
  5347  011AF4  503C               	movf	??_disable_channel+1,w,c
  5348  011AF6  6E3E               	movwf	disable_channel@errormask,c
  5349  011AF8  0E00               	movlw	0
  5350  011AFA  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  5351  011AFC  0E17               	movlw	23
  5352  011AFE  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  5353  011B00  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  5354  011B04  103E               	iorwf	disable_channel@errormask,w,c
  5355  011B06  6E3E               	movwf	disable_channel@errormask,c
  5356  011B08  0E00               	movlw	0
  5357  011B0A  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  5358  011B0C  0E17               	movlw	23
  5359  011B0E  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  5360  011B10  C03E  F039         	movff	disable_channel@errormask,DATAEE_WriteByte@bData
  5361  011B14  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  5362  011B18  0012               	return		;funcret
  5363  011B1A                     __end_of_disable_channel:
  5364                           	opt callstack 0
  5365                           
  5366 ;; *************** function _update_vends *****************
  5367 ;; Defined at:
  5368 ;;		line 241 in file "dispense.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  chanel          1    wreg     unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  chanel          1    5[COMRAM] unsigned char 
  5373 ;;  x               1    4[COMRAM] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:        2 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    1
  5390 ;; This function calls:
  5391 ;;		_DATAEE_ReadByte
  5392 ;;		_DATAEE_WriteByte
  5393 ;; This function is called by:
  5394 ;;		_dispense
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text26
  5399  011F8C                     __ptext26:
  5400                           	opt callstack 0
  5401  011F8C                     _update_vends:
  5402                           	opt callstack 27
  5403                           
  5404                           ;incstack = 0
  5405                           ;update_vends@chanel stored from wreg
  5406  011F8C  6E3C               	movwf	update_vends@chanel,c
  5407  011F8E  0E04               	movlw	4
  5408  011F90  243C               	addwf	update_vends@chanel,w,c
  5409  011F92  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  5410  011F94  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  5411  011F96  0E00               	movlw	0
  5412  011F98  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  5413  011F9A  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  5414  011F9E  6E3B               	movwf	update_vends@x,c
  5415                           
  5416                           ;dispense.c: 244:     x++;
  5417  011FA0  2A3B               	incf	update_vends@x,f,c
  5418  011FA2  0E04               	movlw	4
  5419  011FA4  243C               	addwf	update_vends@chanel,w,c
  5420  011FA6  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  5421  011FA8  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
  5422  011FAA  0E00               	movlw	0
  5423  011FAC  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
  5424  011FAE  C03B  F039         	movff	update_vends@x,DATAEE_WriteByte@bData
  5425  011FB2  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  5426  011FB6  0012               	return		;funcret
  5427  011FB8                     __end_of_update_vends:
  5428                           	opt callstack 0
  5429                           
  5430 ;; *************** function _mdb_poll *****************
  5431 ;; Defined at:
  5432 ;;		line 157 in file "mdb.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  i               1    0        unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      unsigned char 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;Total ram usage:        3 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    3
  5453 ;; This function calls:
  5454 ;;		_TMR3_Initialize
  5455 ;;		_mdb_comm
  5456 ;; This function is called by:
  5457 ;;		_main
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text27
  5462  010278                     __ptext27:
  5463                           	opt callstack 0
  5464  010278                     _mdb_poll:
  5465                           	opt callstack 27
  5466                           
  5467                           ;mdb.c: 161:     TMR3_Initialize();
  5468                           
  5469                           ;incstack = 0
  5470  010278  ECCF  F08E         	call	_TMR3_Initialize	;wreg free
  5471  01027C  0E00               	movlw	0
  5472  01027E  6E39               	movwf	mdb_comm@mcount,c
  5473  010280  0E33               	movlw	51
  5474  010282  ECE5  F082         	call	_mdb_comm
  5475                           
  5476                           ;mdb.c: 163:     notebyte = mdbdata[0];
  5477  010286  C060  F02B         	movff	_mdbdata,_notebyte
  5478                           
  5479                           ;mdb.c: 165:     if((mdbdata[0] & 0x80) != 0)
  5480  01028A  0100               	movlb	0	; () banked
  5481  01028C  AF60               	btfss	_mdbdata& (0+255),7,b
  5482  01028E  D057               	goto	l9652
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;mdb.c: 166:     {;mdb.c: 167:         notebyte = mdbdata[0] & 0x7F;
  5486  010290  5160               	movf	_mdbdata& (0+255),w,b
  5487  010292  0B7F               	andlw	127
  5488  010294  6E2B               	movwf	_notebyte,c
  5489                           
  5490                           ;mdb.c: 168:         switch(notebyte)
  5491  010296  D019               	goto	l9616
  5492  010298                     l9588:
  5493                           
  5494                           ; BSR set to: 0
  5495  010298  0E0A               	movlw	10
  5496  01029A  6E24               	movwf	_credit,c	;volatile
  5497                           
  5498                           ;mdb.c: 171:             return credit;
  5499  01029C  5024               	movf	_credit,w,c	;volatile
  5500  01029E  0012               	return	
  5501  0102A0                     l9592:
  5502                           
  5503                           ; BSR set to: 0
  5504  0102A0  0E14               	movlw	20
  5505  0102A2  6E24               	movwf	_credit,c	;volatile
  5506                           
  5507                           ;mdb.c: 173:             return credit;
  5508  0102A4  5024               	movf	_credit,w,c	;volatile
  5509  0102A6  0012               	return	
  5510  0102A8                     l9596:
  5511                           
  5512                           ; BSR set to: 0
  5513  0102A8  0E32               	movlw	50
  5514  0102AA  6E24               	movwf	_credit,c	;volatile
  5515                           
  5516                           ;mdb.c: 175:             return credit;
  5517  0102AC  5024               	movf	_credit,w,c	;volatile
  5518  0102AE  0012               	return	
  5519  0102B0                     l9600:
  5520                           
  5521                           ; BSR set to: 0
  5522  0102B0  0E64               	movlw	100
  5523  0102B2  6E24               	movwf	_credit,c	;volatile
  5524                           
  5525                           ;mdb.c: 177:             return credit;
  5526  0102B4  5024               	movf	_credit,w,c	;volatile
  5527  0102B6  0012               	return	
  5528  0102B8                     l9604:
  5529                           
  5530                           ; BSR set to: 0
  5531  0102B8  0EC8               	movlw	200
  5532  0102BA  6E24               	movwf	_credit,c	;volatile
  5533                           
  5534                           ;mdb.c: 179:             return credit;
  5535  0102BC  5024               	movf	_credit,w,c	;volatile
  5536  0102BE  0012               	return	
  5537  0102C0                     l9608:
  5538                           
  5539                           ; BSR set to: 0
  5540  0102C0  0E10               	movlw	16
  5541  0102C2  6E24               	movwf	_credit,c	;volatile
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;mdb.c: 181:             mdbflags.noteerr = 1;
  5545  0102C4  8229               	bsf	_mdbflags,1,c
  5546                           
  5547                           ;mdb.c: 182:             return credit;
  5548  0102C6  5024               	movf	_credit,w,c	;volatile
  5549  0102C8  0012               	return	
  5550  0102CA                     l9616:
  5551                           
  5552                           ; BSR set to: 0
  5553  0102CA  502B               	movf	_notebyte,w,c
  5554  0102CC  6E3C               	movwf	??_mdb_poll& (0+255),c
  5555  0102CE  6A3D               	clrf	(??_mdb_poll+1)& (0+255),c
  5556                           
  5557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5558                           ; Switch size 1, requested type "simple"
  5559                           ; Number of cases is 1, Range of values is 0 to 0
  5560                           ; switch strategies available:
  5561                           ; Name         Instructions Cycles
  5562                           ; simple_byte            4     3 (average)
  5563                           ;	Chosen strategy is simple_byte
  5564  0102D0  503D               	movf	??_mdb_poll+1,w,c
  5565  0102D2  0A00               	xorlw	0	; case 0
  5566  0102D4  A4D8               	btfss	status,2,c
  5567  0102D6  D7F4               	goto	l9608
  5568                           
  5569                           ; BSR set to: 0
  5570                           ; Switch size 1, requested type "simple"
  5571                           ; Number of cases is 5, Range of values is 0 to 4
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte           16     9 (average)
  5575                           ;	Chosen strategy is simple_byte
  5576  0102D8  503C               	movf	??_mdb_poll,w,c
  5577  0102DA  0A00               	xorlw	0	; case 0
  5578  0102DC  B4D8               	btfsc	status,2,c
  5579  0102DE  D7DC               	goto	l9588
  5580  0102E0  0A01               	xorlw	1	; case 1
  5581  0102E2  B4D8               	btfsc	status,2,c
  5582  0102E4  D7DD               	goto	l9592
  5583  0102E6  0A03               	xorlw	3	; case 2
  5584  0102E8  B4D8               	btfsc	status,2,c
  5585  0102EA  D7DE               	goto	l9596
  5586  0102EC  0A01               	xorlw	1	; case 3
  5587  0102EE  B4D8               	btfsc	status,2,c
  5588  0102F0  D7DF               	goto	l9600
  5589  0102F2  0A07               	xorlw	7	; case 4
  5590  0102F4  B4D8               	btfsc	status,2,c
  5591  0102F6  D7E0               	goto	l9604
  5592  0102F8  D7E3               	goto	l9608
  5593  0102FA                     l9618:
  5594                           
  5595                           ; BSR set to: 0
  5596  0102FA  0E00               	movlw	0
  5597  0102FC  6E24               	movwf	_credit,c	;volatile
  5598                           
  5599                           ;mdb.c: 191:             return credit;
  5600  0102FE  5024               	movf	_credit,w,c	;volatile
  5601  010300  0012               	return	
  5602  010302                     l9622:
  5603                           
  5604                           ; BSR set to: 0
  5605  010302  0E01               	movlw	1
  5606  010304  D01A               	goto	L12
  5607  010306                     l9624:
  5608                           
  5609                           ; BSR set to: 0
  5610  010306  0E02               	movlw	2
  5611  010308  D018               	goto	L12
  5612  01030A                     l9626:
  5613                           
  5614                           ; BSR set to: 0
  5615  01030A  0E00               	movlw	0
  5616  01030C  6E24               	movwf	_credit,c	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;mdb.c: 200:             mdbflags.noteerr = 0;
  5620  01030E  9229               	bcf	_mdbflags,1,c
  5621                           
  5622                           ;mdb.c: 201:             return credit;
  5623  010310  5024               	movf	_credit,w,c	;volatile
  5624  010312  0012               	return	
  5625  010314                     l9632:
  5626                           
  5627                           ; BSR set to: 0
  5628  010314  0E04               	movlw	4
  5629  010316  D011               	goto	L12
  5630  010318                     l9634:
  5631                           
  5632                           ; BSR set to: 0
  5633  010318  0E05               	movlw	5
  5634  01031A  D00F               	goto	L12
  5635  01031C                     l9636:
  5636                           
  5637                           ; BSR set to: 0
  5638  01031C  0E06               	movlw	6
  5639  01031E  D00D               	goto	L12
  5640  010320                     l9638:
  5641                           
  5642                           ; BSR set to: 0
  5643  010320  0E07               	movlw	7
  5644  010322  D00B               	goto	L12
  5645  010324                     l9640:
  5646                           
  5647                           ; BSR set to: 0
  5648  010324  0E08               	movlw	8
  5649  010326  D009               	goto	L12
  5650  010328                     l9642:
  5651                           
  5652                           ; BSR set to: 0
  5653  010328  0E09               	movlw	9
  5654  01032A  D007               	goto	L12
  5655  01032C                     l9644:
  5656                           
  5657                           ; BSR set to: 0
  5658  01032C  0E0A               	movlw	10
  5659  01032E  D005               	goto	L12
  5660  010330                     l9646:
  5661                           
  5662                           ; BSR set to: 0
  5663  010330  0E0B               	movlw	11
  5664  010332  D003               	goto	L12
  5665  010334                     l9648:
  5666                           
  5667                           ; BSR set to: 0
  5668  010334  0E0C               	movlw	12
  5669  010336  D001               	goto	L12
  5670  010338                     l9650:
  5671                           
  5672                           ; BSR set to: 0
  5673  010338  0E00               	movlw	0
  5674  01033A                     L12:
  5675  01033A  6E24               	movwf	_credit,c	;volatile
  5676                           
  5677                           ;mdb.c: 230:         }
  5678  01033C  D030               	goto	l2889
  5679  01033E                     l9652:
  5680                           
  5681                           ; BSR set to: 0
  5682  01033E  5160               	movf	_mdbdata& (0+255),w,b
  5683  010340  6E3C               	movwf	??_mdb_poll& (0+255),c
  5684  010342  6A3D               	clrf	(??_mdb_poll+1)& (0+255),c
  5685                           
  5686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5687                           ; Switch size 1, requested type "simple"
  5688                           ; Number of cases is 1, Range of values is 0 to 0
  5689                           ; switch strategies available:
  5690                           ; Name         Instructions Cycles
  5691                           ; simple_byte            4     3 (average)
  5692                           ;	Chosen strategy is simple_byte
  5693  010344  503D               	movf	??_mdb_poll+1,w,c
  5694  010346  0A00               	xorlw	0	; case 0
  5695  010348  A4D8               	btfss	status,2,c
  5696  01034A  D7F6               	goto	l9650
  5697                           
  5698                           ; BSR set to: 0
  5699                           ; Switch size 1, requested type "simple"
  5700                           ; Number of cases is 13, Range of values is 0 to 12
  5701                           ; switch strategies available:
  5702                           ; Name         Instructions Cycles
  5703                           ; simple_byte           40    21 (average)
  5704                           ;	Chosen strategy is simple_byte
  5705  01034C  503C               	movf	??_mdb_poll,w,c
  5706  01034E  0A00               	xorlw	0	; case 0
  5707  010350  B4D8               	btfsc	status,2,c
  5708  010352  D7D3               	goto	l9618
  5709  010354  0A01               	xorlw	1	; case 1
  5710  010356  B4D8               	btfsc	status,2,c
  5711  010358  D7D4               	goto	l9622
  5712  01035A  0A03               	xorlw	3	; case 2
  5713  01035C  B4D8               	btfsc	status,2,c
  5714  01035E  D7D3               	goto	l9624
  5715  010360  0A01               	xorlw	1	; case 3
  5716  010362  B4D8               	btfsc	status,2,c
  5717  010364  D7D2               	goto	l9626
  5718  010366  0A07               	xorlw	7	; case 4
  5719  010368  B4D8               	btfsc	status,2,c
  5720  01036A  D7D4               	goto	l9632
  5721  01036C  0A01               	xorlw	1	; case 5
  5722  01036E  B4D8               	btfsc	status,2,c
  5723  010370  D7D3               	goto	l9634
  5724  010372  0A03               	xorlw	3	; case 6
  5725  010374  B4D8               	btfsc	status,2,c
  5726  010376  D7D2               	goto	l9636
  5727  010378  0A01               	xorlw	1	; case 7
  5728  01037A  B4D8               	btfsc	status,2,c
  5729  01037C  D7D1               	goto	l9638
  5730  01037E  0A0F               	xorlw	15	; case 8
  5731  010380  B4D8               	btfsc	status,2,c
  5732  010382  D7D0               	goto	l9640
  5733  010384  0A01               	xorlw	1	; case 9
  5734  010386  B4D8               	btfsc	status,2,c
  5735  010388  D7CF               	goto	l9642
  5736  01038A  0A03               	xorlw	3	; case 10
  5737  01038C  B4D8               	btfsc	status,2,c
  5738  01038E  D7CE               	goto	l9644
  5739  010390  0A01               	xorlw	1	; case 11
  5740  010392  B4D8               	btfsc	status,2,c
  5741  010394  D7CD               	goto	l9646
  5742  010396  0A07               	xorlw	7	; case 12
  5743  010398  B4D8               	btfsc	status,2,c
  5744  01039A  D7CC               	goto	l9648
  5745  01039C  D7CD               	goto	l9650
  5746  01039E                     l2889:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;mdb.c: 231:         mdbflags.noteerr = 1;
  5750  01039E  8229               	bsf	_mdbflags,1,c
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;mdb.c: 232:         return credit;
  5754  0103A0  5024               	movf	_credit,w,c	;volatile
  5755                           
  5756                           ; BSR set to: 0
  5757  0103A2  0012               	return		;funcret
  5758  0103A4                     __end_of_mdb_poll:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function _mdb_comm *****************
  5762 ;; Defined at:
  5763 ;;		line 237 in file "mdb.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  slvadd          1    wreg     unsigned char 
  5766 ;;  mcount          1    2[COMRAM] unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  slvadd          1    3[COMRAM] unsigned char 
  5769 ;;  i               1    4[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      unsigned char 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;Total ram usage:        3 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    2
  5786 ;; This function calls:
  5787 ;;		_EUSART1_Read
  5788 ;;		_TMR1_Initialize
  5789 ;;		_init_mdbdata
  5790 ;;		_mdb_on
  5791 ;;		_mdb_transmit
  5792 ;;		_mdb_waitr
  5793 ;; This function is called by:
  5794 ;;		_mdb_init
  5795 ;;		_mdb_reset
  5796 ;;		_mdb_noten
  5797 ;;		_mdb_security
  5798 ;;		_mdb_poll
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text28
  5803  0105CA                     __ptext28:
  5804                           	opt callstack 0
  5805  0105CA                     _mdb_comm:
  5806                           	opt callstack 25
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;incstack = 0
  5810                           ;mdb_comm@slvadd stored from wreg
  5811  0105CA  6E3A               	movwf	mdb_comm@slvadd,c
  5812                           
  5813                           ;mdb.c: 242:     TX1STAbits.TX9D = 1;
  5814  0105CC  809E               	bsf	3998,0,c	;volatile
  5815                           
  5816                           ;mdb.c: 243:     mdb_on();
  5817  0105CE  EC67  F091         	call	_mdb_on	;wreg free
  5818                           
  5819                           ;mdb.c: 247:     mdb_transmit(slvadd);
  5820  0105D2  503A               	movf	mdb_comm@slvadd,w,c
  5821  0105D4  EC25  F091         	call	_mdb_transmit
  5822                           
  5823                           ;mdb.c: 248:     TX1STAbits.TX9D = 0;
  5824  0105D8  909E               	bcf	3998,0,c	;volatile
  5825                           
  5826                           ;mdb.c: 252:     chkbyte = slvadd;
  5827  0105DA  C03A  F02A         	movff	mdb_comm@slvadd,_chkbyte
  5828                           
  5829                           ;mdb.c: 253:     if(mcount != 0)
  5830  0105DE  5039               	movf	mdb_comm@mcount,w,c
  5831  0105E0  B4D8               	btfsc	status,2,c
  5832  0105E2  D01A               	goto	u2340
  5833                           
  5834                           ;mdb.c: 254:     {;mdb.c: 255:         i = mcount + 1;
  5835  0105E4  2839               	incf	mdb_comm@mcount,w,c
  5836  0105E6  6E3B               	movwf	mdb_comm@i,c
  5837                           
  5838                           ;mdb.c: 256:         while(i != 0)
  5839  0105E8  D014               	goto	l8522
  5840  0105EA                     l8514:
  5841                           
  5842                           ;mdb.c: 257:         {;mdb.c: 258:             mdb_transmit(mdbdata[mcount]);
  5843  0105EA  0E60               	movlw	low _mdbdata
  5844  0105EC  2439               	addwf	mdb_comm@mcount,w,c
  5845  0105EE  6ED9               	movwf	fsr2l,c
  5846  0105F0  6ADA               	clrf	fsr2h,c
  5847  0105F2  0E00               	movlw	high _mdbdata
  5848  0105F4  22DA               	addwfc	fsr2h,f,c
  5849  0105F6  50DF               	movf	indf2,w,c
  5850  0105F8  EC25  F091         	call	_mdb_transmit
  5851                           
  5852                           ;mdb.c: 261:             chkbyte = chkbyte + mdbdata[mcount];
  5853  0105FC  0E60               	movlw	low _mdbdata
  5854  0105FE  2439               	addwf	mdb_comm@mcount,w,c
  5855  010600  6ED9               	movwf	fsr2l,c
  5856  010602  6ADA               	clrf	fsr2h,c
  5857  010604  0E00               	movlw	high _mdbdata
  5858  010606  22DA               	addwfc	fsr2h,f,c
  5859  010608  50DF               	movf	indf2,w,c
  5860  01060A  242A               	addwf	_chkbyte,w,c
  5861  01060C  6E2A               	movwf	_chkbyte,c
  5862                           
  5863                           ;mdb.c: 262:             i--;
  5864  01060E  063B               	decf	mdb_comm@i,f,c
  5865                           
  5866                           ;mdb.c: 263:             mcount--;
  5867  010610  0639               	decf	mdb_comm@mcount,f,c
  5868  010612                     l8522:
  5869                           
  5870                           ;mdb.c: 256:         while(i != 0)
  5871  010612  503B               	movf	mdb_comm@i,w,c
  5872  010614  A4D8               	btfss	status,2,c
  5873  010616  D7E9               	goto	l8514
  5874  010618                     u2340:
  5875                           
  5876                           ;mdb.c: 266:     mdb_transmit(chkbyte);
  5877  010618  502A               	movf	_chkbyte,w,c
  5878  01061A  EC25  F091         	call	_mdb_transmit
  5879                           
  5880                           ;mdb.c: 273:     init_mdbdata(0xFF);
  5881  01061E  0EFF               	movlw	255
  5882  010620  EC29  F090         	call	_init_mdbdata
  5883                           
  5884                           ;mdb.c: 274:     TMR1_Initialize();
  5885  010624  ECEA  F08E         	call	_TMR1_Initialize	;wreg free
  5886                           
  5887                           ;mdb.c: 275:     dbcount = 0;
  5888  010628  0E00               	movlw	0
  5889  01062A  6E17               	movwf	_dbcount+1,c
  5890  01062C  0E00               	movlw	0
  5891  01062E  6E16               	movwf	_dbcount,c
  5892                           
  5893                           ;mdb.c: 276:     mdbflags.isdata = 0;
  5894  010630  9029               	bcf	_mdbflags,0,c
  5895                           
  5896                           ;mdb.c: 277:     i = 0;
  5897  010632  0E00               	movlw	0
  5898  010634  6E3B               	movwf	mdb_comm@i,c
  5899                           
  5900                           ;mdb.c: 279:     while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  5901  010636  D01C               	goto	u2370
  5902  010638                     l8536:
  5903                           
  5904                           ; BSR set to: 14
  5905                           ;mdb.c: 280:     {;mdb.c: 282:         dbcount++;
  5906  010638  4A16               	infsnz	_dbcount,f,c
  5907  01063A  2A17               	incf	_dbcount+1,f,c
  5908                           
  5909                           ; BSR set to: 14
  5910                           ;mdb.c: 283:         mdbflags.isdata = 0;
  5911  01063C  9029               	bcf	_mdbflags,0,c
  5912                           
  5913                           ;mdb.c: 286:         while(PIR3bits.RC1IF && !mdbflags.isdata)
  5914  01063E  D013               	goto	l8550
  5915  010640                     l8540:
  5916                           
  5917                           ; BSR set to: 14
  5918                           ;mdb.c: 287:         {;mdb.c: 290:             mdbdata[i] = EUSART1_Read();
  5919  010640  0E60               	movlw	low _mdbdata
  5920  010642  243B               	addwf	mdb_comm@i,w,c
  5921  010644  6ED9               	movwf	fsr2l,c
  5922  010646  6ADA               	clrf	fsr2h,c
  5923  010648  0E00               	movlw	high _mdbdata
  5924  01064A  22DA               	addwfc	fsr2h,f,c
  5925  01064C  EC0A  F091         	call	_EUSART1_Read	;wreg free
  5926  010650  6EDF               	movwf	indf2,c
  5927                           
  5928                           ;mdb.c: 291:             mdb_waitr();
  5929  010652  EC5D  F091         	call	_mdb_waitr	;wreg free
  5930                           
  5931                           ;mdb.c: 293:             mdbflags.isdata = RC1STAbits.RX9D;
  5932  010656  A09D               	btfss	3997,0,c	;volatile
  5933  010658  D002               	bra	u2355
  5934  01065A  8029               	bsf	_mdbflags,0,c
  5935  01065C  D001               	bra	u2357
  5936  01065E                     u2355:
  5937  01065E  9029               	bcf	_mdbflags,0,c
  5938  010660                     u2357:
  5939                           
  5940                           ;mdb.c: 294:             TMR1_Initialize();
  5941  010660  ECEA  F08E         	call	_TMR1_Initialize	;wreg free
  5942                           
  5943                           ;mdb.c: 295:             i++;
  5944  010664  2A3B               	incf	mdb_comm@i,f,c
  5945  010666                     l8550:
  5946                           
  5947                           ;mdb.c: 286:         while(PIR3bits.RC1IF && !mdbflags.isdata)
  5948  010666  010E               	movlb	14	; () banked
  5949  010668  ABCD               	btfss	205,5,b	;volatile
  5950  01066A  D002               	goto	u2370
  5951                           
  5952                           ; BSR set to: 14
  5953  01066C  A029               	btfss	_mdbflags,0,c
  5954  01066E  D7E8               	goto	l8540
  5955  010670                     u2370:
  5956                           
  5957                           ;mdb.c: 279:     while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  5958                           
  5959                           ;mdb.c: 299:     }
  5960  010670  010E               	movlb	14	; () banked
  5961  010672  B1CE               	btfsc	206,0,b	;volatile
  5962  010674  D002               	goto	u2390
  5963                           
  5964                           ; BSR set to: 14
  5965  010676  A029               	btfss	_mdbflags,0,c
  5966  010678  D7DF               	goto	l8536
  5967  01067A                     u2390:
  5968                           
  5969                           ; BSR set to: 14
  5970                           ;mdb.c: 301:     i--;
  5971  01067A  063B               	decf	mdb_comm@i,f,c
  5972                           
  5973                           ; BSR set to: 14
  5974                           ;mdb.c: 303:     mdbflags.timeout = PIR4bits.TMR1IF;
  5975  01067C  A1CE               	btfss	206,0,b	;volatile
  5976  01067E  D002               	bra	u2405
  5977  010680  8629               	bsf	_mdbflags,3,c
  5978  010682  D001               	bra	u2407
  5979  010684                     u2405:
  5980  010684  9629               	bcf	_mdbflags,3,c
  5981  010686                     u2407:
  5982                           
  5983                           ;mdb.c: 305:     if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  5984  010686  A029               	btfss	_mdbflags,0,c
  5985  010688  D00F               	goto	l8570
  5986  01068A  0E60               	movlw	low _mdbdata
  5987  01068C  243B               	addwf	mdb_comm@i,w,c
  5988  01068E  6ED9               	movwf	fsr2l,c
  5989  010690  6ADA               	clrf	fsr2h,c
  5990  010692  0E00               	movlw	high _mdbdata
  5991  010694  22DA               	addwfc	fsr2h,f,c
  5992  010696  50DF               	movf	indf2,w,c
  5993  010698  B4D8               	btfsc	status,2,c
  5994  01069A  D006               	goto	l8570
  5995                           
  5996                           ;mdb.c: 306:     {;mdb.c: 307:         TX1STAbits.TX9D = 1;
  5997  01069C  809E               	bsf	3998,0,c	;volatile
  5998                           
  5999                           ;mdb.c: 308:         mdb_on();
  6000  01069E  EC67  F091         	call	_mdb_on	;wreg free
  6001                           
  6002                           ;mdb.c: 309:         mdb_transmit(0x00);
  6003  0106A2  0E00               	movlw	0
  6004  0106A4  EC25  F091         	call	_mdb_transmit
  6005  0106A8                     l8570:
  6006                           
  6007                           ;mdb.c: 313:     mdb_on();
  6008  0106A8  EC67  F091         	call	_mdb_on	;wreg free
  6009                           
  6010                           ;mdb.c: 315:     return(i);
  6011  0106AC  503B               	movf	mdb_comm@i,w,c
  6012  0106AE  0012               	return		;funcret
  6013  0106B0                     __end_of_mdb_comm:
  6014                           	opt callstack 0
  6015                           
  6016 ;; *************** function _mdb_waitr *****************
  6017 ;; Defined at:
  6018 ;;		line 339 in file "mdb.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		None
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_mdb_comm
  6042 ;;		_cctalk_read
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text29
  6047  0122BA                     __ptext29:
  6048                           	opt callstack 0
  6049  0122BA                     _mdb_waitr:
  6050                           	opt callstack 26
  6051                           
  6052                           ;mdb.c: 341:     while(BAUD1CONbits.RCIDL == 0)
  6053                           
  6054                           ;mdb.c: 342:     {;mdb.c: 344:     }
  6055                           
  6056                           ;incstack = 0
  6057  0122BA  BC9F               	btfsc	3999,6,c	;volatile
  6058  0122BC  0012               	return	
  6059  0122BE  D7FD               	goto	_mdb_waitr
  6060  0122C0                     __end_of_mdb_waitr:
  6061                           	opt callstack 0
  6062                           
  6063 ;; *************** function _mdb_transmit *****************
  6064 ;; Defined at:
  6065 ;;		line 440 in file "mdb.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  txbyte          1    wreg     unsigned char 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  txbyte          1    1[COMRAM] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;Total ram usage:        1 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    1
  6086 ;; This function calls:
  6087 ;;		_EUSART1_Write
  6088 ;;		_mdb_waitx
  6089 ;; This function is called by:
  6090 ;;		_mdb_comm
  6091 ;;		_mdb_test
  6092 ;;		_cctalk_comm
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text30
  6097  01224A                     __ptext30:
  6098                           	opt callstack 0
  6099  01224A                     _mdb_transmit:
  6100                           	opt callstack 25
  6101                           
  6102                           ;incstack = 0
  6103                           ;mdb_transmit@txbyte stored from wreg
  6104  01224A  6E38               	movwf	mdb_transmit@txbyte,c
  6105                           
  6106                           ;mdb.c: 440: void mdb_transmit(uint8_t txbyte);mdb.c: 441: {;mdb.c: 442:     EUSART1_Wri
      +                          te(txbyte);
  6107  01224C  5038               	movf	mdb_transmit@txbyte,w,c
  6108  01224E  EC2C  F091         	call	_EUSART1_Write
  6109                           
  6110                           ;mdb.c: 443:     mdb_waitx();
  6111  012252  EC60  F091         	call	_mdb_waitx	;wreg free
  6112  012256  0012               	return		;funcret
  6113  012258                     __end_of_mdb_transmit:
  6114                           	opt callstack 0
  6115                           
  6116 ;; *************** function _mdb_waitx *****************
  6117 ;; Defined at:
  6118 ;;		line 331 in file "mdb.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		None
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_mdb_transmit
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text31
  6146  0122C0                     __ptext31:
  6147                           	opt callstack 0
  6148  0122C0                     _mdb_waitx:
  6149                           	opt callstack 25
  6150                           
  6151                           ;mdb.c: 333:     while(TX1STAbits.TRMT == 0)
  6152                           
  6153                           ;mdb.c: 334:     {;mdb.c: 336:     }
  6154                           
  6155                           ;incstack = 0
  6156  0122C0  B29E               	btfsc	3998,1,c	;volatile
  6157  0122C2  0012               	return	
  6158  0122C4  D7FD               	goto	_mdb_waitx
  6159  0122C6                     __end_of_mdb_waitx:
  6160                           	opt callstack 0
  6161                           
  6162 ;; *************** function _EUSART1_Write *****************
  6163 ;; Defined at:
  6164 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  txData          1    wreg     unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  txData          1    0[COMRAM] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        1 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_mdb_transmit
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text32
  6192  012258                     __ptext32:
  6193                           	opt callstack 0
  6194  012258                     _EUSART1_Write:
  6195                           	opt callstack 25
  6196                           
  6197                           ;incstack = 0
  6198                           ;EUSART1_Write@txData stored from wreg
  6199  012258  6E37               	movwf	EUSART1_Write@txData,c
  6200  01225A                     
  6201                           ;mcc_generated_files/eusart1.c: 95:     while(0 == PIR3bits.TX1IF)
  6202                           
  6203                           ;mcc_generated_files/eusart1.c: 96:     {;mcc_generated_files/eusart1.c: 97:     }
  6204  01225A  010E               	movlb	14	; () banked
  6205  01225C  A9CD               	btfss	205,4,b	;volatile
  6206  01225E  D7FD               	goto	l7972
  6207                           
  6208                           ; BSR set to: 14
  6209                           ;mcc_generated_files/eusart1.c: 99:     TX1REG = txData;
  6210  012260  C037  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  6211                           
  6212                           ; BSR set to: 14
  6213  012264  0012               	return		;funcret
  6214  012266                     __end_of_EUSART1_Write:
  6215                           	opt callstack 0
  6216                           
  6217 ;; *************** function _mdb_on *****************
  6218 ;; Defined at:
  6219 ;;		line 318 in file "mdb.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		None
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        0 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;;		_mdb_comm
  6244 ;;		_mdb_test
  6245 ;;		_cctalk_init
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text33
  6250  0122CE                     __ptext33:
  6251                           	opt callstack 0
  6252  0122CE                     _mdb_on:
  6253                           	opt callstack 26
  6254                           
  6255                           ;mdb.c: 324:     LATCbits.LATC0 = 1;
  6256                           
  6257                           ; BSR set to: 14
  6258                           ;incstack = 0
  6259  0122CE  8085               	bsf	3973,0,c	;volatile
  6260  0122D0  0012               	return		;funcret
  6261  0122D2                     __end_of_mdb_on:
  6262                           	opt callstack 0
  6263                           
  6264 ;; *************** function _init_mdbdata *****************
  6265 ;; Defined at:
  6266 ;;		line 13 in file "mdb.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  initdata        1    wreg     unsigned char 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  initdata        1    0[COMRAM] unsigned char 
  6271 ;;  i               1    1[COMRAM] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;Total ram usage:        2 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_mdb_noten
  6291 ;;		_mdb_security
  6292 ;;		_mdb_comm
  6293 ;;		_cctalk_pinenter
  6294 ;;		_cctalk_comm
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text34
  6299  012052                     __ptext34:
  6300                           	opt callstack 0
  6301  012052                     _init_mdbdata:
  6302                           	opt callstack 26
  6303                           
  6304                           ;incstack = 0
  6305                           ;init_mdbdata@initdata stored from wreg
  6306  012052  6E37               	movwf	init_mdbdata@initdata,c
  6307                           
  6308                           ;mdb.c: 13: void init_mdbdata(uint8_t initdata);mdb.c: 14: {;mdb.c: 15:     for(uint8_t 
      +                          i = 0;i < 33; i++)
  6309  012054  0E00               	movlw	0
  6310  012056  6E38               	movwf	init_mdbdata@i,c
  6311  012058                     l8226:
  6312                           
  6313                           ;mdb.c: 16:     {;mdb.c: 17:         mdbdata[i] = initdata;
  6314  012058  0E60               	movlw	low _mdbdata
  6315  01205A  2438               	addwf	init_mdbdata@i,w,c
  6316  01205C  6ED9               	movwf	fsr2l,c
  6317  01205E  6ADA               	clrf	fsr2h,c
  6318  012060  0E00               	movlw	high _mdbdata
  6319  012062  22DA               	addwfc	fsr2h,f,c
  6320  012064  C037  FFDF         	movff	init_mdbdata@initdata,indf2
  6321                           
  6322                           ;mdb.c: 18:     }
  6323  012068  2A38               	incf	init_mdbdata@i,f,c
  6324  01206A  0E20               	movlw	32
  6325  01206C  6438               	cpfsgt	init_mdbdata@i,c
  6326  01206E  D7F4               	goto	l8226
  6327  012070  0012               	return	
  6328  012072                     __end_of_init_mdbdata:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _EUSART1_Read *****************
  6332 ;; Defined at:
  6333 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      unsigned char 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        0 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_mdb_comm
  6357 ;;		_cctalk_read
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text35
  6362  012214                     __ptext35:
  6363                           	opt callstack 0
  6364  012214                     _EUSART1_Read:
  6365                           	opt callstack 26
  6366                           
  6367                           ;mcc_generated_files/eusart1.c: 77:     while(!PIR3bits.RC1IF)
  6368                           
  6369                           ;mcc_generated_files/eusart1.c: 78:     {;mcc_generated_files/eusart1.c: 79:     }
  6370                           
  6371                           ;incstack = 0
  6372  012214  010E               	movlb	14	; () banked
  6373  012216  ABCD               	btfss	205,5,b	;volatile
  6374  012218  D7FD               	goto	_EUSART1_Read
  6375                           
  6376                           ; BSR set to: 14
  6377                           ;mcc_generated_files/eusart1.c: 82:     if(1 == RC1STAbits.OERR)
  6378  01221A  A29D               	btfss	3997,1,c	;volatile
  6379  01221C  D002               	goto	l8084
  6380                           
  6381                           ; BSR set to: 14
  6382                           ;mcc_generated_files/eusart1.c: 83:     {;mcc_generated_files/eusart1.c: 86:         RC1
      +                          STAbits.CREN = 0;
  6383  01221E  989D               	bcf	3997,4,c	;volatile
  6384                           
  6385                           ;mcc_generated_files/eusart1.c: 87:         RC1STAbits.CREN = 1;
  6386  012220  889D               	bsf	3997,4,c	;volatile
  6387  012222                     l8084:
  6388                           
  6389                           ; BSR set to: 14
  6390                           ;mcc_generated_files/eusart1.c: 90:     return RC1REG;
  6391  012222  5099               	movf	3993,w,c	;volatile
  6392                           
  6393                           ; BSR set to: 14
  6394  012224  0012               	return		;funcret
  6395  012226                     __end_of_EUSART1_Read:
  6396                           	opt callstack 0
  6397                           
  6398 ;; *************** function _lcd_init *****************
  6399 ;; Defined at:
  6400 ;;		line 12 in file "lcd.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;Total ram usage:        2 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    6
  6421 ;; This function calls:
  6422 ;;		_lcd_clockE
  6423 ;;		_lcd_test
  6424 ;;		_lcd_write
  6425 ;; This function is called by:
  6426 ;;		_main
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text36
  6431  011380                     __ptext36:
  6432                           	opt callstack 0
  6433  011380                     _lcd_init:
  6434                           	opt callstack 24
  6435                           
  6436                           ;lcd.c: 14:     LATE = 0x00;
  6437                           
  6438                           ; BSR set to: 14
  6439                           ;incstack = 0
  6440  011380  0E00               	movlw	0
  6441  011382  6E87               	movwf	3975,c	;volatile
  6442                           
  6443                           ;lcd.c: 16:     LATD = 0x03;
  6444  011384  0E03               	movlw	3
  6445  011386  6E86               	movwf	3974,c	;volatile
  6446                           
  6447                           ;lcd.c: 17:     for(count = 3; count > 0; count-- )
  6448  011388  0E03               	movlw	3
  6449  01138A  6E5D               	movwf	_count,c
  6450  01138C                     l9478:
  6451  01138C  505D               	movf	_count,w,c
  6452  01138E  0A80               	xorlw	128
  6453  011390  0F7F               	addlw	-129
  6454  011392  A0D8               	btfss	status,0,c
  6455  011394  D00B               	goto	l9490
  6456                           
  6457                           ;lcd.c: 18:     {;lcd.c: 19:         lcd_clockE();
  6458  011396  EC3A  F091         	call	_lcd_clockE	;wreg free
  6459                           
  6460                           ;lcd.c: 20:         _delay((unsigned long)((5)*(12000000/4000.0)));
  6461  01139A  0E14               	movlw	20
  6462  01139C  6E41               	movwf	??_lcd_init& (0+255),c
  6463  01139E  0E7A               	movlw	122
  6464  0113A0                     u3717:
  6465  0113A0  2EE8               	decfsz	wreg,f,c
  6466  0113A2  D7FE               	bra	u3717
  6467  0113A4  2E41               	decfsz	??_lcd_init& (0+255),f,c
  6468  0113A6  D7FC               	bra	u3717
  6469                           
  6470                           ;lcd.c: 22:     }
  6471  0113A8  065D               	decf	_count,f,c
  6472  0113AA  D7F0               	goto	l9478
  6473  0113AC                     l9490:
  6474                           
  6475                           ;lcd.c: 23:     _delay((unsigned long)((50)*(12000000/4000000.0)));
  6476  0113AC  0E32               	movlw	50
  6477  0113AE                     u3727:
  6478  0113AE  2EE8               	decfsz	wreg,f,c
  6479  0113B0  D7FE               	bra	u3727
  6480                           
  6481                           ;lcd.c: 24:     LATD = 0x02;
  6482  0113B2  0E02               	movlw	2
  6483  0113B4  6E86               	movwf	3974,c	;volatile
  6484                           
  6485                           ;lcd.c: 25:     lcd_clockE();
  6486  0113B6  EC3A  F091         	call	_lcd_clockE	;wreg free
  6487  0113BA  0E2C               	movlw	44
  6488  0113BC  ECDC  F08F         	call	_lcd_write
  6489  0113C0  0E0C               	movlw	12
  6490  0113C2  ECDC  F08F         	call	_lcd_write
  6491  0113C6  0E06               	movlw	6
  6492  0113C8  ECDC  F08F         	call	_lcd_write
  6493  0113CC  0E01               	movlw	1
  6494  0113CE  ECDC  F08F         	call	_lcd_write
  6495                           
  6496                           ;lcd.c: 36:     lcd_test();
  6497  0113D2  ECD7  F090         	call	_lcd_test	;wreg free
  6498                           
  6499                           ;lcd.c: 37:     _delay((unsigned long)((250)*(12000000/4000.0)));
  6500  0113D6  0E04               	movlw	4
  6501  0113D8  6E42               	movwf	(??_lcd_init+1)& (0+255),c
  6502  0113DA  0ECF               	movlw	207
  6503  0113DC  6E41               	movwf	??_lcd_init& (0+255),c
  6504  0113DE  0E02               	movlw	2
  6505  0113E0                     u3737:
  6506  0113E0  2EE8               	decfsz	wreg,f,c
  6507  0113E2  D7FE               	bra	u3737
  6508  0113E4  2E41               	decfsz	??_lcd_init& (0+255),f,c
  6509  0113E6  D7FC               	bra	u3737
  6510  0113E8  2E42               	decfsz	(??_lcd_init+1)& (0+255),f,c
  6511  0113EA  D7FA               	bra	u3737
  6512  0113EC  F000               	nop		;# 
  6513  0113EE  0012               	return		;funcret
  6514  0113F0                     __end_of_lcd_init:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _lcd_test *****************
  6518 ;; Defined at:
  6519 ;;		line 302 in file "lcd.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  character       1    9[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        1 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    5
  6540 ;; This function calls:
  6541 ;;		_lcd_writeC
  6542 ;; This function is called by:
  6543 ;;		_lcd_init
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text37
  6548  0121AE                     __ptext37:
  6549                           	opt callstack 0
  6550  0121AE                     _lcd_test:
  6551                           	opt callstack 24
  6552                           
  6553                           ;lcd.c: 304:     uint8_t character = 0x30;
  6554                           
  6555                           ;incstack = 0
  6556  0121AE  0E30               	movlw	48
  6557  0121B0  D004               	goto	L13
  6558  0121B2                     l9308:
  6559                           
  6560                           ;lcd.c: 306:     {;lcd.c: 307:         lcd_writeC(character);
  6561  0121B2  5040               	movf	lcd_test@character,w,c
  6562  0121B4  EC9E  F08C         	call	_lcd_writeC
  6563                           
  6564                           ;lcd.c: 308:         character = character+ 1;
  6565  0121B8  2840               	incf	lcd_test@character,w,c
  6566  0121BA                     L13:
  6567  0121BA  6E40               	movwf	lcd_test@character,c
  6568                           
  6569                           ;lcd.c: 305:     while(character < 0x80)
  6570  0121BC  0E7F               	movlw	127
  6571  0121BE  6440               	cpfsgt	lcd_test@character,c
  6572  0121C0  D7F8               	goto	l9308
  6573  0121C2  0012               	return	
  6574  0121C4                     __end_of_lcd_test:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _enter_service *****************
  6578 ;; Defined at:
  6579 ;;		line 215 in file "main.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      void 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;Total ram usage:        2 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:   10
  6600 ;; This function calls:
  6601 ;;		_Audit
  6602 ;;		_Clear_cred
  6603 ;;		_Hopper_coin
  6604 ;;		_Sensor_set
  6605 ;;		_Vend_setup
  6606 ;;		_butindb
  6607 ;;		_hopper_test
  6608 ;;		_lcd_string
  6609 ;;		_mdb_unlock
  6610 ;;		_price_set
  6611 ;;		_set_notes
  6612 ;; This function is called by:
  6613 ;;		_main
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text38
  6618  010D3E                     __ptext38:
  6619                           	opt callstack 0
  6620  010D3E                     _enter_service:
  6621                           	opt callstack 20
  6622                           
  6623                           ;main.c: 217:     mdb_unlock();
  6624                           
  6625                           ;incstack = 0
  6626  010D3E  ECCA  F083         	call	_mdb_unlock	;wreg free
  6627  010D42  0E5C               	movlw	low _servmsg
  6628  010D44  6E40               	movwf	lcd_string@lcdstring,c
  6629  010D46  0EFC               	movlw	high _servmsg
  6630  010D48  6E41               	movwf	lcd_string@lcdstring+1,c
  6631  010D4A  0E00               	movlw	0
  6632  010D4C  6E42               	movwf	lcd_string@lcdline,c
  6633  010D4E  ECCC  F088         	call	_lcd_string	;wreg free
  6634                           
  6635                           ;main.c: 221:     while(venflags.service)
  6636  010D52  D043               	goto	l1046
  6637  010D54                     l9540:
  6638                           
  6639                           ;main.c: 222:     {;main.c: 223:         buttons = butindb();
  6640  010D54  ECCD  F08D         	call	_butindb	;wreg free
  6641  010D58  6E22               	movwf	_buttons,c	;volatile
  6642                           
  6643                           ;main.c: 224:         switch(buttons)
  6644  010D5A  D01C               	goto	l9560
  6645  010D5C                     l9542:
  6646  010D5C  ECD2  F081         	call	_Audit	;wreg free
  6647                           
  6648                           ;main.c: 227:             break;
  6649  010D60  D03C               	goto	l1046
  6650  010D62                     l9544:
  6651  010D62  ECE3  F084         	call	_Sensor_set	;wreg free
  6652                           
  6653                           ;main.c: 229:             break;
  6654  010D66  D039               	goto	l1046
  6655  010D68                     l9546:
  6656  010D68  ECF7  F085         	call	_Hopper_coin	;wreg free
  6657                           
  6658                           ;main.c: 231:             break;
  6659  010D6C  D036               	goto	l1046
  6660  010D6E                     l9548:
  6661  010D6E  EC58  F083         	call	_set_notes	;wreg free
  6662                           
  6663                           ;main.c: 233:             break;
  6664  010D72  D033               	goto	l1046
  6665  010D74                     l9550:
  6666  010D74  EC7E  F08B         	call	_Clear_cred	;wreg free
  6667                           
  6668                           ;main.c: 235:             venflags.service = 0;
  6669  010D78  9E13               	bcf	_venflags,7,c
  6670  010D7A  00FF               	reset		;# 
  6671  010D7C                     l9554:
  6672  010D7C  ECAA  F08B         	call	_price_set	;wreg free
  6673                           
  6674                           ;main.c: 238:             break;
  6675  010D80  D02C               	goto	l1046
  6676  010D82                     l9556:
  6677  010D82  EC28  F084         	call	_Vend_setup	;wreg free
  6678                           
  6679                           ;main.c: 240:             break;
  6680  010D86  D029               	goto	l1046
  6681  010D88                     l1057:
  6682  010D88  9E13               	bcf	_venflags,7,c
  6683  010D8A  00FF               	reset		;# 
  6684                           
  6685                           ;main.c: 243:             break;
  6686  010D8C  D026               	goto	l1046
  6687  010D8E                     l9558:
  6688  010D8E  ECED  F090         	call	_hopper_test	;wreg free
  6689                           
  6690                           ;main.c: 245:         }
  6691  010D92  D023               	goto	l1046
  6692  010D94                     l9560:
  6693  010D94  5022               	movf	_buttons,w,c	;volatile
  6694  010D96  6E58               	movwf	??_enter_service& (0+255),c
  6695  010D98  6A59               	clrf	(??_enter_service+1)& (0+255),c
  6696                           
  6697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6698                           ; Switch size 1, requested type "simple"
  6699                           ; Number of cases is 1, Range of values is 0 to 0
  6700                           ; switch strategies available:
  6701                           ; Name         Instructions Cycles
  6702                           ; simple_byte            4     3 (average)
  6703                           ;	Chosen strategy is simple_byte
  6704  010D9A  5059               	movf	??_enter_service+1,w,c
  6705  010D9C  0A00               	xorlw	0	; case 0
  6706  010D9E  A4D8               	btfss	status,2,c
  6707  010DA0  D01C               	goto	l1046
  6708                           
  6709                           ; Switch size 1, requested type "simple"
  6710                           ; Number of cases is 9, Range of values is 1 to 128
  6711                           ; switch strategies available:
  6712                           ; Name         Instructions Cycles
  6713                           ; simple_byte           28    15 (average)
  6714                           ;	Chosen strategy is simple_byte
  6715  010DA2  5058               	movf	??_enter_service,w,c
  6716  010DA4  0A01               	xorlw	1	; case 1
  6717  010DA6  B4D8               	btfsc	status,2,c
  6718  010DA8  D7D9               	goto	l9542
  6719  010DAA  0A03               	xorlw	3	; case 2
  6720  010DAC  B4D8               	btfsc	status,2,c
  6721  010DAE  D7D9               	goto	l9544
  6722  010DB0  0A01               	xorlw	1	; case 3
  6723  010DB2  B4D8               	btfsc	status,2,c
  6724  010DB4  D7EC               	goto	l9558
  6725  010DB6  0A07               	xorlw	7	; case 4
  6726  010DB8  B4D8               	btfsc	status,2,c
  6727  010DBA  D7D6               	goto	l9546
  6728  010DBC  0A0C               	xorlw	12	; case 8
  6729  010DBE  B4D8               	btfsc	status,2,c
  6730  010DC0  D7D6               	goto	l9548
  6731  010DC2  0A18               	xorlw	24	; case 16
  6732  010DC4  B4D8               	btfsc	status,2,c
  6733  010DC6  D7D6               	goto	l9550
  6734  010DC8  0A30               	xorlw	48	; case 32
  6735  010DCA  B4D8               	btfsc	status,2,c
  6736  010DCC  D7D7               	goto	l9554
  6737  010DCE  0A60               	xorlw	96	; case 64
  6738  010DD0  B4D8               	btfsc	status,2,c
  6739  010DD2  D7D7               	goto	l9556
  6740  010DD4  0AC0               	xorlw	192	; case 128
  6741  010DD6  B4D8               	btfsc	status,2,c
  6742  010DD8  D7D7               	goto	l1057
  6743  010DDA                     l1046:
  6744                           
  6745                           ;main.c: 221:     while(venflags.service)
  6746  010DDA  AE13               	btfss	_venflags,7,c
  6747  010DDC  0012               	return	
  6748  010DDE  D7BA               	goto	l9540
  6749  010DE0                     __end_of_enter_service:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _set_notes *****************
  6753 ;; Defined at:
  6754 ;;		line 57 in file "mdb.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:        2 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    8
  6775 ;; This function calls:
  6776 ;;		_butindb
  6777 ;;		_displ_note
  6778 ;;		_enable_notes
  6779 ;;		_lcd_string
  6780 ;; This function is called by:
  6781 ;;		_enter_service
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text39
  6786  0106B0                     __ptext39:
  6787                           	opt callstack 0
  6788  0106B0                     _set_notes:
  6789                           	opt callstack 21
  6790                           
  6791                           ;incstack = 0
  6792  0106B0  0EAC               	movlw	low _setnotes
  6793  0106B2  6E40               	movwf	lcd_string@lcdstring,c
  6794  0106B4  0EFC               	movlw	high _setnotes
  6795  0106B6  6E41               	movwf	lcd_string@lcdstring+1,c
  6796  0106B8  0E00               	movlw	0
  6797  0106BA  6E42               	movwf	lcd_string@lcdline,c
  6798  0106BC  ECCC  F088         	call	_lcd_string	;wreg free
  6799                           
  6800                           ;mdb.c: 60:     mdbflags.noteset = 1;
  6801  0106C0  8A29               	bsf	_mdbflags,5,c
  6802                           
  6803                           ;mdb.c: 61:     mdbflags.endis = 1;
  6804  0106C2  8C29               	bsf	_mdbflags,6,c
  6805                           
  6806                           ;mdb.c: 62:     while(mdbflags.noteset)
  6807  0106C4  D064               	goto	l2836
  6808  0106C6                     l9224:
  6809                           
  6810                           ;mdb.c: 63:     {;mdb.c: 64:         buttons = butindb();
  6811  0106C6  ECCD  F08D         	call	_butindb	;wreg free
  6812  0106CA  6E22               	movwf	_buttons,c	;volatile
  6813                           
  6814                           ;mdb.c: 65:         notenum = buttons;
  6815  0106CC  C022  F05E         	movff	_buttons,_notenum	;volatile
  6816                           
  6817                           ;mdb.c: 66:         switch(buttons)
  6818  0106D0  D041               	goto	l9244
  6819  0106D2                     l9228:
  6820  0106D2  0EB4               	movlw	low _tenrand
  6821  0106D4  6E45               	movwf	displ_note@notestring,c
  6822  0106D6  0EFF               	movlw	high _tenrand
  6823  0106D8  6E46               	movwf	displ_note@notestring+1,c
  6824  0106DA  EC58  F090         	call	_displ_note	;wreg free
  6825  0106DE  6E2D               	movwf	_dspposition,c
  6826                           
  6827                           ;mdb.c: 70:             enable_notes(0x01);
  6828  0106E0  0E01               	movlw	1
  6829  0106E2  EC0C  F089         	call	_enable_notes
  6830                           
  6831                           ;mdb.c: 71:             break;
  6832  0106E6  D050               	goto	l2840
  6833  0106E8                     l9230:
  6834  0106E8  0EE6               	movlw	low _twentyrand
  6835  0106EA  6E45               	movwf	displ_note@notestring,c
  6836  0106EC  0EFF               	movlw	high _twentyrand
  6837  0106EE  6E46               	movwf	displ_note@notestring+1,c
  6838  0106F0  EC58  F090         	call	_displ_note	;wreg free
  6839  0106F4  6E2D               	movwf	_dspposition,c
  6840                           
  6841                           ;mdb.c: 74:             enable_notes(0x02);
  6842  0106F6  0E02               	movlw	2
  6843  0106F8  EC0C  F089         	call	_enable_notes
  6844                           
  6845                           ;mdb.c: 75:             break;
  6846  0106FC  D045               	goto	l2840
  6847  0106FE                     l9232:
  6848  0106FE  0EDE               	movlw	low _fiftyrand
  6849  010700  6E45               	movwf	displ_note@notestring,c
  6850  010702  0EFF               	movlw	high _fiftyrand
  6851  010704  6E46               	movwf	displ_note@notestring+1,c
  6852  010706  EC58  F090         	call	_displ_note	;wreg free
  6853  01070A  6E2D               	movwf	_dspposition,c
  6854                           
  6855                           ;mdb.c: 78:             enable_notes(0x04);
  6856  01070C  0E04               	movlw	4
  6857  01070E  EC0C  F089         	call	_enable_notes
  6858                           
  6859                           ;mdb.c: 79:             break;
  6860  010712  D03A               	goto	l2840
  6861  010714                     l9234:
  6862  010714  0ED6               	movlw	low _hundredrand
  6863  010716  6E45               	movwf	displ_note@notestring,c
  6864  010718  0EFF               	movlw	high _hundredrand
  6865  01071A  6E46               	movwf	displ_note@notestring+1,c
  6866  01071C  EC58  F090         	call	_displ_note	;wreg free
  6867  010720  6E2D               	movwf	_dspposition,c
  6868                           
  6869                           ;mdb.c: 82:             enable_notes(0x08);
  6870  010722  0E08               	movlw	8
  6871  010724  EC0C  F089         	call	_enable_notes
  6872                           
  6873                           ;mdb.c: 83:             break;
  6874  010728  D02F               	goto	l2840
  6875  01072A                     l9236:
  6876  01072A  0ECE               	movlw	low _twohundredrand
  6877  01072C  6E45               	movwf	displ_note@notestring,c
  6878  01072E  0EFF               	movlw	high _twohundredrand
  6879  010730  6E46               	movwf	displ_note@notestring+1,c
  6880  010732  EC58  F090         	call	_displ_note	;wreg free
  6881  010736  6E2D               	movwf	_dspposition,c
  6882                           
  6883                           ;mdb.c: 86:             enable_notes(0x10);
  6884  010738  0E10               	movlw	16
  6885  01073A  EC0C  F089         	call	_enable_notes
  6886                           
  6887                           ;mdb.c: 87:             break;
  6888  01073E  D024               	goto	l2840
  6889  010740                     l9238:
  6890  010740  0E5C               	movlw	low _servmsg
  6891  010742  6E40               	movwf	lcd_string@lcdstring,c
  6892  010744  0EFC               	movlw	high _servmsg
  6893  010746  6E41               	movwf	lcd_string@lcdstring+1,c
  6894  010748  0E00               	movlw	0
  6895  01074A  6E42               	movwf	lcd_string@lcdline,c
  6896  01074C  ECCC  F088         	call	_lcd_string	;wreg free
  6897                           
  6898                           ;mdb.c: 90:             mdbflags.noteset = 0;
  6899  010750  9A29               	bcf	_mdbflags,5,c
  6900  010752  D01A               	goto	l2840
  6901  010754                     l9244:
  6902  010754  5022               	movf	_buttons,w,c	;volatile
  6903  010756  6E4A               	movwf	??_set_notes& (0+255),c
  6904  010758  6A4B               	clrf	(??_set_notes+1)& (0+255),c
  6905                           
  6906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6907                           ; Switch size 1, requested type "simple"
  6908                           ; Number of cases is 1, Range of values is 0 to 0
  6909                           ; switch strategies available:
  6910                           ; Name         Instructions Cycles
  6911                           ; simple_byte            4     3 (average)
  6912                           ;	Chosen strategy is simple_byte
  6913  01075A  504B               	movf	??_set_notes+1,w,c
  6914  01075C  0A00               	xorlw	0	; case 0
  6915  01075E  A4D8               	btfss	status,2,c
  6916  010760  D013               	goto	l2840
  6917                           
  6918                           ; Switch size 1, requested type "simple"
  6919                           ; Number of cases is 6, Range of values is 1 to 128
  6920                           ; switch strategies available:
  6921                           ; Name         Instructions Cycles
  6922                           ; simple_byte           19    10 (average)
  6923                           ;	Chosen strategy is simple_byte
  6924  010762  504A               	movf	??_set_notes,w,c
  6925  010764  0A01               	xorlw	1	; case 1
  6926  010766  B4D8               	btfsc	status,2,c
  6927  010768  D7B4               	goto	l9228
  6928  01076A  0A03               	xorlw	3	; case 2
  6929  01076C  B4D8               	btfsc	status,2,c
  6930  01076E  D7BC               	goto	l9230
  6931  010770  0A06               	xorlw	6	; case 4
  6932  010772  B4D8               	btfsc	status,2,c
  6933  010774  D7C4               	goto	l9232
  6934  010776  0A0C               	xorlw	12	; case 8
  6935  010778  B4D8               	btfsc	status,2,c
  6936  01077A  D7CC               	goto	l9234
  6937  01077C  0A18               	xorlw	24	; case 16
  6938  01077E  B4D8               	btfsc	status,2,c
  6939  010780  D7D4               	goto	l9236
  6940  010782  0A90               	xorlw	144	; case 128
  6941  010784  B4D8               	btfsc	status,2,c
  6942  010786  D7DC               	goto	l9238
  6943  010788                     l2840:
  6944                           
  6945                           ;mdb.c: 93:         ((uint8_t*) &noteen)[0] = noteen_byte;
  6946  010788  C027  F028         	movff	_noteen_byte,_noteen	;volatile
  6947  01078C  F000               	nop		;# 
  6948  01078E                     l2836:
  6949                           
  6950                           ;mdb.c: 62:     while(mdbflags.noteset)
  6951  01078E  AA29               	btfss	_mdbflags,5,c
  6952  010790  0012               	return	
  6953  010792  D799               	goto	l9224
  6954  010794                     __end_of_set_notes:
  6955                           	opt callstack 0
  6956                           
  6957 ;; *************** function _enable_notes *****************
  6958 ;; Defined at:
  6959 ;;		line 98 in file "mdb.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  notenum         1    wreg     unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  notenum         1   18[COMRAM] unsigned char 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;Total ram usage:        3 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; Hardware stack levels required when called:    7
  6980 ;; This function calls:
  6981 ;;		_butindb
  6982 ;;		_displ_nendis
  6983 ;;		_lcd_string
  6984 ;;		_save_notes
  6985 ;; This function is called by:
  6986 ;;		_set_notes
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text40
  6991  011218                     __ptext40:
  6992                           	opt callstack 0
  6993  011218                     _enable_notes:
  6994                           	opt callstack 21
  6995                           
  6996                           ;incstack = 0
  6997                           ;enable_notes@notenum stored from wreg
  6998  011218  6E49               	movwf	enable_notes@notenum,c
  6999                           
  7000                           ;mdb.c: 98: void enable_notes(uint8_t notenum);mdb.c: 99: {;mdb.c: 100:     mdbflags.end
      +                          is = 1;
  7001  01121A  8C29               	bsf	_mdbflags,6,c
  7002                           
  7003                           ;mdb.c: 101:     displ_nendis(notenum);
  7004  01121C  5049               	movf	enable_notes@notenum,w,c
  7005  01121E  EC1F  F08F         	call	_displ_nendis
  7006                           
  7007                           ;mdb.c: 102:     while(mdbflags.endis)
  7008  011222  D034               	goto	l2851
  7009  011224                     l8914:
  7010                           
  7011                           ;mdb.c: 103:     {;mdb.c: 104:         buttons = butindb();
  7012  011224  ECCD  F08D         	call	_butindb	;wreg free
  7013  011228  6E22               	movwf	_buttons,c	;volatile
  7014                           
  7015                           ;mdb.c: 105:         switch(buttons)
  7016  01122A  D01F               	goto	l8934
  7017  01122C                     l8916:
  7018  01122C  5027               	movf	_noteen_byte,w,c	;volatile
  7019  01122E  1049               	iorwf	enable_notes@notenum,w,c
  7020  011230  6E27               	movwf	_noteen_byte,c	;volatile
  7021                           
  7022                           ;mdb.c: 108:             save_notes();
  7023  011232  EC13  F091         	call	_save_notes	;wreg free
  7024                           
  7025                           ;mdb.c: 109:             displ_nendis(notenum);
  7026  011236  5049               	movf	enable_notes@notenum,w,c
  7027  011238  EC1F  F08F         	call	_displ_nendis
  7028                           
  7029                           ;mdb.c: 110:             break;
  7030  01123C  D027               	goto	l2851
  7031  01123E                     l8922:
  7032  01123E  5049               	movf	enable_notes@notenum,w,c
  7033  011240  0AFF               	xorlw	255
  7034  011242  1427               	andwf	_noteen_byte,w,c	;volatile
  7035  011244  6E27               	movwf	_noteen_byte,c	;volatile
  7036                           
  7037                           ;mdb.c: 112:             save_notes();
  7038  011246  EC13  F091         	call	_save_notes	;wreg free
  7039                           
  7040                           ;mdb.c: 113:             displ_nendis(notenum);
  7041  01124A  5049               	movf	enable_notes@notenum,w,c
  7042  01124C  EC1F  F08F         	call	_displ_nendis
  7043                           
  7044                           ;mdb.c: 114:             break;
  7045  011250  D01D               	goto	l2851
  7046  011252                     l2857:
  7047  011252  9C29               	bcf	_mdbflags,6,c
  7048  011254  0EAC               	movlw	low _setnotes
  7049  011256  6E40               	movwf	lcd_string@lcdstring,c
  7050  011258  0EFC               	movlw	high _setnotes
  7051  01125A  6E41               	movwf	lcd_string@lcdstring+1,c
  7052  01125C  0E00               	movlw	0
  7053  01125E  6E42               	movwf	lcd_string@lcdline,c
  7054  011260  ECCC  F088         	call	_lcd_string	;wreg free
  7055                           
  7056                           ;mdb.c: 117:             buttons = 0;
  7057  011264  0E00               	movlw	0
  7058  011266  6E22               	movwf	_buttons,c	;volatile
  7059  011268  D011               	goto	l2851
  7060  01126A                     l8934:
  7061  01126A  5022               	movf	_buttons,w,c	;volatile
  7062  01126C  6E47               	movwf	??_enable_notes& (0+255),c
  7063  01126E  6A48               	clrf	(??_enable_notes+1)& (0+255),c
  7064                           
  7065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7066                           ; Switch size 1, requested type "simple"
  7067                           ; Number of cases is 1, Range of values is 0 to 0
  7068                           ; switch strategies available:
  7069                           ; Name         Instructions Cycles
  7070                           ; simple_byte            4     3 (average)
  7071                           ;	Chosen strategy is simple_byte
  7072  011270  5048               	movf	??_enable_notes+1,w,c
  7073  011272  0A00               	xorlw	0	; case 0
  7074  011274  A4D8               	btfss	status,2,c
  7075  011276  D00A               	goto	l2851
  7076                           
  7077                           ; Switch size 1, requested type "simple"
  7078                           ; Number of cases is 3, Range of values is 1 to 128
  7079                           ; switch strategies available:
  7080                           ; Name         Instructions Cycles
  7081                           ; simple_byte           10     6 (average)
  7082                           ;	Chosen strategy is simple_byte
  7083  011278  5047               	movf	??_enable_notes,w,c
  7084  01127A  0A01               	xorlw	1	; case 1
  7085  01127C  B4D8               	btfsc	status,2,c
  7086  01127E  D7D6               	goto	l8916
  7087  011280  0A03               	xorlw	3	; case 2
  7088  011282  B4D8               	btfsc	status,2,c
  7089  011284  D7DC               	goto	l8922
  7090  011286  0A82               	xorlw	130	; case 128
  7091  011288  B4D8               	btfsc	status,2,c
  7092  01128A  D7E3               	goto	l2857
  7093  01128C                     l2851:
  7094                           
  7095                           ;mdb.c: 102:     while(mdbflags.endis)
  7096  01128C  AC29               	btfss	_mdbflags,6,c
  7097  01128E  0012               	return	
  7098  011290  D7C9               	goto	l8914
  7099  011292                     __end_of_enable_notes:
  7100                           	opt callstack 0
  7101                           
  7102 ;; *************** function _save_notes *****************
  7103 ;; Defined at:
  7104 ;;		line 129 in file "mdb.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;Total ram usage:        0 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    1
  7125 ;; This function calls:
  7126 ;;		_DATAEE_WriteByte
  7127 ;; This function is called by:
  7128 ;;		_enable_notes
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text41
  7133  012226                     __ptext41:
  7134                           	opt callstack 0
  7135  012226                     _save_notes:
  7136                           	opt callstack 26
  7137                           
  7138                           ;incstack = 0
  7139  012226  0E00               	movlw	0
  7140  012228  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  7141  01222A  0E18               	movlw	24
  7142  01222C  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  7143  01222E  C027  F039         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  7144  012232  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  7145  012236  0012               	return		;funcret
  7146  012238                     __end_of_save_notes:
  7147                           	opt callstack 0
  7148                           
  7149 ;; *************** function _displ_nendis *****************
  7150 ;; Defined at:
  7151 ;;		line 115 in file "lcd.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  note2disp       1    wreg     unsigned char 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  note2disp       1   14[COMRAM] unsigned char 
  7156 ;;  x               1   15[COMRAM] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;Total ram usage:        2 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    6
  7173 ;; This function calls:
  7174 ;;		_lcd_string
  7175 ;; This function is called by:
  7176 ;;		_enable_notes
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text42
  7181  011E3E                     __ptext42:
  7182                           	opt callstack 0
  7183  011E3E                     _displ_nendis:
  7184                           	opt callstack 21
  7185                           
  7186                           ;incstack = 0
  7187                           ;displ_nendis@note2disp stored from wreg
  7188  011E3E  6E45               	movwf	displ_nendis@note2disp,c
  7189                           
  7190                           ;lcd.c: 115: void displ_nendis(uint8_t note2disp);lcd.c: 116: {;lcd.c: 117:     uint8_t 
      +                          x = note2disp & noteen_byte;
  7191  011E40  5045               	movf	displ_nendis@note2disp,w,c
  7192  011E42  1427               	andwf	_noteen_byte,w,c	;volatile
  7193  011E44  6E46               	movwf	displ_nendis@x,c
  7194                           
  7195                           ;lcd.c: 118:     if(x != 0x00)
  7196  011E46  5046               	movf	displ_nendis@x,w,c
  7197  011E48  B4D8               	btfsc	status,2,c
  7198  011E4A  D009               	goto	l8402
  7199                           
  7200                           ;lcd.c: 119:     {;lcd.c: 120:         lcd_string(enabled, dspposition);
  7201  011E4C  0EAA               	movlw	low _enabled
  7202  011E4E  6E40               	movwf	lcd_string@lcdstring,c
  7203  011E50  0EFF               	movlw	high _enabled
  7204  011E52  6E41               	movwf	lcd_string@lcdstring+1,c
  7205  011E54  C02D  F042         	movff	_dspposition,lcd_string@lcdline
  7206  011E58  ECCC  F088         	call	_lcd_string	;wreg free
  7207                           
  7208                           ;lcd.c: 121:     }
  7209  011E5C  0012               	return	
  7210  011E5E                     l8402:
  7211                           
  7212                           ;lcd.c: 123:     {;lcd.c: 124:         lcd_string(disabled, dspposition);
  7213  011E5E  0EA0               	movlw	low _disabled
  7214  011E60  6E40               	movwf	lcd_string@lcdstring,c
  7215  011E62  0EFF               	movlw	high _disabled
  7216  011E64  6E41               	movwf	lcd_string@lcdstring+1,c
  7217  011E66  C02D  F042         	movff	_dspposition,lcd_string@lcdline
  7218  011E6A  ECCC  F088         	call	_lcd_string	;wreg free
  7219  011E6E  0012               	return		;funcret
  7220  011E70                     __end_of_displ_nendis:
  7221                           	opt callstack 0
  7222                           
  7223 ;; *************** function _displ_note *****************
  7224 ;; Defined at:
  7225 ;;		line 108 in file "lcd.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  notestring      2   14[COMRAM] PTR unsigned char 
  7228 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  7229 ;;		 -> tenrand(9), 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      unsigned char 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;Total ram usage:        2 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    6
  7248 ;; This function calls:
  7249 ;;		_lcd_string
  7250 ;;		_lcd_write
  7251 ;; This function is called by:
  7252 ;;		_set_notes
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text43
  7257  0120B0                     __ptext43:
  7258                           	opt callstack 0
  7259  0120B0                     _displ_note:
  7260                           	opt callstack 22
  7261                           
  7262                           ;incstack = 0
  7263  0120B0  0E01               	movlw	1
  7264  0120B2  ECDC  F08F         	call	_lcd_write
  7265  0120B6  C045  F040         	movff	displ_note@notestring,lcd_string@lcdstring
  7266  0120BA  C046  F041         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  7267  0120BE  0E40               	movlw	64
  7268  0120C0  6E42               	movwf	lcd_string@lcdline,c
  7269  0120C2  ECCC  F088         	call	_lcd_string	;wreg free
  7270                           
  7271                           ;lcd.c: 112:     return bflag+2;
  7272  0120C6  5031               	movf	_bflag,w,c
  7273  0120C8  0F02               	addlw	2
  7274  0120CA  0012               	return		;funcret
  7275  0120CC                     __end_of_displ_note:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _price_set *****************
  7279 ;; Defined at:
  7280 ;;		line 359 in file "vend.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    8
  7301 ;; This function calls:
  7302 ;;		_Read_Service
  7303 ;;		_butindb
  7304 ;;		_lcd_string
  7305 ;;		_set_price
  7306 ;; This function is called by:
  7307 ;;		_enter_service
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text44
  7312  011754                     __ptext44:
  7313                           	opt callstack 0
  7314  011754                     _price_set:
  7315                           	opt callstack 21
  7316                           
  7317                           ;vend.c: 361:     venflags.priceset = 1;
  7318                           
  7319                           ;incstack = 0
  7320  011754  8014               	bsf	_venflags+1,0,c
  7321  011756  0E2D               	movlw	low _pricesetmsg
  7322  011758  6E40               	movwf	lcd_string@lcdstring,c
  7323  01175A  0EFF               	movlw	high _pricesetmsg
  7324  01175C  6E41               	movwf	lcd_string@lcdstring+1,c
  7325  01175E  0E00               	movlw	0
  7326  011760  6E42               	movwf	lcd_string@lcdline,c
  7327  011762  ECCC  F088         	call	_lcd_string	;wreg free
  7328  011766  0E34               	movlw	low _pricesetm2
  7329  011768  6E40               	movwf	lcd_string@lcdstring,c
  7330  01176A  0EFD               	movlw	high _pricesetm2
  7331  01176C  6E41               	movwf	lcd_string@lcdstring+1,c
  7332  01176E  0E40               	movlw	64
  7333  011770  6E42               	movwf	lcd_string@lcdline,c
  7334  011772  ECCC  F088         	call	_lcd_string	;wreg free
  7335                           
  7336                           ;vend.c: 364:     while(venflags.priceset)
  7337  011776  D00E               	goto	l2194
  7338  011778                     l9260:
  7339                           
  7340                           ;vend.c: 365:     {;vend.c: 366:         buttons = butindb();
  7341  011778  ECCD  F08D         	call	_butindb	;wreg free
  7342  01177C  6E22               	movwf	_buttons,c	;volatile
  7343                           
  7344                           ;vend.c: 367:         if(buttons != 0x00)
  7345  01177E  5022               	movf	_buttons,w,c	;volatile
  7346  011780  B4D8               	btfsc	status,2,c
  7347  011782  D003               	goto	l9266
  7348                           
  7349                           ;vend.c: 368:         {;vend.c: 369:             set_price(buttons);
  7350  011784  5022               	movf	_buttons,w,c	;volatile
  7351  011786  EC9C  F085         	call	_set_price
  7352  01178A                     l9266:
  7353                           
  7354                           ;vend.c: 371:         if(Read_Service() == 0x00)
  7355  01178A  EC90  F090         	call	_Read_Service	;wreg free
  7356  01178E  0900               	iorlw	0
  7357  011790  B4D8               	btfsc	status,2,c
  7358                           
  7359                           ;vend.c: 372:         {;vend.c: 373:             venflags.priceset = 0;
  7360  011792  9014               	bcf	_venflags+1,0,c
  7361  011794                     l2194:
  7362                           
  7363                           ;vend.c: 364:     while(venflags.priceset)
  7364  011794  B014               	btfsc	_venflags+1,0,c
  7365  011796  D7F0               	goto	l9260
  7366  011798  0E5C               	movlw	low _servmsg
  7367  01179A  6E40               	movwf	lcd_string@lcdstring,c
  7368  01179C  0EFC               	movlw	high _servmsg
  7369  01179E  6E41               	movwf	lcd_string@lcdstring+1,c
  7370  0117A0  0E00               	movlw	0
  7371  0117A2  6E42               	movwf	lcd_string@lcdline,c
  7372  0117A4  ECCC  F088         	call	_lcd_string	;wreg free
  7373  0117A8  0012               	return		;funcret
  7374  0117AA                     __end_of_price_set:
  7375                           	opt callstack 0
  7376                           
  7377 ;; *************** function _set_price *****************
  7378 ;; Defined at:
  7379 ;;		line 392 in file "vend.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  buttons         1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  buttons         1   28[COMRAM] unsigned char 
  7384 ;;  channel         1   29[COMRAM] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;Total ram usage:        4 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    7
  7401 ;; This function calls:
  7402 ;;		_DATAEE_ReadByte
  7403 ;;		_DATAEE_WriteByte
  7404 ;;		_butindb
  7405 ;;		_displ_price
  7406 ;;		_get_channel
  7407 ;;		_lcd_string
  7408 ;; This function is called by:
  7409 ;;		_price_set
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text45
  7414  010B38                     __ptext45:
  7415                           	opt callstack 0
  7416  010B38                     _set_price:
  7417                           	opt callstack 21
  7418                           
  7419                           ;incstack = 0
  7420                           ;set_price@buttons stored from wreg
  7421  010B38  6E53               	movwf	set_price@buttons,c
  7422                           
  7423                           ;vend.c: 392: void set_price(uint8_t buttons);vend.c: 393: {;vend.c: 394:     venflags.s
      +                          etprice = 1;
  7424  010B3A  8214               	bsf	_venflags+1,1,c
  7425                           
  7426                           ;vend.c: 395:     uint8_t channel = get_channel(buttons);
  7427  010B3C  5053               	movf	set_price@buttons,w,c
  7428  010B3E  EC66  F090         	call	_get_channel
  7429  010B42  6E54               	movwf	set_price@channel,c
  7430  010B44  0E0F               	movlw	15
  7431  010B46  2454               	addwf	set_price@channel,w,c
  7432  010B48  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  7433  010B4A  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  7434  010B4C  0E00               	movlw	0
  7435  010B4E  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  7436  010B50  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  7437  010B54  6E21               	movwf	_vendprice,c	;volatile
  7438                           
  7439                           ;vend.c: 398:     displ_price(vendprice);
  7440  010B56  5021               	movf	_vendprice,w,c	;volatile
  7441  010B58  EC18  F090         	call	_displ_price
  7442                           
  7443                           ;vend.c: 399:     while(venflags.setprice)
  7444  010B5C  D045               	goto	l2208
  7445  010B5E                     l8778:
  7446                           
  7447                           ;vend.c: 400:     {;vend.c: 401:         buttons = butindb();
  7448  010B5E  ECCD  F08D         	call	_butindb	;wreg free
  7449  010B62  6E53               	movwf	set_price@buttons,c
  7450                           
  7451                           ;vend.c: 403:         switch(buttons)
  7452  010B64  D030               	goto	l8796
  7453  010B66                     l8780:
  7454  010B66  2A21               	incf	_vendprice,f,c	;volatile
  7455  010B68  0E0F               	movlw	15
  7456  010B6A  2454               	addwf	set_price@channel,w,c
  7457  010B6C  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  7458  010B6E  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
  7459  010B70  0E00               	movlw	0
  7460  010B72  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
  7461  010B74  C021  F039         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  7462  010B78  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  7463                           
  7464                           ;vend.c: 407:             displ_price(vendprice);
  7465  010B7C  5021               	movf	_vendprice,w,c	;volatile
  7466  010B7E  EC18  F090         	call	_displ_price
  7467                           
  7468                           ;vend.c: 408:             break;
  7469  010B82  D032               	goto	l2208
  7470  010B84                     l8786:
  7471  010B84  0621               	decf	_vendprice,f,c	;volatile
  7472  010B86  0E0F               	movlw	15
  7473  010B88  2454               	addwf	set_price@channel,w,c
  7474  010B8A  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  7475  010B8C  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
  7476  010B8E  0E00               	movlw	0
  7477  010B90  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
  7478  010B92  C021  F039         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  7479  010B96  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  7480                           
  7481                           ;vend.c: 411:             displ_price(vendprice);
  7482  010B9A  5021               	movf	_vendprice,w,c	;volatile
  7483  010B9C  EC18  F090         	call	_displ_price
  7484                           
  7485                           ;vend.c: 412:             break;
  7486  010BA0  D023               	goto	l2208
  7487  010BA2                     l2214:
  7488  010BA2  9214               	bcf	_venflags+1,1,c
  7489  010BA4  0E2D               	movlw	low _pricesetmsg
  7490  010BA6  6E40               	movwf	lcd_string@lcdstring,c
  7491  010BA8  0EFF               	movlw	high _pricesetmsg
  7492  010BAA  6E41               	movwf	lcd_string@lcdstring+1,c
  7493  010BAC  0E00               	movlw	0
  7494  010BAE  6E42               	movwf	lcd_string@lcdline,c
  7495  010BB0  ECCC  F088         	call	_lcd_string	;wreg free
  7496  010BB4  0E34               	movlw	low _pricesetm2
  7497  010BB6  6E40               	movwf	lcd_string@lcdstring,c
  7498  010BB8  0EFD               	movlw	high _pricesetm2
  7499  010BBA  6E41               	movwf	lcd_string@lcdstring+1,c
  7500  010BBC  0E40               	movlw	64
  7501  010BBE  6E42               	movwf	lcd_string@lcdline,c
  7502  010BC0  ECCC  F088         	call	_lcd_string	;wreg free
  7503                           
  7504                           ;vend.c: 417:             break;
  7505  010BC4  D011               	goto	l2208
  7506  010BC6                     l8796:
  7507  010BC6  5053               	movf	set_price@buttons,w,c
  7508  010BC8  6E51               	movwf	??_set_price& (0+255),c
  7509  010BCA  6A52               	clrf	(??_set_price+1)& (0+255),c
  7510                           
  7511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7512                           ; Switch size 1, requested type "simple"
  7513                           ; Number of cases is 1, Range of values is 0 to 0
  7514                           ; switch strategies available:
  7515                           ; Name         Instructions Cycles
  7516                           ; simple_byte            4     3 (average)
  7517                           ;	Chosen strategy is simple_byte
  7518  010BCC  5052               	movf	??_set_price+1,w,c
  7519  010BCE  0A00               	xorlw	0	; case 0
  7520  010BD0  A4D8               	btfss	status,2,c
  7521  010BD2  D00A               	goto	l2208
  7522                           
  7523                           ; Switch size 1, requested type "simple"
  7524                           ; Number of cases is 3, Range of values is 1 to 128
  7525                           ; switch strategies available:
  7526                           ; Name         Instructions Cycles
  7527                           ; simple_byte           10     6 (average)
  7528                           ;	Chosen strategy is simple_byte
  7529  010BD4  5051               	movf	??_set_price,w,c
  7530  010BD6  0A01               	xorlw	1	; case 1
  7531  010BD8  B4D8               	btfsc	status,2,c
  7532  010BDA  D7C5               	goto	l8780
  7533  010BDC  0A03               	xorlw	3	; case 2
  7534  010BDE  B4D8               	btfsc	status,2,c
  7535  010BE0  D7D1               	goto	l8786
  7536  010BE2  0A82               	xorlw	130	; case 128
  7537  010BE4  B4D8               	btfsc	status,2,c
  7538  010BE6  D7DD               	goto	l2214
  7539  010BE8                     l2208:
  7540                           
  7541                           ;vend.c: 399:     while(venflags.setprice)
  7542  010BE8  A214               	btfss	_venflags+1,1,c
  7543  010BEA  0012               	return	
  7544  010BEC  D7B8               	goto	l8778
  7545  010BEE                     __end_of_set_price:
  7546                           	opt callstack 0
  7547                           
  7548 ;; *************** function _displ_price *****************
  7549 ;; Defined at:
  7550 ;;		line 235 in file "lcd.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  vendprice       1    wreg     unsigned char 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  vendprice       1   25[COMRAM] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;Total ram usage:        1 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    6
  7571 ;; This function calls:
  7572 ;;		_displ_hex
  7573 ;;		_lcd_dispadd
  7574 ;;		_lcd_write
  7575 ;;		_lcd_writeC
  7576 ;; This function is called by:
  7577 ;;		_main
  7578 ;;		_set_price
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text46
  7583  012030                     __ptext46:
  7584                           	opt callstack 0
  7585  012030                     _displ_price:
  7586                           	opt callstack 21
  7587                           
  7588                           ;incstack = 0
  7589                           ;displ_price@vendprice stored from wreg
  7590  012030  6E50               	movwf	displ_price@vendprice,c
  7591  012032  0E01               	movlw	1
  7592  012034  ECDC  F08F         	call	_lcd_write
  7593  012038  0E44               	movlw	68
  7594  01203A  ECA8  F090         	call	_lcd_dispadd
  7595                           
  7596                           ;lcd.c: 239:     lcd_writeC((uint8_t)'R');
  7597  01203E  0E52               	movlw	82
  7598  012040  EC9E  F08C         	call	_lcd_writeC
  7599                           
  7600                           ;lcd.c: 240:     displ_hex(vendprice);
  7601  012044  5050               	movf	displ_price@vendprice,w,c
  7602  012046  6E41               	movwf	displ_hex@hexnum,c
  7603  012048  6A42               	clrf	displ_hex@hexnum+1,c
  7604  01204A  6A43               	clrf	displ_hex@hexnum+2,c
  7605  01204C  EC4B  F086         	call	_displ_hex	;wreg free
  7606  012050  0012               	return		;funcret
  7607  012052                     __end_of_displ_price:
  7608                           	opt callstack 0
  7609                           
  7610 ;; *************** function _mdb_unlock *****************
  7611 ;; Defined at:
  7612 ;;		line 375 in file "mdb.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;Total ram usage:        1 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    1
  7633 ;; This function calls:
  7634 ;;		_CMP1_Initialize
  7635 ;;		_DAC1_Initialize
  7636 ;;		_TMR1_Initialize
  7637 ;;		_TMR3_Initialize
  7638 ;;		_TMR5_Initialize
  7639 ;; This function is called by:
  7640 ;;		_enter_service
  7641 ;;		_vend_nosense
  7642 ;;		_vend_dispense
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text47
  7647  010794                     __ptext47:
  7648                           	opt callstack 0
  7649  010794                     _mdb_unlock:
  7650                           	opt callstack 26
  7651                           
  7652                           ;mdb.c: 377:     _delay((unsigned long)((50)*(12000000/4000.0)));
  7653                           
  7654                           ;incstack = 0
  7655  010794  0EC3               	movlw	195
  7656  010796  6E39               	movwf	??_mdb_unlock& (0+255),c
  7657  010798  0ECD               	movlw	205
  7658  01079A                     u3747:
  7659  01079A  2EE8               	decfsz	wreg,f,c
  7660  01079C  D7FE               	bra	u3747
  7661  01079E  2E39               	decfsz	??_mdb_unlock& (0+255),f,c
  7662  0107A0  D7FC               	bra	u3747
  7663  0107A2  F000               	nop	
  7664                           
  7665                           ;mdb.c: 378:     LATE = 0x00;
  7666  0107A4  0E00               	movlw	0
  7667  0107A6  6E87               	movwf	3975,c	;volatile
  7668                           
  7669                           ;mdb.c: 379:     LATD = 0x00;
  7670  0107A8  0E00               	movlw	0
  7671  0107AA  6E86               	movwf	3974,c	;volatile
  7672                           
  7673                           ;mdb.c: 380:     LATA = 0xC0;
  7674  0107AC  0EC0               	movlw	192
  7675  0107AE  6E83               	movwf	3971,c	;volatile
  7676                           
  7677                           ;mdb.c: 381:     LATB = 0x00;
  7678  0107B0  0E00               	movlw	0
  7679  0107B2  6E84               	movwf	3972,c	;volatile
  7680                           
  7681                           ;mdb.c: 382:     LATC = 0x01;
  7682  0107B4  0E01               	movlw	1
  7683  0107B6  6E85               	movwf	3973,c	;volatile
  7684                           
  7685                           ;mdb.c: 387:     TRISE = 0x00;
  7686  0107B8  0E00               	movlw	0
  7687  0107BA  6E8C               	movwf	3980,c	;volatile
  7688                           
  7689                           ;mdb.c: 388:     TRISA = 0x1F;
  7690  0107BC  0E1F               	movlw	31
  7691  0107BE  6E88               	movwf	3976,c	;volatile
  7692                           
  7693                           ;mdb.c: 389:     TRISB = 0xD0;
  7694  0107C0  0ED0               	movlw	208
  7695  0107C2  6E89               	movwf	3977,c	;volatile
  7696                           
  7697                           ;mdb.c: 390:     TRISC = 0x80;
  7698  0107C4  0E80               	movlw	128
  7699  0107C6  6E8A               	movwf	3978,c	;volatile
  7700                           
  7701                           ;mdb.c: 391:     TRISD = 0x00;
  7702  0107C8  0E00               	movlw	0
  7703  0107CA  6E8B               	movwf	3979,c	;volatile
  7704                           
  7705                           ;mdb.c: 396:     ANSELC = 0x00;
  7706  0107CC  0E00               	movlw	0
  7707  0107CE  010F               	movlb	15	; () banked
  7708  0107D0  6F21               	movwf	33,b	;volatile
  7709                           
  7710                           ; BSR set to: 15
  7711                           ;mdb.c: 397:     ANSELB = 0xC0;
  7712  0107D2  0EC0               	movlw	192
  7713  0107D4  6F19               	movwf	25,b	;volatile
  7714                           
  7715                           ; BSR set to: 15
  7716                           ;mdb.c: 398:     ANSELD = 0x00;
  7717  0107D6  0E00               	movlw	0
  7718  0107D8  6F26               	movwf	38,b	;volatile
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;mdb.c: 399:     ANSELE = 0x00;
  7722  0107DA  0E00               	movlw	0
  7723  0107DC  6F2E               	movwf	46,b	;volatile
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;mdb.c: 400:     ANSELA = 0x01;
  7727  0107DE  0E01               	movlw	1
  7728  0107E0  6F11               	movwf	17,b	;volatile
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;mdb.c: 405:     WPUD = 0x00;
  7732  0107E2  0E00               	movlw	0
  7733  0107E4  6F25               	movwf	37,b	;volatile
  7734                           
  7735                           ; BSR set to: 15
  7736                           ;mdb.c: 406:     WPUE = 0x00;
  7737  0107E6  0E00               	movlw	0
  7738  0107E8  6F2D               	movwf	45,b	;volatile
  7739                           
  7740                           ; BSR set to: 15
  7741                           ;mdb.c: 407:     WPUB = 0x00;
  7742  0107EA  0E00               	movlw	0
  7743  0107EC  6F18               	movwf	24,b	;volatile
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;mdb.c: 408:     WPUA = 0x00;
  7747  0107EE  0E00               	movlw	0
  7748  0107F0  6F10               	movwf	16,b	;volatile
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;mdb.c: 409:     WPUC = 0x00;
  7752  0107F2  0E00               	movlw	0
  7753  0107F4  6F20               	movwf	32,b	;volatile
  7754                           
  7755                           ; BSR set to: 15
  7756                           ;mdb.c: 414:     ODCONE = 0x00;
  7757  0107F6  0E00               	movlw	0
  7758  0107F8  6F2C               	movwf	44,b	;volatile
  7759                           
  7760                           ; BSR set to: 15
  7761                           ;mdb.c: 415:     ODCONA = 0x00;
  7762  0107FA  0E00               	movlw	0
  7763  0107FC  6F0F               	movwf	15,b	;volatile
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;mdb.c: 416:     ODCONB = 0x00;
  7767  0107FE  0E00               	movlw	0
  7768  010800  6F17               	movwf	23,b	;volatile
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;mdb.c: 417:     ODCONC = 0x00;
  7772  010802  0E00               	movlw	0
  7773  010804  6F1F               	movwf	31,b	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;mdb.c: 418:     ODCOND = 0x00;
  7777  010806  0E00               	movlw	0
  7778  010808  6F24               	movwf	36,b	;volatile
  7779                           
  7780                           ; BSR set to: 15
  7781                           ;mdb.c: 419:     LATC = 0x01;
  7782  01080A  0E01               	movlw	1
  7783  01080C  6E85               	movwf	3973,c	;volatile
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;mdb.c: 420:     TRISC = 0x80;
  7787  01080E  0E80               	movlw	128
  7788  010810  6E8A               	movwf	3978,c	;volatile
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;mdb.c: 421:     ANSELC = 0x00;
  7792  010812  0E00               	movlw	0
  7793  010814  6F21               	movwf	33,b	;volatile
  7794                           
  7795                           ; BSR set to: 15
  7796                           ;mdb.c: 422:     WPUC = 0x00;
  7797  010816  0E00               	movlw	0
  7798  010818  6F20               	movwf	32,b	;volatile
  7799                           
  7800                           ; BSR set to: 15
  7801                           ;mdb.c: 423:     ODCONC = 0x00;
  7802  01081A  0E00               	movlw	0
  7803  01081C  6F1F               	movwf	31,b	;volatile
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;mdb.c: 424:     PPSLOCK = 0x55;
  7807  01081E  0E55               	movlw	85
  7808  010820  010E               	movlb	14	; () banked
  7809  010822  6FA0               	movwf	160,b	;volsfr
  7810                           
  7811                           ; BSR set to: 14
  7812                           ;mdb.c: 425:     PPSLOCK = 0xAA;
  7813  010824  0EAA               	movlw	170
  7814  010826  6FA0               	movwf	160,b	;volsfr
  7815                           
  7816                           ; BSR set to: 14
  7817                           ;mdb.c: 426:     PPSLOCKbits.PPSLOCKED = 0x00;
  7818  010828  91A0               	bcf	160,0,b	;volsfr
  7819                           
  7820                           ; BSR set to: 14
  7821                           ;mdb.c: 428:     RX1PPSbits.RXPPS = 0x0;
  7822  01082A  0EE0               	movlw	-32
  7823  01082C  17B5               	andwf	181,f,b	;volatile
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;mdb.c: 429:     RC6PPS = 0x0;
  7827  01082E  0E00               	movlw	0
  7828  010830  6FFD               	movwf	253,b	;volatile
  7829                           
  7830                           ; BSR set to: 14
  7831                           ;mdb.c: 430:     RB5PPS = 0x0;
  7832  010832  0E00               	movlw	0
  7833  010834  6FF4               	movwf	244,b	;volatile
  7834                           
  7835                           ; BSR set to: 14
  7836                           ;mdb.c: 431:     RX2PPSbits.RXPPS = 0x0;
  7837  010836  0EE0               	movlw	-32
  7838  010838  178D               	andwf	141,f,b	;volatile
  7839                           
  7840                           ; BSR set to: 14
  7841                           ;mdb.c: 432:     CMP1_Initialize();
  7842  01083A  ECF7  F090         	call	_CMP1_Initialize	;wreg free
  7843                           
  7844                           ;mdb.c: 433:     TMR3_Initialize();
  7845  01083E  ECCF  F08E         	call	_TMR3_Initialize	;wreg free
  7846                           
  7847                           ;mdb.c: 434:     DAC1_Initialize();
  7848  010842  EC41  F091         	call	_DAC1_Initialize	;wreg free
  7849                           
  7850                           ;mdb.c: 435:     TMR5_Initialize();
  7851  010846  ECB4  F08E         	call	_TMR5_Initialize	;wreg free
  7852                           
  7853                           ;mdb.c: 436:     TMR1_Initialize();
  7854  01084A  ECEA  F08E         	call	_TMR1_Initialize	;wreg free
  7855  01084E  0012               	return		;funcret
  7856  010850                     __end_of_mdb_unlock:
  7857                           	opt callstack 0
  7858                           
  7859 ;; *************** function _hopper_test *****************
  7860 ;; Defined at:
  7861 ;;		line 10 in file "hopper.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;		None
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  1    wreg      void 
  7868 ;; Registers used:
  7869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;Total ram usage:        0 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; Hardware stack levels required when called:    4
  7882 ;; This function calls:
  7883 ;;		_hopper_pay
  7884 ;; This function is called by:
  7885 ;;		_enter_service
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text48
  7890  0121DA                     __ptext48:
  7891                           	opt callstack 0
  7892  0121DA                     _hopper_test:
  7893                           	opt callstack 25
  7894                           
  7895                           ;hopper.c: 12:      if(!hopper_pay(0x05))
  7896                           
  7897                           ;incstack = 0
  7898  0121DA  0E05               	movlw	5
  7899  0121DC  ECF6  F08A         	call	_hopper_pay
  7900  0121E0  0900               	iorlw	0
  7901  0121E2  A4D8               	btfss	status,2,c
  7902  0121E4  D002               	goto	l3862
  7903  0121E6  F000               	nop		;# 
  7904                           
  7905                           ;hopper.c: 15:     }
  7906  0121E8  0012               	return	
  7907  0121EA                     l3862:
  7908  0121EA  F000               	nop		;# 
  7909  0121EC  0012               	return		;funcret
  7910  0121EE                     __end_of_hopper_test:
  7911                           	opt callstack 0
  7912                           
  7913 ;; *************** function _hopper_pay *****************
  7914 ;; Defined at:
  7915 ;;		line 39 in file "hopper.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  change          1    wreg     unsigned char 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  change          1   12[COMRAM] unsigned char 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      unsigned char 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;Total ram usage:        2 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:    3
  7936 ;; This function calls:
  7937 ;;		_DATAEE_WriteByte
  7938 ;;		_Update_coinsout
  7939 ;;		_cctalk_off
  7940 ;;		_cctalk_on
  7941 ;;		_pay_coin
  7942 ;; This function is called by:
  7943 ;;		_hopper_test
  7944 ;;		_give_change
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text49
  7949  0115EC                     __ptext49:
  7950                           	opt callstack 0
  7951  0115EC                     _hopper_pay:
  7952                           	opt callstack 25
  7953                           
  7954                           ;incstack = 0
  7955                           ;hopper_pay@change stored from wreg
  7956  0115EC  6E43               	movwf	hopper_pay@change,c
  7957                           
  7958                           ;hopper.c: 39: uint8_t hopper_pay(uint8_t change);hopper.c: 40: {;hopper.c: 41:     ccta
      +                          lk_on();
  7959  0115EE  EC69  F091         	call	_cctalk_on	;wreg free
  7960                           
  7961                           ;hopper.c: 42:     outcoins = 0x00;
  7962  0115F2  0E00               	movlw	0
  7963  0115F4  6E25               	movwf	_outcoins,c
  7964                           
  7965                           ;hopper.c: 43:     while(change > 0)
  7966  0115F6  D01F               	goto	l8962
  7967  0115F8                     l8944:
  7968                           
  7969                           ;hopper.c: 44:     {;hopper.c: 45:         venflags.nochange = pay_coin();
  7970  0115F8  EC8B  F088         	call	_pay_coin	;wreg free
  7971  0115FC  6E42               	movwf	??_hopper_pay& (0+255),c
  7972  0115FE  4642               	rlncf	??_hopper_pay,f,c
  7973  011600  4642               	rlncf	??_hopper_pay,f,c
  7974  011602  4642               	rlncf	??_hopper_pay,f,c
  7975  011604  5013               	movf	_venflags,w,c
  7976  011606  1842               	xorwf	??_hopper_pay,w,c
  7977  011608  0BF7               	andlw	-9
  7978  01160A  1842               	xorwf	??_hopper_pay,w,c
  7979  01160C  6E13               	movwf	_venflags,c
  7980                           
  7981                           ;hopper.c: 46:         if(venflags.nochange)
  7982  01160E  A613               	btfss	_venflags,3,c
  7983  011610  D010               	goto	l8960
  7984                           
  7985                           ;hopper.c: 47:         {;hopper.c: 48:             cctalk_off();
  7986  011612  EC6B  F091         	call	_cctalk_off	;wreg free
  7987                           
  7988                           ;hopper.c: 49:             Update_coinsout(outcoins);
  7989  011616  5025               	movf	_outcoins,w,c
  7990  011618  EC8D  F08D         	call	_Update_coinsout
  7991                           
  7992                           ;hopper.c: 50:             venflags.nochange = 1;
  7993  01161C  8613               	bsf	_venflags,3,c
  7994  01161E  0E00               	movlw	0
  7995  011620  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  7996  011622  0E2F               	movlw	47
  7997  011624  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  7998  011626  0E01               	movlw	1
  7999  011628  6E39               	movwf	DATAEE_WriteByte@bData,c
  8000  01162A  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  8001  01162E                     l8956:
  8002                           
  8003                           ;hopper.c: 52:             return change;
  8004  01162E  5043               	movf	hopper_pay@change,w,c
  8005  011630  0012               	return	
  8006  011632                     l8960:
  8007                           
  8008                           ;hopper.c: 54:         outcoins++;
  8009  011632  2A25               	incf	_outcoins,f,c
  8010                           
  8011                           ;hopper.c: 55:         change--;
  8012  011634  0643               	decf	hopper_pay@change,f,c
  8013  011636                     l8962:
  8014                           
  8015                           ;hopper.c: 43:     while(change > 0)
  8016  011636  5043               	movf	hopper_pay@change,w,c
  8017  011638  A4D8               	btfss	status,2,c
  8018  01163A  D7DE               	goto	l8944
  8019                           
  8020                           ;hopper.c: 57:     cctalk_off();
  8021  01163C  EC6B  F091         	call	_cctalk_off	;wreg free
  8022                           
  8023                           ;hopper.c: 58:     Update_coinsout(outcoins);
  8024  011640  5025               	movf	_outcoins,w,c
  8025  011642  EC8D  F08D         	call	_Update_coinsout
  8026  011646  D7F3               	goto	l8956
  8027  011648                     __end_of_hopper_pay:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function _pay_coin *****************
  8031 ;; Defined at:
  8032 ;;		line 79 in file "hopper.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      _Bool 
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    2
  8053 ;; This function calls:
  8054 ;;		_Reset_hopper
  8055 ;;		_TMR2_Initialize
  8056 ;;		_TMR4_Initialize
  8057 ;;		_cctalk_off
  8058 ;;		_cctalk_on
  8059 ;;		_switch_read
  8060 ;; This function is called by:
  8061 ;;		_hopper_pay
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text50
  8066  011116                     __ptext50:
  8067                           	opt callstack 0
  8068  011116                     _pay_coin:
  8069                           	opt callstack 25
  8070                           
  8071                           ;hopper.c: 82:     hopercount = 3;
  8072                           
  8073                           ;incstack = 0
  8074  011116  0E03               	movlw	3
  8075  011118  6E01               	movwf	_hopercount,c
  8076                           
  8077                           ;hopper.c: 83:     if(switch_read())
  8078  01111A  EC29  F08C         	call	_switch_read	;wreg free
  8079  01111E  0900               	iorlw	0
  8080  011120  B4D8               	btfsc	status,2,c
  8081  011122  D011               	goto	l8598
  8082                           
  8083                           ;hopper.c: 84:     {;hopper.c: 85:         TMR2_Initialize();
  8084  011124  EC49  F090         	call	_TMR2_Initialize	;wreg free
  8085  011128                     l8584:
  8086  011128  EC29  F08C         	call	_switch_read	;wreg free
  8087  01112C  0900               	iorlw	0
  8088  01112E  B4D8               	btfsc	status,2,c
  8089  011130  D003               	goto	u2450
  8090  011132  010E               	movlb	14	; () banked
  8091  011134  A3CE               	btfss	206,1,b	;volatile
  8092  011136  D7F8               	goto	l8584
  8093  011138                     u2450:
  8094                           
  8095                           ;hopper.c: 88:         if(PIR4bits.TMR2IF)
  8096  011138  010E               	movlb	14	; () banked
  8097  01113A  A3CE               	btfss	206,1,b	;volatile
  8098  01113C  D002               	goto	l8594
  8099  01113E                     u2460:
  8100                           
  8101                           ;hopper.c: 89:         {;hopper.c: 91:             return 1;
  8102  01113E  0E01               	movlw	1
  8103  011140  0012               	return	
  8104  011142                     l8594:
  8105                           
  8106                           ; BSR set to: 14
  8107                           ;hopper.c: 94:         {;hopper.c: 95:             return 0;
  8108  011142  0E00               	movlw	0
  8109  011144  0012               	return	
  8110  011146                     l8598:
  8111                           
  8112                           ;hopper.c: 99:     {;hopper.c: 100:         cctalk_on();
  8113  011146  EC69  F091         	call	_cctalk_on	;wreg free
  8114                           
  8115                           ;hopper.c: 101:         TMR4_Initialize();
  8116  01114A  EC74  F090         	call	_TMR4_Initialize	;wreg free
  8117                           
  8118                           ;hopper.c: 103:         while(!switch_read())
  8119  01114E  D00B               	goto	l8610
  8120  011150                     l3894:
  8121                           
  8122                           ;hopper.c: 104:         {;hopper.c: 105:             if(PIR4bits.TMR4IF)
  8123  011150  010E               	movlb	14	; () banked
  8124  011152  A7CE               	btfss	206,3,b	;volatile
  8125  011154  D008               	goto	l8610
  8126                           
  8127                           ; BSR set to: 14
  8128                           ;hopper.c: 106:             {;hopper.c: 107:                 if(Reset_hopper())
  8129  011156  EC98  F08E         	call	_Reset_hopper	;wreg free
  8130  01115A  0900               	iorlw	0
  8131  01115C  B4D8               	btfsc	status,2,c
  8132  01115E  D003               	goto	l8610
  8133                           
  8134                           ;hopper.c: 108:                 {;hopper.c: 109:                     cctalk_off();
  8135  011160  EC6B  F091         	call	_cctalk_off	;wreg free
  8136  011164  D7EC               	goto	u2460
  8137  011166                     l8610:
  8138                           
  8139                           ;hopper.c: 103:         while(!switch_read())
  8140  011166  EC29  F08C         	call	_switch_read	;wreg free
  8141  01116A  0900               	iorlw	0
  8142  01116C  B4D8               	btfsc	status,2,c
  8143  01116E  D7F0               	goto	l3894
  8144                           
  8145                           ;hopper.c: 115:         cctalk_off();
  8146  011170  EC6B  F091         	call	_cctalk_off	;wreg free
  8147                           
  8148                           ;hopper.c: 116:         TMR2_Initialize();
  8149  011174  EC49  F090         	call	_TMR2_Initialize	;wreg free
  8150                           
  8151                           ;hopper.c: 117:         cctalk_on();
  8152  011178  EC69  F091         	call	_cctalk_on	;wreg free
  8153  01117C                     l8618:
  8154  01117C  EC29  F08C         	call	_switch_read	;wreg free
  8155  011180  0900               	iorlw	0
  8156  011182  B4D8               	btfsc	status,2,c
  8157  011184  D003               	goto	u2510
  8158  011186  010E               	movlb	14	; () banked
  8159  011188  A3CE               	btfss	206,1,b	;volatile
  8160  01118A  D7F8               	goto	l8618
  8161  01118C                     u2510:
  8162                           
  8163                           ;hopper.c: 119:         cctalk_off();
  8164  01118C  EC6B  F091         	call	_cctalk_off	;wreg free
  8165                           
  8166                           ;hopper.c: 120:         if(PIR4bits.TMR2IF)
  8167  011190  010E               	movlb	14	; () banked
  8168  011192  B3CE               	btfsc	206,1,b	;volatile
  8169  011194  D7D4               	goto	u2460
  8170  011196  D7D5               	goto	l8594
  8171  011198                     __end_of_pay_coin:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _switch_read *****************
  8175 ;; Defined at:
  8176 ;;		line 133 in file "hopper.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      _Bool 
  8183 ;; Registers used:
  8184 ;;		wreg, status,2
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;Total ram usage:        1 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_pay_coin
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text51
  8204  011852                     __ptext51:
  8205                           	opt callstack 0
  8206  011852                     _switch_read:
  8207                           	opt callstack 26
  8208                           
  8209                           ;hopper.c: 135:     if(PORTBbits.RB4 == venflags.swclosed)
  8210                           
  8211                           ;incstack = 0
  8212  011852  A215               	btfss	_venflags+2,1,c
  8213  011854  D002               	goto	u2180
  8214  011856  0E01               	movlw	1
  8215  011858  D001               	goto	u2182
  8216  01185A                     u2180:
  8217  01185A  0E00               	movlw	0
  8218  01185C                     u2182:
  8219  01185C  6E37               	movwf	??_switch_read& (0+255),c
  8220  01185E  A88E               	btfss	3982,4,c	;volatile
  8221  011860  D002               	goto	u2190
  8222  011862  0E01               	movlw	1
  8223  011864  D001               	goto	u2192
  8224  011866                     u2190:
  8225  011866  0E00               	movlw	0
  8226  011868                     u2192:
  8227  011868  1A37               	xorwf	??_switch_read,f,c
  8228  01186A  A4D8               	btfss	status,2,c
  8229  01186C  D012               	goto	l8268
  8230                           
  8231                           ;hopper.c: 136:     {;hopper.c: 137:         if(venflags.swclosed)
  8232  01186E  A215               	btfss	_venflags+2,1,c
  8233  011870  D008               	goto	l8266
  8234                           
  8235                           ;hopper.c: 138:         {;hopper.c: 139:             _delay((unsigned long)((5)*(1200000
      +                          0/4000.0)));
  8236  011872  0E14               	movlw	20
  8237  011874  6E37               	movwf	??_switch_read& (0+255),c
  8238  011876  0E7A               	movlw	122
  8239  011878                     u3757:
  8240  011878  2EE8               	decfsz	wreg,f,c
  8241  01187A  D7FE               	bra	u3757
  8242  01187C  2E37               	decfsz	??_switch_read& (0+255),f,c
  8243  01187E  D7FC               	bra	u3757
  8244                           
  8245                           ;hopper.c: 140:         }
  8246  011880  D008               	goto	l8268
  8247  011882                     l8266:
  8248                           
  8249                           ;hopper.c: 142:         {;hopper.c: 143:             _delay((unsigned long)((20)*(120000
      +                          00/4000.0)));
  8250  011882  0E4E               	movlw	78
  8251  011884  6E37               	movwf	??_switch_read& (0+255),c
  8252  011886  0EEB               	movlw	235
  8253  011888                     u3767:
  8254  011888  2EE8               	decfsz	wreg,f,c
  8255  01188A  D7FE               	bra	u3767
  8256  01188C  2E37               	decfsz	??_switch_read& (0+255),f,c
  8257  01188E  D7FC               	bra	u3767
  8258  011890  F000               	nop	
  8259  011892                     l8268:
  8260                           
  8261                           ;hopper.c: 146:     if(PORTBbits.RB4)
  8262  011892  A88E               	btfss	3982,4,c	;volatile
  8263  011894  D003               	goto	l3910
  8264                           
  8265                           ;hopper.c: 147:     {;hopper.c: 148:         venflags.swclosed = 0;
  8266  011896  9215               	bcf	_venflags+2,1,c
  8267                           
  8268                           ;hopper.c: 149:         return 0;
  8269  011898  0E00               	movlw	0
  8270  01189A  0012               	return	
  8271  01189C                     l3910:
  8272                           
  8273                           ;hopper.c: 152:     {;hopper.c: 153:         venflags.swclosed = 1;
  8274  01189C  8215               	bsf	_venflags+2,1,c
  8275                           
  8276                           ;hopper.c: 154:         return 1;
  8277  01189E  0E01               	movlw	1
  8278  0118A0  0012               	return		;funcret
  8279  0118A2                     __end_of_switch_read:
  8280                           	opt callstack 0
  8281                           
  8282 ;; *************** function _Reset_hopper *****************
  8283 ;; Defined at:
  8284 ;;		line 62 in file "hopper.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      _Bool 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:        2 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    1
  8305 ;; This function calls:
  8306 ;;		_TMR4_Initialize
  8307 ;;		_cctalk_off
  8308 ;;		_cctalk_on
  8309 ;; This function is called by:
  8310 ;;		_pay_coin
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text52
  8315  011D30                     __ptext52:
  8316                           	opt callstack 0
  8317  011D30                     _Reset_hopper:
  8318                           	opt callstack 25
  8319                           
  8320                           ;hopper.c: 64:     hopercount--;
  8321                           
  8322                           ;incstack = 0
  8323  011D30  0601               	decf	_hopercount,f,c
  8324                           
  8325                           ;hopper.c: 65:     cctalk_off();
  8326  011D32  EC6B  F091         	call	_cctalk_off	;wreg free
  8327                           
  8328                           ;hopper.c: 66:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  8329  011D36  0E1F               	movlw	31
  8330  011D38  6E38               	movwf	(??_Reset_hopper+1)& (0+255),c
  8331  011D3A  0E71               	movlw	113
  8332  011D3C  6E37               	movwf	??_Reset_hopper& (0+255),c
  8333  011D3E  0E1E               	movlw	30
  8334  011D40                     u3777:
  8335  011D40  2EE8               	decfsz	wreg,f,c
  8336  011D42  D7FE               	bra	u3777
  8337  011D44  2E37               	decfsz	??_Reset_hopper& (0+255),f,c
  8338  011D46  D7FC               	bra	u3777
  8339  011D48  2E38               	decfsz	(??_Reset_hopper+1)& (0+255),f,c
  8340  011D4A  D7FA               	bra	u3777
  8341  011D4C  D000               	nop2	
  8342                           
  8343                           ;hopper.c: 67:     TMR4_Initialize();
  8344  011D4E  EC74  F090         	call	_TMR4_Initialize	;wreg free
  8345                           
  8346                           ;hopper.c: 68:     if(hopercount > 0)
  8347  011D52  5001               	movf	_hopercount,w,c
  8348  011D54  0A80               	xorlw	128
  8349  011D56  0F7F               	addlw	-129
  8350  011D58  A0D8               	btfss	status,0,c
  8351  011D5A  D004               	goto	l8256
  8352                           
  8353                           ;hopper.c: 69:     {;hopper.c: 70:         cctalk_on();
  8354  011D5C  EC69  F091         	call	_cctalk_on	;wreg free
  8355                           
  8356                           ;hopper.c: 71:         return 0;
  8357  011D60  0E00               	movlw	0
  8358  011D62  0012               	return	
  8359  011D64                     l8256:
  8360                           
  8361                           ;hopper.c: 74:     {;hopper.c: 75:         return 1;
  8362  011D64  0E01               	movlw	1
  8363  011D66  0012               	return		;funcret
  8364  011D68                     __end_of_Reset_hopper:
  8365                           	opt callstack 0
  8366                           
  8367 ;; *************** function _cctalk_on *****************
  8368 ;; Defined at:
  8369 ;;		line 137 in file "cctalk.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		None
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_hopper_pay
  8393 ;;		_Reset_hopper
  8394 ;;		_pay_coin
  8395 ;;		_cctalk_init
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text53
  8400  0122D2                     __ptext53:
  8401                           	opt callstack 0
  8402  0122D2                     _cctalk_on:
  8403                           	opt callstack 26
  8404                           
  8405                           ;cctalk.c: 144:     LATCbits.LATC1 = 1;
  8406                           
  8407                           ;incstack = 0
  8408  0122D2  8285               	bsf	3973,1,c	;volatile
  8409  0122D4  0012               	return		;funcret
  8410  0122D6                     __end_of_cctalk_on:
  8411                           	opt callstack 0
  8412                           
  8413 ;; *************** function _cctalk_off *****************
  8414 ;; Defined at:
  8415 ;;		line 132 in file "cctalk.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		None
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_hopper_pay
  8439 ;;		_Reset_hopper
  8440 ;;		_pay_coin
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text54
  8445  0122D6                     __ptext54:
  8446                           	opt callstack 0
  8447  0122D6                     _cctalk_off:
  8448                           	opt callstack 26
  8449                           
  8450                           ;cctalk.c: 134:     LATCbits.LATC1 = 0;
  8451                           
  8452                           ;incstack = 0
  8453  0122D6  9285               	bcf	3973,1,c	;volatile
  8454  0122D8  0012               	return		;funcret
  8455  0122DA                     __end_of_cctalk_off:
  8456                           	opt callstack 0
  8457                           
  8458 ;; *************** function _Update_coinsout *****************
  8459 ;; Defined at:
  8460 ;;		line 158 in file "hopper.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  coinsout        1    wreg     unsigned char 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  coinsout        1   10[COMRAM] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;Total ram usage:        1 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    2
  8481 ;; This function calls:
  8482 ;;		_Read_NVstore
  8483 ;;		_Write_NVstore
  8484 ;; This function is called by:
  8485 ;;		_hopper_pay
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text55
  8490  011B1A                     __ptext55:
  8491                           	opt callstack 0
  8492  011B1A                     _Update_coinsout:
  8493                           	opt callstack 25
  8494                           
  8495                           ;incstack = 0
  8496                           ;Update_coinsout@coinsout stored from wreg
  8497  011B1A  6E41               	movwf	Update_coinsout@coinsout,c
  8498  011B1C  0E00               	movlw	0
  8499  011B1E  6E3A               	movwf	Read_NVstore@storeadd+1,c
  8500  011B20  0E1A               	movlw	26
  8501  011B22  6E39               	movwf	Read_NVstore@storeadd,c
  8502  011B24  0E35               	movlw	low _pvcash
  8503  011B26  6E3B               	movwf	Read_NVstore@storemem,c
  8504  011B28  0E00               	movlw	high _pvcash
  8505  011B2A  6E3C               	movwf	Read_NVstore@storemem+1,c
  8506  011B2C  0E02               	movlw	2
  8507  011B2E  6E3D               	movwf	Read_NVstore@storesize,c
  8508  011B30  EC6A  F08F         	call	_Read_NVstore	;wreg free
  8509                           
  8510                           ;hopper.c: 161:     pvcash = pvcash + (uint16_t)coinsout;
  8511  011B34  5041               	movf	Update_coinsout@coinsout,w,c
  8512  011B36  2435               	addwf	_pvcash,w,c	;volatile
  8513  011B38  6E35               	movwf	_pvcash,c	;volatile
  8514  011B3A  0E00               	movlw	0
  8515  011B3C  2036               	addwfc	_pvcash+1,w,c	;volatile
  8516  011B3E  6E36               	movwf	_pvcash+1,c	;volatile
  8517  011B40  0E00               	movlw	0
  8518  011B42  6E3C               	movwf	Write_NVstore@storeadd+1,c
  8519  011B44  0E1A               	movlw	26
  8520  011B46  6E3B               	movwf	Write_NVstore@storeadd,c
  8521  011B48  0E35               	movlw	low _pvcash
  8522  011B4A  6E3D               	movwf	Write_NVstore@storemem,c
  8523  011B4C  0E00               	movlw	high _pvcash
  8524  011B4E  6E3E               	movwf	Write_NVstore@storemem+1,c
  8525  011B50  0E02               	movlw	2
  8526  011B52  6E3F               	movwf	Write_NVstore@storesize,c
  8527  011B54  EC38  F08F         	call	_Write_NVstore	;wreg free
  8528  011B58  0012               	return		;funcret
  8529  011B5A                     __end_of_Update_coinsout:
  8530                           	opt callstack 0
  8531                           
  8532 ;; *************** function _Write_NVstore *****************
  8533 ;; Defined at:
  8534 ;;		line 86 in file "vend.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  storeadd        2    4[COMRAM] unsigned short 
  8537 ;;  storemem        2    6[COMRAM] PTR unsigned char 
  8538 ;;		 -> pnvcash(3), pvcash(2), 
  8539 ;;  storesize       1    8[COMRAM] unsigned char 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  i               1    9[COMRAM] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8551 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;Total ram usage:        6 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    1
  8558 ;; This function calls:
  8559 ;;		_DATAEE_WriteByte
  8560 ;; This function is called by:
  8561 ;;		_Update_cashaudit
  8562 ;;		_Update_coinsout
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text56
  8567  011E70                     __ptext56:
  8568                           	opt callstack 0
  8569  011E70                     _Write_NVstore:
  8570                           	opt callstack 25
  8571                           
  8572                           ;vend.c: 86: void Write_NVstore(uint16_t storeadd, uint8_t *storemem, uint8_t storesize)
      +                          ;vend.c: 87: {;vend.c: 88:      uint8_t i = 0;
  8573                           
  8574                           ;incstack = 0
  8575  011E70  0E00               	movlw	0
  8576  011E72  6E40               	movwf	Write_NVstore@i,c
  8577                           
  8578                           ;vend.c: 89:      while(i < storesize)
  8579  011E74  D011               	goto	l8198
  8580  011E76                     l8194:
  8581                           
  8582                           ;vend.c: 90:      {;vend.c: 91:          DATAEE_WriteByte(storeadd + i, storemem[i]);
  8583  011E76  5040               	movf	Write_NVstore@i,w,c
  8584  011E78  243B               	addwf	Write_NVstore@storeadd,w,c
  8585  011E7A  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  8586  011E7C  0E00               	movlw	0
  8587  011E7E  203C               	addwfc	Write_NVstore@storeadd+1,w,c
  8588  011E80  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  8589  011E82  5040               	movf	Write_NVstore@i,w,c
  8590  011E84  243D               	addwf	Write_NVstore@storemem,w,c
  8591  011E86  6ED9               	movwf	fsr2l,c
  8592  011E88  0E00               	movlw	0
  8593  011E8A  203E               	addwfc	Write_NVstore@storemem+1,w,c
  8594  011E8C  6EDA               	movwf	fsr2h,c
  8595  011E8E  50DF               	movf	indf2,w,c
  8596  011E90  6E39               	movwf	DATAEE_WriteByte@bData,c
  8597  011E92  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  8598                           
  8599                           ;vend.c: 92:          i++;
  8600  011E96  2A40               	incf	Write_NVstore@i,f,c
  8601  011E98                     l8198:
  8602                           
  8603                           ;vend.c: 89:      while(i < storesize)
  8604  011E98  503F               	movf	Write_NVstore@storesize,w,c
  8605  011E9A  5C40               	subwf	Write_NVstore@i,w,c
  8606  011E9C  B0D8               	btfsc	status,0,c
  8607  011E9E  0012               	return	
  8608  011EA0  D7EA               	goto	l8194
  8609  011EA2                     __end_of_Write_NVstore:
  8610                           	opt callstack 0
  8611                           
  8612 ;; *************** function _Vend_setup *****************
  8613 ;; Defined at:
  8614 ;;		line 425 in file "vend.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;Total ram usage:        2 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    9
  8635 ;; This function calls:
  8636 ;;		_Chan_link
  8637 ;;		_Clear_Totals
  8638 ;;		_Init_vendmem
  8639 ;;		_Reset_settings
  8640 ;;		_Sens_off
  8641 ;;		_Vend_settime
  8642 ;;		_butindb
  8643 ;;		_lcd_string
  8644 ;; This function is called by:
  8645 ;;		_enter_service
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text57
  8650  010850                     __ptext57:
  8651                           	opt callstack 0
  8652  010850                     _Vend_setup:
  8653                           	opt callstack 20
  8654                           
  8655                           ;vend.c: 427:     venflags.vendset = 1;
  8656                           
  8657                           ;incstack = 0
  8658  010850  8414               	bsf	_venflags+1,2,c
  8659  010852                     l9274:
  8660  010852  0EF1               	movlw	low _vendsetup
  8661  010854  6E40               	movwf	lcd_string@lcdstring,c
  8662  010856  0EFC               	movlw	high _vendsetup
  8663  010858  6E41               	movwf	lcd_string@lcdstring+1,c
  8664  01085A  0E00               	movlw	0
  8665  01085C  6E42               	movwf	lcd_string@lcdline,c
  8666  01085E  ECCC  F088         	call	_lcd_string	;wreg free
  8667                           
  8668                           ;vend.c: 429:     while(venflags.vendset)
  8669  010862  D051               	goto	l2219
  8670  010864                     l9276:
  8671                           
  8672                           ;vend.c: 430:     {;vend.c: 431:         buttons = butindb();
  8673  010864  ECCD  F08D         	call	_butindb	;wreg free
  8674  010868  6E22               	movwf	_buttons,c	;volatile
  8675                           
  8676                           ;vend.c: 432:         switch(buttons)
  8677  01086A  D033               	goto	l9296
  8678  01086C                     l9278:
  8679  01086C  ECAD  F08D         	call	_Vend_settime	;wreg free
  8680  010870  D7F0               	goto	l9274
  8681  010872                     l9282:
  8682  010872  EC51  F08C         	call	_Chan_link	;wreg free
  8683  010876  0EF1               	movlw	low _vendsetup
  8684  010878  6E40               	movwf	lcd_string@lcdstring,c
  8685  01087A  0EFC               	movlw	high _vendsetup
  8686  01087C  6E41               	movwf	lcd_string@lcdstring+1,c
  8687  01087E  0E00               	movlw	0
  8688  010880  6E42               	movwf	lcd_string@lcdline,c
  8689  010882  ECCC  F088         	call	_lcd_string	;wreg free
  8690                           
  8691                           ;vend.c: 439:             break;
  8692  010886  D03F               	goto	l2219
  8693  010888                     l9284:
  8694  010888  EC62  F08A         	call	_Sens_off	;wreg free
  8695  01088C  0EF1               	movlw	low _vendsetup
  8696  01088E  6E40               	movwf	lcd_string@lcdstring,c
  8697  010890  0EFC               	movlw	high _vendsetup
  8698  010892  6E41               	movwf	lcd_string@lcdstring+1,c
  8699  010894  0E00               	movlw	0
  8700  010896  6E42               	movwf	lcd_string@lcdline,c
  8701  010898  ECCC  F088         	call	_lcd_string	;wreg free
  8702                           
  8703                           ;vend.c: 442:             break;
  8704  01089C  D034               	goto	l2219
  8705  01089E                     l9286:
  8706  01089E  EC82  F08F         	call	_Clear_Totals	;wreg free
  8707                           
  8708                           ;vend.c: 444:             break;
  8709  0108A2  D031               	goto	l2219
  8710  0108A4                     l9288:
  8711  0108A4  EC38  F087         	call	_Reset_settings	;wreg free
  8712  0108A8  0EF1               	movlw	low _vendsetup
  8713  0108AA  6E40               	movwf	lcd_string@lcdstring,c
  8714  0108AC  0EFC               	movlw	high _vendsetup
  8715  0108AE  6E41               	movwf	lcd_string@lcdstring+1,c
  8716  0108B0  0E00               	movlw	0
  8717  0108B2  6E42               	movwf	lcd_string@lcdline,c
  8718  0108B4  ECCC  F088         	call	_lcd_string	;wreg free
  8719                           
  8720                           ;vend.c: 447:             break;
  8721  0108B8  D026               	goto	l2219
  8722  0108BA                     l2228:
  8723  0108BA  9414               	bcf	_venflags+1,2,c
  8724                           
  8725                           ;vend.c: 450:             Init_vendmem();
  8726  0108BC  EC49  F089         	call	_Init_vendmem	;wreg free
  8727  0108C0  0E5C               	movlw	low _servmsg
  8728  0108C2  6E40               	movwf	lcd_string@lcdstring,c
  8729  0108C4  0EFC               	movlw	high _servmsg
  8730  0108C6  6E41               	movwf	lcd_string@lcdstring+1,c
  8731  0108C8  0E00               	movlw	0
  8732  0108CA  6E42               	movwf	lcd_string@lcdline,c
  8733  0108CC  ECCC  F088         	call	_lcd_string	;wreg free
  8734                           
  8735                           ;vend.c: 452:             break;
  8736  0108D0  D01A               	goto	l2219
  8737  0108D2                     l9296:
  8738  0108D2  5022               	movf	_buttons,w,c	;volatile
  8739  0108D4  6E56               	movwf	??_Vend_setup& (0+255),c
  8740  0108D6  6A57               	clrf	(??_Vend_setup+1)& (0+255),c
  8741                           
  8742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8743                           ; Switch size 1, requested type "simple"
  8744                           ; Number of cases is 1, Range of values is 0 to 0
  8745                           ; switch strategies available:
  8746                           ; Name         Instructions Cycles
  8747                           ; simple_byte            4     3 (average)
  8748                           ;	Chosen strategy is simple_byte
  8749  0108D8  5057               	movf	??_Vend_setup+1,w,c
  8750  0108DA  0A00               	xorlw	0	; case 0
  8751  0108DC  A4D8               	btfss	status,2,c
  8752  0108DE  D013               	goto	l2219
  8753                           
  8754                           ; Switch size 1, requested type "simple"
  8755                           ; Number of cases is 6, Range of values is 1 to 128
  8756                           ; switch strategies available:
  8757                           ; Name         Instructions Cycles
  8758                           ; simple_byte           19    10 (average)
  8759                           ;	Chosen strategy is simple_byte
  8760  0108E0  5056               	movf	??_Vend_setup,w,c
  8761  0108E2  0A01               	xorlw	1	; case 1
  8762  0108E4  B4D8               	btfsc	status,2,c
  8763  0108E6  D7C2               	goto	l9278
  8764  0108E8  0A03               	xorlw	3	; case 2
  8765  0108EA  B4D8               	btfsc	status,2,c
  8766  0108EC  D7C2               	goto	l9282
  8767  0108EE  0A06               	xorlw	6	; case 4
  8768  0108F0  B4D8               	btfsc	status,2,c
  8769  0108F2  D7CA               	goto	l9284
  8770  0108F4  0A0C               	xorlw	12	; case 8
  8771  0108F6  B4D8               	btfsc	status,2,c
  8772  0108F8  D7D2               	goto	l9286
  8773  0108FA  0A18               	xorlw	24	; case 16
  8774  0108FC  B4D8               	btfsc	status,2,c
  8775  0108FE  D7D2               	goto	l9288
  8776  010900  0A90               	xorlw	144	; case 128
  8777  010902  B4D8               	btfsc	status,2,c
  8778  010904  D7DA               	goto	l2228
  8779  010906                     l2219:
  8780                           
  8781                           ;vend.c: 429:     while(venflags.vendset)
  8782  010906  A414               	btfss	_venflags+1,2,c
  8783  010908  0012               	return	
  8784  01090A  D7AC               	goto	l9276
  8785  01090C                     __end_of_Vend_setup:
  8786                           	opt callstack 0
  8787                           
  8788 ;; *************** function _Vend_settime *****************
  8789 ;; Defined at:
  8790 ;;		line 457 in file "vend.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;Total ram usage:        0 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    8
  8811 ;; This function calls:
  8812 ;;		_Read_Service
  8813 ;;		_Vend_timeset
  8814 ;;		_butindb
  8815 ;;		_get_channel
  8816 ;;		_lcd_string
  8817 ;; This function is called by:
  8818 ;;		_Vend_setup
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text58
  8823  011B5A                     __ptext58:
  8824                           	opt callstack 0
  8825  011B5A                     _Vend_settime:
  8826                           	opt callstack 20
  8827                           
  8828                           ;incstack = 0
  8829  011B5A  0E00               	movlw	low _setimemsg
  8830  011B5C  6E40               	movwf	lcd_string@lcdstring,c
  8831  011B5E  0EFE               	movlw	high _setimemsg
  8832  011B60  6E41               	movwf	lcd_string@lcdstring+1,c
  8833  011B62  0E00               	movlw	0
  8834  011B64  6E42               	movwf	lcd_string@lcdline,c
  8835  011B66  ECCC  F088         	call	_lcd_string	;wreg free
  8836                           
  8837                           ;vend.c: 461:     buttons = butindb();
  8838  011B6A  ECCD  F08D         	call	_butindb	;wreg free
  8839  011B6E  6E22               	movwf	_buttons,c	;volatile
  8840                           
  8841                           ;vend.c: 462:     venflags.settime = 1;
  8842  011B70  8C14               	bsf	_venflags+1,6,c
  8843                           
  8844                           ;vend.c: 464:     while(venflags.settime)
  8845  011B72  D010               	goto	l2233
  8846  011B74                     l8808:
  8847                           
  8848                           ;vend.c: 465:     {;vend.c: 466:         buttons = butindb();
  8849  011B74  ECCD  F08D         	call	_butindb	;wreg free
  8850  011B78  6E22               	movwf	_buttons,c	;volatile
  8851                           
  8852                           ;vend.c: 467:         if(buttons != 0x00)
  8853  011B7A  5022               	movf	_buttons,w,c	;volatile
  8854  011B7C  B4D8               	btfsc	status,2,c
  8855  011B7E  D005               	goto	l8814
  8856                           
  8857                           ;vend.c: 468:         {;vend.c: 469:             Vend_timeset(get_channel(buttons));
  8858  011B80  5022               	movf	_buttons,w,c	;volatile
  8859  011B82  EC66  F090         	call	_get_channel
  8860  011B86  EC86  F084         	call	_Vend_timeset
  8861  011B8A                     l8814:
  8862                           
  8863                           ;vend.c: 471:         if(Read_Service() == 0x00)
  8864  011B8A  EC90  F090         	call	_Read_Service	;wreg free
  8865  011B8E  0900               	iorlw	0
  8866  011B90  B4D8               	btfsc	status,2,c
  8867                           
  8868                           ;vend.c: 472:         {;vend.c: 473:             venflags.settime = 0;
  8869  011B92  9C14               	bcf	_venflags+1,6,c
  8870  011B94                     l2233:
  8871                           
  8872                           ;vend.c: 464:     while(venflags.settime)
  8873  011B94  AC14               	btfss	_venflags+1,6,c
  8874  011B96  0012               	return	
  8875  011B98  D7ED               	goto	l8808
  8876  011B9A                     __end_of_Vend_settime:
  8877                           	opt callstack 0
  8878                           
  8879 ;; *************** function _Vend_timeset *****************
  8880 ;; Defined at:
  8881 ;;		line 480 in file "vend.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  channel         1    wreg     unsigned char 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  channel         1   30[COMRAM] unsigned char 
  8886 ;;  chantime        1   29[COMRAM] unsigned char 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;Total ram usage:        4 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:    7
  8903 ;; This function calls:
  8904 ;;		_DATAEE_ReadByte
  8905 ;;		_DATAEE_WriteByte
  8906 ;;		_butindb
  8907 ;;		_displ_time
  8908 ;;		_lcd_string
  8909 ;; This function is called by:
  8910 ;;		_Vend_settime
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text59
  8915  01090C                     __ptext59:
  8916                           	opt callstack 0
  8917  01090C                     _Vend_timeset:
  8918                           	opt callstack 20
  8919                           
  8920                           ;incstack = 0
  8921                           ;Vend_timeset@channel stored from wreg
  8922  01090C  6E55               	movwf	Vend_timeset@channel,c
  8923                           
  8924                           ;vend.c: 480: void Vend_timeset(uint8_t channel);vend.c: 481: {;vend.c: 482:     venflag
      +                          s.mottime = 1;
  8925  01090E  8814               	bsf	_venflags+1,4,c
  8926  010910  0ED7               	movlw	low _vendtimem
  8927  010912  6E40               	movwf	lcd_string@lcdstring,c
  8928  010914  0EFD               	movlw	high _vendtimem
  8929  010916  6E41               	movwf	lcd_string@lcdstring+1,c
  8930  010918  0E00               	movlw	0
  8931  01091A  6E42               	movwf	lcd_string@lcdline,c
  8932  01091C  ECCC  F088         	call	_lcd_string	;wreg free
  8933  010920  0E26               	movlw	38
  8934  010922  2455               	addwf	Vend_timeset@channel,w,c
  8935  010924  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  8936  010926  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  8937  010928  0E00               	movlw	0
  8938  01092A  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  8939  01092C  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  8940  010930  6E54               	movwf	Vend_timeset@chantime,c
  8941                           
  8942                           ;vend.c: 485:     displ_time(chantime, channel);
  8943  010932  C055  F050         	movff	Vend_timeset@channel,displ_time@channel
  8944  010936  5054               	movf	Vend_timeset@chantime,w,c
  8945  010938  EC51  F08B         	call	_displ_time
  8946                           
  8947                           ;vend.c: 486:     while(venflags.mottime)
  8948  01093C  D041               	goto	l2241
  8949  01093E                     l8418:
  8950                           
  8951                           ;vend.c: 487:     {;vend.c: 488:         buttons = butindb();
  8952  01093E  ECCD  F08D         	call	_butindb	;wreg free
  8953  010942  6E22               	movwf	_buttons,c	;volatile
  8954                           
  8955                           ;vend.c: 489:         switch(buttons)
  8956  010944  D02C               	goto	l8436
  8957  010946                     l8420:
  8958  010946  2A54               	incf	Vend_timeset@chantime,f,c
  8959  010948  0E26               	movlw	38
  8960  01094A  2455               	addwf	Vend_timeset@channel,w,c
  8961  01094C  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  8962  01094E  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
  8963  010950  0E00               	movlw	0
  8964  010952  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
  8965  010954  C054  F039         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  8966  010958  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  8967                           
  8968                           ;vend.c: 493:             displ_time(chantime, channel);
  8969  01095C  C055  F050         	movff	Vend_timeset@channel,displ_time@channel
  8970  010960  5054               	movf	Vend_timeset@chantime,w,c
  8971  010962  EC51  F08B         	call	_displ_time
  8972                           
  8973                           ;vend.c: 494:             break;
  8974  010966  D02C               	goto	l2241
  8975  010968                     l8426:
  8976  010968  0654               	decf	Vend_timeset@chantime,f,c
  8977  01096A  0E26               	movlw	38
  8978  01096C  2455               	addwf	Vend_timeset@channel,w,c
  8979  01096E  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  8980  010970  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
  8981  010972  0E00               	movlw	0
  8982  010974  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
  8983  010976  C054  F039         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  8984  01097A  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  8985                           
  8986                           ;vend.c: 497:             displ_time(chantime, channel);
  8987  01097E  C055  F050         	movff	Vend_timeset@channel,displ_time@channel
  8988  010982  5054               	movf	Vend_timeset@chantime,w,c
  8989  010984  EC51  F08B         	call	_displ_time
  8990                           
  8991                           ;vend.c: 498:             break;
  8992  010988  D01B               	goto	l2241
  8993  01098A                     l2247:
  8994  01098A  9814               	bcf	_venflags+1,4,c
  8995  01098C  0E00               	movlw	low _setimemsg
  8996  01098E  6E40               	movwf	lcd_string@lcdstring,c
  8997  010990  0EFE               	movlw	high _setimemsg
  8998  010992  6E41               	movwf	lcd_string@lcdstring+1,c
  8999  010994  0E00               	movlw	0
  9000  010996  6E42               	movwf	lcd_string@lcdline,c
  9001  010998  ECCC  F088         	call	_lcd_string	;wreg free
  9002                           
  9003                           ;vend.c: 501:             break;
  9004  01099C  D011               	goto	l2241
  9005  01099E                     l8436:
  9006  01099E  5022               	movf	_buttons,w,c	;volatile
  9007  0109A0  6E52               	movwf	??_Vend_timeset& (0+255),c
  9008  0109A2  6A53               	clrf	(??_Vend_timeset+1)& (0+255),c
  9009                           
  9010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9011                           ; Switch size 1, requested type "simple"
  9012                           ; Number of cases is 1, Range of values is 0 to 0
  9013                           ; switch strategies available:
  9014                           ; Name         Instructions Cycles
  9015                           ; simple_byte            4     3 (average)
  9016                           ;	Chosen strategy is simple_byte
  9017  0109A4  5053               	movf	??_Vend_timeset+1,w,c
  9018  0109A6  0A00               	xorlw	0	; case 0
  9019  0109A8  A4D8               	btfss	status,2,c
  9020  0109AA  D00A               	goto	l2241
  9021                           
  9022                           ; Switch size 1, requested type "simple"
  9023                           ; Number of cases is 3, Range of values is 1 to 128
  9024                           ; switch strategies available:
  9025                           ; Name         Instructions Cycles
  9026                           ; simple_byte           10     6 (average)
  9027                           ;	Chosen strategy is simple_byte
  9028  0109AC  5052               	movf	??_Vend_timeset,w,c
  9029  0109AE  0A01               	xorlw	1	; case 1
  9030  0109B0  B4D8               	btfsc	status,2,c
  9031  0109B2  D7C9               	goto	l8420
  9032  0109B4  0A03               	xorlw	3	; case 2
  9033  0109B6  B4D8               	btfsc	status,2,c
  9034  0109B8  D7D7               	goto	l8426
  9035  0109BA  0A82               	xorlw	130	; case 128
  9036  0109BC  B4D8               	btfsc	status,2,c
  9037  0109BE  D7E5               	goto	l2247
  9038  0109C0                     l2241:
  9039                           
  9040                           ;vend.c: 486:     while(venflags.mottime)
  9041  0109C0  A814               	btfss	_venflags+1,4,c
  9042  0109C2  0012               	return	
  9043  0109C4  D7BC               	goto	l8418
  9044  0109C6                     __end_of_Vend_timeset:
  9045                           	opt callstack 0
  9046                           
  9047 ;; *************** function _displ_time *****************
  9048 ;; Defined at:
  9049 ;;		line 98 in file "lcd.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  motortime       1    wreg     unsigned char 
  9052 ;;  channel         1   25[COMRAM] unsigned char 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  motortime       1   26[COMRAM] unsigned char 
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9064 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;Total ram usage:        2 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    6
  9071 ;; This function calls:
  9072 ;;		_displ_hex
  9073 ;;		_lcd_string
  9074 ;;		_lcd_writeC
  9075 ;; This function is called by:
  9076 ;;		_Vend_timeset
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text60
  9081  0116A2                     __ptext60:
  9082                           	opt callstack 0
  9083  0116A2                     _displ_time:
  9084                           	opt callstack 20
  9085                           
  9086                           ;incstack = 0
  9087                           ;displ_time@motortime stored from wreg
  9088  0116A2  6E51               	movwf	displ_time@motortime,c
  9089  0116A4  0E06               	movlw	low _clrline
  9090  0116A6  6E40               	movwf	lcd_string@lcdstring,c
  9091  0116A8  0EFF               	movlw	high _clrline
  9092  0116AA  6E41               	movwf	lcd_string@lcdstring+1,c
  9093  0116AC  0E14               	movlw	20
  9094  0116AE  6E42               	movwf	lcd_string@lcdline,c
  9095  0116B0  ECCC  F088         	call	_lcd_string	;wreg free
  9096  0116B4  0E06               	movlw	low _clrline
  9097  0116B6  6E40               	movwf	lcd_string@lcdstring,c
  9098  0116B8  0EFF               	movlw	high _clrline
  9099  0116BA  6E41               	movwf	lcd_string@lcdstring+1,c
  9100  0116BC  0E54               	movlw	84
  9101  0116BE  6E42               	movwf	lcd_string@lcdline,c
  9102  0116C0  ECCC  F088         	call	_lcd_string	;wreg free
  9103  0116C4  0E69               	movlw	low _chanmsg
  9104  0116C6  6E40               	movwf	lcd_string@lcdstring,c
  9105  0116C8  0EFF               	movlw	high _chanmsg
  9106  0116CA  6E41               	movwf	lcd_string@lcdstring+1,c
  9107  0116CC  0E14               	movlw	20
  9108  0116CE  6E42               	movwf	lcd_string@lcdline,c
  9109  0116D0  ECCC  F088         	call	_lcd_string	;wreg free
  9110                           
  9111                           ;lcd.c: 103:     lcd_writeC(channel++ | 0x30);
  9112  0116D4  5050               	movf	displ_time@channel,w,c
  9113  0116D6  0930               	iorlw	48
  9114  0116D8  EC9E  F08C         	call	_lcd_writeC
  9115  0116DC  2A50               	incf	displ_time@channel,f,c
  9116  0116DE  0E1B               	movlw	low _timemsg
  9117  0116E0  6E40               	movwf	lcd_string@lcdstring,c
  9118  0116E2  0EFF               	movlw	high _timemsg
  9119  0116E4  6E41               	movwf	lcd_string@lcdstring+1,c
  9120  0116E6  0E54               	movlw	84
  9121  0116E8  6E42               	movwf	lcd_string@lcdline,c
  9122  0116EA  ECCC  F088         	call	_lcd_string	;wreg free
  9123                           
  9124                           ;lcd.c: 105:     displ_hex((uint8_t) motortime);
  9125  0116EE  5051               	movf	displ_time@motortime,w,c
  9126  0116F0  6E41               	movwf	displ_hex@hexnum,c
  9127  0116F2  6A42               	clrf	displ_hex@hexnum+1,c
  9128  0116F4  6A43               	clrf	displ_hex@hexnum+2,c
  9129  0116F6  EC4B  F086         	call	_displ_hex	;wreg free
  9130  0116FA  0012               	return		;funcret
  9131  0116FC                     __end_of_displ_time:
  9132                           	opt callstack 0
  9133                           
  9134 ;; *************** function _Sens_off *****************
  9135 ;; Defined at:
  9136 ;;		line 562 in file "vend.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;Total ram usage:        2 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:    8
  9157 ;; This function calls:
  9158 ;;		_Read_Service
  9159 ;;		_butindb
  9160 ;;		_get_channel
  9161 ;;		_lcd_string
  9162 ;;		_off_sens
  9163 ;; This function is called by:
  9164 ;;		_Vend_setup
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text61
  9169  0114C4                     __ptext61:
  9170                           	opt callstack 0
  9171  0114C4                     _Sens_off:
  9172                           	opt callstack 20
  9173                           
  9174                           ;vend.c: 564:     _delay((unsigned long)((250)*(12000000/4000.0)));
  9175                           
  9176                           ;incstack = 0
  9177  0114C4  0E04               	movlw	4
  9178  0114C6  6E4E               	movwf	(??_Sens_off+1)& (0+255),c
  9179  0114C8  0ECF               	movlw	207
  9180  0114CA  6E4D               	movwf	??_Sens_off& (0+255),c
  9181  0114CC  0E02               	movlw	2
  9182  0114CE                     u3787:
  9183  0114CE  2EE8               	decfsz	wreg,f,c
  9184  0114D0  D7FE               	bra	u3787
  9185  0114D2  2E4D               	decfsz	??_Sens_off& (0+255),f,c
  9186  0114D4  D7FC               	bra	u3787
  9187  0114D6  2E4E               	decfsz	(??_Sens_off+1)& (0+255),f,c
  9188  0114D8  D7FA               	bra	u3787
  9189  0114DA                     l8836:
  9190                           
  9191                           ;vend.c: 565:     buttons = butindb();
  9192  0114DA  ECCD  F08D         	call	_butindb	;wreg free
  9193  0114DE  6E22               	movwf	_buttons,c	;volatile
  9194                           
  9195                           ;vend.c: 566:     while(0x04 == buttons)
  9196                           
  9197                           ;vend.c: 566:     while(0x04 == buttons)
  9198  0114E0  0E04               	movlw	4
  9199  0114E2  1822               	xorwf	_buttons,w,c	;volatile
  9200  0114E4  B4D8               	btfsc	status,2,c
  9201  0114E6  D7F9               	goto	l8836
  9202                           
  9203                           ;vend.c: 570:     venflags.nosense = 1;
  9204  0114E8  8A14               	bsf	_venflags+1,5,c
  9205  0114EA  0E00               	movlw	low _setimemsg
  9206  0114EC  6E40               	movwf	lcd_string@lcdstring,c
  9207  0114EE  0EFE               	movlw	high _setimemsg
  9208  0114F0  6E41               	movwf	lcd_string@lcdstring+1,c
  9209  0114F2  0E00               	movlw	0
  9210  0114F4  6E42               	movwf	lcd_string@lcdline,c
  9211  0114F6  ECCC  F088         	call	_lcd_string	;wreg free
  9212                           
  9213                           ;vend.c: 572:     buttons = butindb();
  9214  0114FA  ECCD  F08D         	call	_butindb	;wreg free
  9215  0114FE  6E22               	movwf	_buttons,c	;volatile
  9216                           
  9217                           ;vend.c: 573:     while(venflags.nosense)
  9218  011500  D010               	goto	l2275
  9219  011502                     l8846:
  9220                           
  9221                           ;vend.c: 574:     {;vend.c: 575:         buttons = butindb();
  9222  011502  ECCD  F08D         	call	_butindb	;wreg free
  9223  011506  6E22               	movwf	_buttons,c	;volatile
  9224                           
  9225                           ;vend.c: 576:         if(buttons != 0x00)
  9226  011508  5022               	movf	_buttons,w,c	;volatile
  9227  01150A  B4D8               	btfsc	status,2,c
  9228  01150C  D005               	goto	l8852
  9229                           
  9230                           ;vend.c: 577:         {;vend.c: 578:             off_sens(get_channel(buttons));
  9231  01150E  5022               	movf	_buttons,w,c	;volatile
  9232  011510  EC66  F090         	call	_get_channel
  9233  011514  EC40  F085         	call	_off_sens
  9234  011518                     l8852:
  9235                           
  9236                           ;vend.c: 580:         if(Read_Service() == 0x00)
  9237  011518  EC90  F090         	call	_Read_Service	;wreg free
  9238  01151C  0900               	iorlw	0
  9239  01151E  B4D8               	btfsc	status,2,c
  9240                           
  9241                           ;vend.c: 581:         {;vend.c: 582:             venflags.nosense = 0;
  9242  011520  9A14               	bcf	_venflags+1,5,c
  9243  011522                     l2275:
  9244                           
  9245                           ;vend.c: 573:     while(venflags.nosense)
  9246  011522  AA14               	btfss	_venflags+1,5,c
  9247  011524  0012               	return	
  9248  011526  D7ED               	goto	l8846
  9249  011528                     __end_of_Sens_off:
  9250                           	opt callstack 0
  9251                           
  9252 ;; *************** function _off_sens *****************
  9253 ;; Defined at:
  9254 ;;		line 589 in file "vend.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  channel         1    wreg     unsigned char 
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;  channel         1   19[COMRAM] unsigned char 
  9259 ;;  senseflags      1   21[COMRAM] unsigned char 
  9260 ;;  chanbit         1   20[COMRAM] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9271 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;Total ram usage:        5 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    7
  9277 ;; This function calls:
  9278 ;;		_DATAEE_ReadByte
  9279 ;;		_DATAEE_WriteByte
  9280 ;;		_butindb
  9281 ;;		_displ_sflags
  9282 ;;		_lcd_string
  9283 ;; This function is called by:
  9284 ;;		_Sens_off
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text62
  9289  010A80                     __ptext62:
  9290                           	opt callstack 0
  9291  010A80                     _off_sens:
  9292                           	opt callstack 20
  9293                           
  9294                           ;incstack = 0
  9295                           ;off_sens@channel stored from wreg
  9296  010A80  6E4A               	movwf	off_sens@channel,c
  9297                           
  9298                           ;vend.c: 589: void off_sens(uint8_t channel);vend.c: 590: {;vend.c: 591:     uint8_t cha
      +                          nbit = buttons;
  9299  010A82  C022  F04B         	movff	_buttons,off_sens@chanbit	;volatile
  9300                           
  9301                           ;vend.c: 592:     venflags.sensno = 1;
  9302  010A86  8E14               	bsf	_venflags+1,7,c
  9303  010A88  0E00               	movlw	0
  9304  010A8A  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  9305  010A8C  0E25               	movlw	37
  9306  010A8E  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  9307  010A90  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  9308  010A94  6E4C               	movwf	off_sens@senseflags,c
  9309                           
  9310                           ;vend.c: 594:     displ_sflags(senseflags, channel, chanbit);
  9311  010A96  C04A  F045         	movff	off_sens@channel,displ_sflags@chanel
  9312  010A9A  C04B  F046         	movff	off_sens@chanbit,displ_sflags@chanbit
  9313  010A9E  504C               	movf	off_sens@senseflags,w,c
  9314  010AA0  ECF8  F089         	call	_displ_sflags
  9315                           
  9316                           ;vend.c: 596:     while(venflags.sensno)
  9317  010AA4  D046               	goto	l2283
  9318  010AA6                     l8474:
  9319                           
  9320                           ;vend.c: 597:     {;vend.c: 598:         buttons = butindb();
  9321  010AA6  ECCD  F08D         	call	_butindb	;wreg free
  9322  010AAA  6E22               	movwf	_buttons,c	;volatile
  9323                           
  9324                           ;vend.c: 599:         switch(buttons)
  9325  010AAC  D031               	goto	l8492
  9326  010AAE                     l8476:
  9327  010AAE  504B               	movf	off_sens@chanbit,w,c
  9328  010AB0  0AFF               	xorlw	255
  9329  010AB2  144C               	andwf	off_sens@senseflags,w,c
  9330  010AB4  6E4C               	movwf	off_sens@senseflags,c
  9331  010AB6  0E00               	movlw	0
  9332  010AB8  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  9333  010ABA  0E25               	movlw	37
  9334  010ABC  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  9335  010ABE  C04C  F039         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  9336  010AC2  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9337                           
  9338                           ;vend.c: 604:             displ_sflags(senseflags, channel, chanbit);
  9339  010AC6  C04A  F045         	movff	off_sens@channel,displ_sflags@chanel
  9340  010ACA  C04B  F046         	movff	off_sens@chanbit,displ_sflags@chanbit
  9341  010ACE  504C               	movf	off_sens@senseflags,w,c
  9342  010AD0  ECF8  F089         	call	_displ_sflags
  9343                           
  9344                           ;vend.c: 605:             break;
  9345  010AD4  D02E               	goto	l2283
  9346  010AD6                     l8482:
  9347  010AD6  504C               	movf	off_sens@senseflags,w,c
  9348  010AD8  104B               	iorwf	off_sens@chanbit,w,c
  9349  010ADA  6E4C               	movwf	off_sens@senseflags,c
  9350  010ADC  0E00               	movlw	0
  9351  010ADE  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  9352  010AE0  0E25               	movlw	37
  9353  010AE2  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  9354  010AE4  C04C  F039         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  9355  010AE8  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9356                           
  9357                           ;vend.c: 609:             displ_sflags(senseflags, channel, chanbit);
  9358  010AEC  C04A  F045         	movff	off_sens@channel,displ_sflags@chanel
  9359  010AF0  C04B  F046         	movff	off_sens@chanbit,displ_sflags@chanbit
  9360  010AF4  504C               	movf	off_sens@senseflags,w,c
  9361  010AF6  ECF8  F089         	call	_displ_sflags
  9362                           
  9363                           ;vend.c: 610:             break;
  9364  010AFA  D01B               	goto	l2283
  9365  010AFC                     l2289:
  9366  010AFC  9E14               	bcf	_venflags+1,7,c
  9367  010AFE  0E00               	movlw	low _setimemsg
  9368  010B00  6E40               	movwf	lcd_string@lcdstring,c
  9369  010B02  0EFE               	movlw	high _setimemsg
  9370  010B04  6E41               	movwf	lcd_string@lcdstring+1,c
  9371  010B06  0E00               	movlw	0
  9372  010B08  6E42               	movwf	lcd_string@lcdline,c
  9373  010B0A  ECCC  F088         	call	_lcd_string	;wreg free
  9374                           
  9375                           ;vend.c: 613:             break;
  9376  010B0E  D011               	goto	l2283
  9377  010B10                     l8492:
  9378  010B10  5022               	movf	_buttons,w,c	;volatile
  9379  010B12  6E48               	movwf	??_off_sens& (0+255),c
  9380  010B14  6A49               	clrf	(??_off_sens+1)& (0+255),c
  9381                           
  9382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9383                           ; Switch size 1, requested type "simple"
  9384                           ; Number of cases is 1, Range of values is 0 to 0
  9385                           ; switch strategies available:
  9386                           ; Name         Instructions Cycles
  9387                           ; simple_byte            4     3 (average)
  9388                           ;	Chosen strategy is simple_byte
  9389  010B16  5049               	movf	??_off_sens+1,w,c
  9390  010B18  0A00               	xorlw	0	; case 0
  9391  010B1A  A4D8               	btfss	status,2,c
  9392  010B1C  D00A               	goto	l2283
  9393                           
  9394                           ; Switch size 1, requested type "simple"
  9395                           ; Number of cases is 3, Range of values is 1 to 128
  9396                           ; switch strategies available:
  9397                           ; Name         Instructions Cycles
  9398                           ; simple_byte           10     6 (average)
  9399                           ;	Chosen strategy is simple_byte
  9400  010B1E  5048               	movf	??_off_sens,w,c
  9401  010B20  0A01               	xorlw	1	; case 1
  9402  010B22  B4D8               	btfsc	status,2,c
  9403  010B24  D7C4               	goto	l8476
  9404  010B26  0A03               	xorlw	3	; case 2
  9405  010B28  B4D8               	btfsc	status,2,c
  9406  010B2A  D7D5               	goto	l8482
  9407  010B2C  0A82               	xorlw	130	; case 128
  9408  010B2E  B4D8               	btfsc	status,2,c
  9409  010B30  D7E5               	goto	l2289
  9410  010B32                     l2283:
  9411                           
  9412                           ;vend.c: 596:     while(venflags.sensno)
  9413  010B32  AE14               	btfss	_venflags+1,7,c
  9414  010B34  0012               	return	
  9415  010B36  D7B7               	goto	l8474
  9416  010B38                     __end_of_off_sens:
  9417                           	opt callstack 0
  9418                           
  9419 ;; *************** function _displ_sflags *****************
  9420 ;; Defined at:
  9421 ;;		line 79 in file "lcd.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  senseflags      1    wreg     unsigned char 
  9424 ;;  chanel          1   14[COMRAM] unsigned char 
  9425 ;;  chanbit         1   15[COMRAM] unsigned char 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  senseflags      1   16[COMRAM] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;Total ram usage:        3 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    6
  9444 ;; This function calls:
  9445 ;;		_lcd_string
  9446 ;;		_lcd_writeC
  9447 ;; This function is called by:
  9448 ;;		_off_sens
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text63
  9453  0113F0                     __ptext63:
  9454                           	opt callstack 0
  9455  0113F0                     _displ_sflags:
  9456                           	opt callstack 20
  9457                           
  9458                           ;incstack = 0
  9459                           ;displ_sflags@senseflags stored from wreg
  9460  0113F0  6E47               	movwf	displ_sflags@senseflags,c
  9461  0113F2  0E69               	movlw	low _chanmsg
  9462  0113F4  6E40               	movwf	lcd_string@lcdstring,c
  9463  0113F6  0EFF               	movlw	high _chanmsg
  9464  0113F8  6E41               	movwf	lcd_string@lcdstring+1,c
  9465  0113FA  0E00               	movlw	0
  9466  0113FC  6E42               	movwf	lcd_string@lcdline,c
  9467  0113FE  ECCC  F088         	call	_lcd_string	;wreg free
  9468                           
  9469                           ;lcd.c: 83:     lcd_writeC(++chanel | 0x30);
  9470  011402  2A45               	incf	displ_sflags@chanel,f,c
  9471  011404  5045               	movf	displ_sflags@chanel,w,c
  9472  011406  0930               	iorlw	48
  9473  011408  EC9E  F08C         	call	_lcd_writeC
  9474  01140C  0E81               	movlw	low _sensmsg
  9475  01140E  6E40               	movwf	lcd_string@lcdstring,c
  9476  011410  0EFF               	movlw	high _sensmsg
  9477  011412  6E41               	movwf	lcd_string@lcdstring+1,c
  9478  011414  0E40               	movlw	64
  9479  011416  6E42               	movwf	lcd_string@lcdline,c
  9480  011418  ECCC  F088         	call	_lcd_string	;wreg free
  9481  01141C  0EB6               	movlw	low _sensoffmsg
  9482  01141E  6E40               	movwf	lcd_string@lcdstring,c
  9483  011420  0EFE               	movlw	high _sensoffmsg
  9484  011422  6E41               	movwf	lcd_string@lcdstring+1,c
  9485  011424  0E14               	movlw	20
  9486  011426  6E42               	movwf	lcd_string@lcdline,c
  9487  011428  ECCC  F088         	call	_lcd_string	;wreg free
  9488                           
  9489                           ;lcd.c: 87:     if((senseflags & chanbit) != 0)
  9490  01142C  5047               	movf	displ_sflags@senseflags,w,c
  9491  01142E  1446               	andwf	displ_sflags@chanbit,w,c
  9492  011430  0900               	iorlw	0
  9493  011432  B4D8               	btfsc	status,2,c
  9494  011434  D009               	goto	l8180
  9495  011436  0EA0               	movlw	low _disabled
  9496  011438  6E40               	movwf	lcd_string@lcdstring,c
  9497  01143A  0EFF               	movlw	high _disabled
  9498  01143C  6E41               	movwf	lcd_string@lcdstring+1,c
  9499  01143E  0E4A               	movlw	74
  9500  011440  6E42               	movwf	lcd_string@lcdline,c
  9501  011442  ECCC  F088         	call	_lcd_string	;wreg free
  9502                           
  9503                           ;lcd.c: 90:     }
  9504  011446  0012               	return	
  9505  011448                     l8180:
  9506  011448  0EAA               	movlw	low _enabled
  9507  01144A  6E40               	movwf	lcd_string@lcdstring,c
  9508  01144C  0EFF               	movlw	high _enabled
  9509  01144E  6E41               	movwf	lcd_string@lcdstring+1,c
  9510  011450  0E4A               	movlw	74
  9511  011452  6E42               	movwf	lcd_string@lcdline,c
  9512  011454  ECCC  F088         	call	_lcd_string	;wreg free
  9513  011458  0012               	return		;funcret
  9514  01145A                     __end_of_displ_sflags:
  9515                           	opt callstack 0
  9516                           
  9517 ;; *************** function _Reset_settings *****************
  9518 ;; Defined at:
  9519 ;;		line 618 in file "vend.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  chantimebits    2   18[COMRAM] unsigned short 
  9524 ;;  chanlinkbits    2   16[COMRAM] unsigned short 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      void 
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;Total ram usage:        6 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    6
  9541 ;; This function calls:
  9542 ;;		_DATAEE_WriteByte
  9543 ;;		_lcd_string
  9544 ;; This function is called by:
  9545 ;;		_Vend_setup
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text64
  9550  010E70                     __ptext64:
  9551                           	opt callstack 0
  9552  010E70                     _Reset_settings:
  9553                           	opt callstack 22
  9554                           
  9555                           ;incstack = 0
  9556  010E70  0E96               	movlw	low _chanresetmsg
  9557  010E72  6E40               	movwf	lcd_string@lcdstring,c
  9558  010E74  0EFE               	movlw	high _chanresetmsg
  9559  010E76  6E41               	movwf	lcd_string@lcdstring+1,c
  9560  010E78  0E00               	movlw	0
  9561  010E7A  6E42               	movwf	lcd_string@lcdline,c
  9562  010E7C  ECCC  F088         	call	_lcd_string	;wreg free
  9563  010E80  0E00               	movlw	0
  9564  010E82  6E48               	movwf	Reset_settings@chanlinkbits+1,c
  9565  010E84  0E1D               	movlw	29
  9566  010E86  6E47               	movwf	Reset_settings@chanlinkbits,c
  9567                           
  9568                           ;vend.c: 622:     while(chanlinkbits < chan1time)
  9569  010E88  D00A               	goto	l8864
  9570  010E8A                     l8860:
  9571                           
  9572                           ;vend.c: 623:     {;vend.c: 625:         DATAEE_WriteByte(chanlinkbits, 0x00);
  9573  010E8A  C047  F037         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
  9574  010E8E  C048  F038         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
  9575  010E92  0E00               	movlw	0
  9576  010E94  6E39               	movwf	DATAEE_WriteByte@bData,c
  9577  010E96  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9578                           
  9579                           ;vend.c: 626:         chanlinkbits++;
  9580  010E9A  4A47               	infsnz	Reset_settings@chanlinkbits,f,c
  9581  010E9C  2A48               	incf	Reset_settings@chanlinkbits+1,f,c
  9582  010E9E                     l8864:
  9583  010E9E  5048               	movf	Reset_settings@chanlinkbits+1,w,c
  9584  010EA0  E104               	bnz	u2740
  9585  010EA2  0E26               	movlw	38
  9586  010EA4  5C47               	subwf	Reset_settings@chanlinkbits,w,c
  9587  010EA6  A0D8               	btfss	status,0,c
  9588  010EA8  D7F0               	goto	l8860
  9589  010EAA                     u2740:
  9590  010EAA  0E00               	movlw	0
  9591  010EAC  6E4A               	movwf	Reset_settings@chantimebits+1,c
  9592  010EAE  0E26               	movlw	38
  9593  010EB0  6E49               	movwf	Reset_settings@chantimebits,c
  9594                           
  9595                           ;vend.c: 629:     while(chantimebits < nosentime)
  9596  010EB2  D00A               	goto	l8872
  9597  010EB4                     l8868:
  9598                           
  9599                           ;vend.c: 630:     {;vend.c: 632:         DATAEE_WriteByte(chantimebits, 0x08);
  9600  010EB4  C049  F037         	movff	Reset_settings@chantimebits,DATAEE_WriteByte@bAdd
  9601  010EB8  C04A  F038         	movff	Reset_settings@chantimebits+1,DATAEE_WriteByte@bAdd+1
  9602  010EBC  0E08               	movlw	8
  9603  010EBE  6E39               	movwf	DATAEE_WriteByte@bData,c
  9604  010EC0  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9605                           
  9606                           ;vend.c: 633:         chantimebits++;
  9607  010EC4  4A49               	infsnz	Reset_settings@chantimebits,f,c
  9608  010EC6  2A4A               	incf	Reset_settings@chantimebits+1,f,c
  9609  010EC8                     l8872:
  9610  010EC8  504A               	movf	Reset_settings@chantimebits+1,w,c
  9611  010ECA  E104               	bnz	u2750
  9612  010ECC  0E2E               	movlw	46
  9613  010ECE  5C49               	subwf	Reset_settings@chantimebits,w,c
  9614  010ED0  A0D8               	btfss	status,0,c
  9615  010ED2  D7F0               	goto	l8868
  9616  010ED4                     u2750:
  9617  010ED4  0E00               	movlw	0
  9618  010ED6  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
  9619  010ED8  0E25               	movlw	37
  9620  010EDA  6E37               	movwf	DATAEE_WriteByte@bAdd,c
  9621  010EDC  0E05               	movlw	5
  9622  010EDE  6E39               	movwf	DATAEE_WriteByte@bData,c
  9623  010EE0  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9624                           
  9625                           ;vend.c: 636:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  9626  010EE4  0E1F               	movlw	31
  9627  010EE6  6E46               	movwf	(??_Reset_settings+1)& (0+255),c
  9628  010EE8  0E71               	movlw	113
  9629  010EEA  6E45               	movwf	??_Reset_settings& (0+255),c
  9630  010EEC  0E1E               	movlw	30
  9631  010EEE                     u3797:
  9632  010EEE  2EE8               	decfsz	wreg,f,c
  9633  010EF0  D7FE               	bra	u3797
  9634  010EF2  2E45               	decfsz	??_Reset_settings& (0+255),f,c
  9635  010EF4  D7FC               	bra	u3797
  9636  010EF6  2E46               	decfsz	(??_Reset_settings+1)& (0+255),f,c
  9637  010EF8  D7FA               	bra	u3797
  9638  010EFA  D000               	nop2	
  9639  010EFC  0012               	return		;funcret
  9640  010EFE                     __end_of_Reset_settings:
  9641                           	opt callstack 0
  9642                           
  9643 ;; *************** function _Init_vendmem *****************
  9644 ;; Defined at:
  9645 ;;		line 9 in file "vend.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  chanlink        2    4[COMRAM] PTR unsigned char 
  9650 ;;		 -> chanlink1(1), 
  9651 ;;  chanlinkbits    2    2[COMRAM] unsigned short 
  9652 ;;  i               1    6[COMRAM] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;Total ram usage:        5 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    1
  9669 ;; This function calls:
  9670 ;;		_DATAEE_ReadByte
  9671 ;; This function is called by:
  9672 ;;		_vend_init
  9673 ;;		_Vend_setup
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text65
  9678  011292                     __ptext65:
  9679                           	opt callstack 0
  9680  011292                     _Init_vendmem:
  9681                           	opt callstack 28
  9682                           
  9683                           ;incstack = 0
  9684  011292  0E00               	movlw	0
  9685  011294  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  9686  011296  0E25               	movlw	37
  9687  011298  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  9688  01129A  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  9689  01129E  6E19               	movwf	_senschk,c
  9690  0112A0  0E00               	movlw	0
  9691  0112A2  6E3A               	movwf	Init_vendmem@chanlinkbits+1,c
  9692  0112A4  0E1D               	movlw	29
  9693  0112A6  6E39               	movwf	Init_vendmem@chanlinkbits,c
  9694                           
  9695                           ;vend.c: 15:     uint8_t *chanlink = ((uint8_t*) &chanlink1);
  9696  0112A8  0E03               	movlw	3
  9697  0112AA  6E3B               	movwf	Init_vendmem@chanlink,c
  9698  0112AC  0E00               	movlw	0
  9699  0112AE  6E3C               	movwf	Init_vendmem@chanlink+1,c
  9700                           
  9701                           ;vend.c: 16:     char i = 0;
  9702  0112B0  0E00               	movlw	0
  9703  0112B2  6E3D               	movwf	Init_vendmem@i,c
  9704                           
  9705                           ;vend.c: 17:     while(i < 8)
  9706  0112B4  D010               	goto	l8708
  9707  0112B6                     l8704:
  9708                           
  9709                           ;vend.c: 18:     {;vend.c: 19:        chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
  9710  0112B6  503D               	movf	Init_vendmem@i,w,c
  9711  0112B8  243B               	addwf	Init_vendmem@chanlink,w,c
  9712  0112BA  6ED9               	movwf	fsr2l,c
  9713  0112BC  0E00               	movlw	0
  9714  0112BE  203C               	addwfc	Init_vendmem@chanlink+1,w,c
  9715  0112C0  6EDA               	movwf	fsr2h,c
  9716  0112C2  503D               	movf	Init_vendmem@i,w,c
  9717  0112C4  2439               	addwf	Init_vendmem@chanlinkbits,w,c
  9718  0112C6  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  9719  0112C8  0E00               	movlw	0
  9720  0112CA  203A               	addwfc	Init_vendmem@chanlinkbits+1,w,c
  9721  0112CC  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
  9722  0112CE  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  9723  0112D2  6EDF               	movwf	indf2,c
  9724                           
  9725                           ;vend.c: 20:        i++;
  9726  0112D4  2A3D               	incf	Init_vendmem@i,f,c
  9727  0112D6                     l8708:
  9728                           
  9729                           ;vend.c: 17:     while(i < 8)
  9730  0112D6  0E07               	movlw	7
  9731  0112D8  643D               	cpfsgt	Init_vendmem@i,c
  9732  0112DA  D7ED               	goto	l8704
  9733                           
  9734                           ;vend.c: 23:     i = 0;
  9735  0112DC  0E00               	movlw	0
  9736  0112DE  6E3D               	movwf	Init_vendmem@i,c
  9737                           
  9738                           ;vend.c: 24:     while(i < 8)
  9739  0112E0  D010               	goto	l8716
  9740  0112E2                     l8712:
  9741  0112E2  0E0B               	movlw	low _pricevend
  9742  0112E4  243D               	addwf	Init_vendmem@i,w,c
  9743  0112E6  6ED9               	movwf	fsr2l,c
  9744  0112E8  6ADA               	clrf	fsr2h,c
  9745  0112EA  0E00               	movlw	high _pricevend
  9746  0112EC  22DA               	addwfc	fsr2h,f,c
  9747  0112EE  0E0F               	movlw	15
  9748  0112F0  243D               	addwf	Init_vendmem@i,w,c
  9749  0112F2  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  9750  0112F4  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  9751  0112F6  0E00               	movlw	0
  9752  0112F8  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  9753  0112FA  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  9754  0112FE  6EDF               	movwf	indf2,c
  9755                           
  9756                           ;vend.c: 27:         i++;
  9757  011300  2A3D               	incf	Init_vendmem@i,f,c
  9758  011302                     l8716:
  9759                           
  9760                           ;vend.c: 24:     while(i < 8)
  9761  011302  0E07               	movlw	7
  9762  011304  643D               	cpfsgt	Init_vendmem@i,c
  9763  011306  D7ED               	goto	l8712
  9764  011308  0012               	return	
  9765  01130A                     __end_of_Init_vendmem:
  9766                           	opt callstack 0
  9767                           
  9768 ;; *************** function _Clear_Totals *****************
  9769 ;; Defined at:
  9770 ;;		line 228 in file "vend.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  eeaddress       2    4[COMRAM] unsigned short 
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;Total ram usage:        2 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    1
  9791 ;; This function calls:
  9792 ;;		_DATAEE_WriteByte
  9793 ;; This function is called by:
  9794 ;;		_Vend_setup
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text66
  9799  011F04                     __ptext66:
  9800                           	opt callstack 0
  9801  011F04                     _Clear_Totals:
  9802                           	opt callstack 27
  9803                           
  9804                           ;incstack = 0
  9805  011F04  0E00               	movlw	0
  9806  011F06  6E3C               	movwf	Clear_Totals@eeaddress+1,c
  9807  011F08  0E02               	movlw	2
  9808  011F0A  6E3B               	movwf	Clear_Totals@eeaddress,c
  9809                           
  9810                           ;vend.c: 231:     while(eeaddress < 0x0C)
  9811  011F0C  D00A               	goto	l8734
  9812  011F0E                     l8730:
  9813                           
  9814                           ;vend.c: 232:     {;vend.c: 233:         DATAEE_WriteByte(eeaddress, 0x00);
  9815  011F0E  C03B  F037         	movff	Clear_Totals@eeaddress,DATAEE_WriteByte@bAdd
  9816  011F12  C03C  F038         	movff	Clear_Totals@eeaddress+1,DATAEE_WriteByte@bAdd+1
  9817  011F16  0E00               	movlw	0
  9818  011F18  6E39               	movwf	DATAEE_WriteByte@bData,c
  9819  011F1A  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
  9820                           
  9821                           ;vend.c: 234:         eeaddress++;
  9822  011F1E  4A3B               	infsnz	Clear_Totals@eeaddress,f,c
  9823  011F20  2A3C               	incf	Clear_Totals@eeaddress+1,f,c
  9824  011F22                     l8734:
  9825                           
  9826                           ;vend.c: 231:     while(eeaddress < 0x0C)
  9827  011F22  503C               	movf	Clear_Totals@eeaddress+1,w,c
  9828  011F24  E104               	bnz	u2590
  9829  011F26  0E0C               	movlw	12
  9830  011F28  5C3B               	subwf	Clear_Totals@eeaddress,w,c
  9831  011F2A  A0D8               	btfss	status,0,c
  9832  011F2C  D7F0               	goto	l8730
  9833  011F2E                     u2590:
  9834  011F2E  00FF               	reset		;# 
  9835  011F30  0012               	return		;funcret
  9836  011F32                     __end_of_Clear_Totals:
  9837                           	opt callstack 0
  9838                           
  9839 ;; *************** function _Chan_link *****************
  9840 ;; Defined at:
  9841 ;;		line 507 in file "vend.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;		None
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;Total ram usage:        2 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    8
  9862 ;; This function calls:
  9863 ;;		_Link_chan
  9864 ;;		_Read_Service
  9865 ;;		_butindb
  9866 ;;		_get_channel
  9867 ;;		_lcd_string
  9868 ;; This function is called by:
  9869 ;;		_Vend_setup
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text67
  9874  0118A2                     __ptext67:
  9875                           	opt callstack 0
  9876  0118A2                     _Chan_link:
  9877                           	opt callstack 20
  9878                           
  9879                           ;incstack = 0
  9880  0118A2  0E6D               	movlw	low _chanlinkm
  9881  0118A4  6E40               	movwf	lcd_string@lcdstring,c
  9882  0118A6  0EFD               	movlw	high _chanlinkm
  9883  0118A8  6E41               	movwf	lcd_string@lcdstring+1,c
  9884  0118AA  0E00               	movlw	0
  9885  0118AC  6E42               	movwf	lcd_string@lcdline,c
  9886  0118AE  ECCC  F088         	call	_lcd_string	;wreg free
  9887                           
  9888                           ;vend.c: 510:     venflags.chanlink = 1;
  9889  0118B2  8614               	bsf	_venflags+1,3,c
  9890                           
  9891                           ;vend.c: 511:     while(venflags.chanlink)
  9892  0118B4  D01B               	goto	l2252
  9893  0118B6                     l8822:
  9894                           
  9895                           ;vend.c: 512:     {;vend.c: 513:         buttons = butindb();
  9896  0118B6  ECCD  F08D         	call	_butindb	;wreg free
  9897  0118BA  6E22               	movwf	_buttons,c	;volatile
  9898                           
  9899                           ;vend.c: 514:         if(buttons != 0x00)
  9900  0118BC  5022               	movf	_buttons,w,c	;volatile
  9901  0118BE  B4D8               	btfsc	status,2,c
  9902  0118C0  D010               	goto	l8830
  9903                           
  9904                           ;vend.c: 515:         {;vend.c: 516:             Link_chan(get_channel(buttons));
  9905  0118C2  5022               	movf	_buttons,w,c	;volatile
  9906  0118C4  EC66  F090         	call	_get_channel
  9907  0118C8  EC7F  F087         	call	_Link_chan
  9908                           
  9909                           ;vend.c: 517:             _delay((unsigned long)((1000)*(12000000/4000.0)));
  9910  0118CC  0E10               	movlw	16
  9911  0118CE  6E4C               	movwf	(??_Chan_link+1)& (0+255),c
  9912  0118D0  0E39               	movlw	57
  9913  0118D2  6E4B               	movwf	??_Chan_link& (0+255),c
  9914  0118D4  0E0E               	movlw	14
  9915  0118D6                     u3807:
  9916  0118D6  2EE8               	decfsz	wreg,f,c
  9917  0118D8  D7FE               	bra	u3807
  9918  0118DA  2E4B               	decfsz	??_Chan_link& (0+255),f,c
  9919  0118DC  D7FC               	bra	u3807
  9920  0118DE  2E4C               	decfsz	(??_Chan_link+1)& (0+255),f,c
  9921  0118E0  D7FA               	bra	u3807
  9922  0118E2                     l8830:
  9923                           
  9924                           ;vend.c: 519:         if(Read_Service() == 0x00)
  9925  0118E2  EC90  F090         	call	_Read_Service	;wreg free
  9926  0118E6  0900               	iorlw	0
  9927  0118E8  B4D8               	btfsc	status,2,c
  9928                           
  9929                           ;vend.c: 520:         {;vend.c: 521:             venflags.chanlink = 0;
  9930  0118EA  9614               	bcf	_venflags+1,3,c
  9931  0118EC                     l2252:
  9932                           
  9933                           ;vend.c: 511:     while(venflags.chanlink)
  9934  0118EC  A614               	btfss	_venflags+1,3,c
  9935  0118EE  0012               	return	
  9936  0118F0  D7E2               	goto	l8822
  9937  0118F2                     __end_of_Chan_link:
  9938                           	opt callstack 0
  9939                           
  9940 ;; *************** function _Link_chan *****************
  9941 ;; Defined at:
  9942 ;;		line 528 in file "vend.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  channel         1    wreg     unsigned char 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  channel         1   18[COMRAM] unsigned char 
  9947 ;;  linkflags       1   19[COMRAM] unsigned char 
  9948 ;;  chanbit         1    0        unsigned char 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;Total ram usage:        3 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    7
  9965 ;; This function calls:
  9966 ;;		_DATAEE_ReadByte
  9967 ;;		_DATAEE_WriteByte
  9968 ;;		_Read_Service
  9969 ;;		_butindb
  9970 ;;		_displ_lflags
  9971 ;;		_lcd_string
  9972 ;; This function is called by:
  9973 ;;		_Chan_link
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text68
  9978  010EFE                     __ptext68:
  9979                           	opt callstack 0
  9980  010EFE                     _Link_chan:
  9981                           	opt callstack 20
  9982                           
  9983                           ;incstack = 0
  9984                           ;Link_chan@channel stored from wreg
  9985  010EFE  6E49               	movwf	Link_chan@channel,c
  9986                           
  9987                           ;vend.c: 528: void Link_chan(uint8_t channel);vend.c: 529: {;vend.c: 530:     venflags.l
      +                          inkchan = 1;
  9988  010F00  8015               	bsf	_venflags+2,0,c
  9989  010F02  0E1D               	movlw	29
  9990  010F04  2449               	addwf	Link_chan@channel,w,c
  9991  010F06  6E37               	movwf	DATAEE_ReadByte@bAdd,c
  9992  010F08  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
  9993  010F0A  0E00               	movlw	0
  9994  010F0C  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
  9995  010F0E  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
  9996  010F12  6E4A               	movwf	Link_chan@linkflags,c
  9997                           
  9998                           ;vend.c: 533:     displ_lflags(channel, linkflags);
  9999  010F14  C04A  F045         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 10000  010F18  5049               	movf	Link_chan@channel,w,c
 10001  010F1A  ECC6  F08A         	call	_displ_lflags
 10002                           
 10003                           ;vend.c: 534:     while(venflags.linkchan)
 10004  010F1E  D031               	goto	u2300
 10005  010F20                     l8448:
 10006                           
 10007                           ;vend.c: 535:     {;vend.c: 536:         buttons = butindb();
 10008  010F20  ECCD  F08D         	call	_butindb	;wreg free
 10009  010F24  6E22               	movwf	_buttons,c	;volatile
 10010                           
 10011                           ;vend.c: 537:         if(buttons != 0x00)
 10012  010F26  5022               	movf	_buttons,w,c	;volatile
 10013  010F28  B4D8               	btfsc	status,2,c
 10014  010F2A  D026               	goto	l8466
 10015                           
 10016                           ;vend.c: 538:         {;vend.c: 539:             if(buttons && linkflags)
 10017  010F2C  5022               	movf	_buttons,w,c	;volatile
 10018  010F2E  B4D8               	btfsc	status,2,c
 10019  010F30  D007               	goto	l8458
 10020  010F32  504A               	movf	Link_chan@linkflags,w,c
 10021  010F34  B4D8               	btfsc	status,2,c
 10022  010F36  D004               	goto	l8458
 10023                           
 10024                           ;vend.c: 540:             {;vend.c: 542:                 linkflags = linkflags & ~button
      +                          s;
 10025  010F38  5022               	movf	_buttons,w,c	;volatile
 10026  010F3A  0AFF               	xorlw	255
 10027  010F3C  144A               	andwf	Link_chan@linkflags,w,c
 10028  010F3E  D002               	goto	L14
 10029  010F40                     l8458:
 10030                           
 10031                           ;vend.c: 545:             {;vend.c: 547:                 linkflags = linkflags | buttons
      +                          ;
 10032  010F40  504A               	movf	Link_chan@linkflags,w,c
 10033  010F42  1022               	iorwf	_buttons,w,c	;volatile
 10034  010F44                     L14:
 10035  010F44  6E4A               	movwf	Link_chan@linkflags,c
 10036  010F46  0E1D               	movlw	29
 10037  010F48  2449               	addwf	Link_chan@channel,w,c
 10038  010F4A  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 10039  010F4C  6A38               	clrf	DATAEE_WriteByte@bAdd+1,c
 10040  010F4E  0E00               	movlw	0
 10041  010F50  2238               	addwfc	DATAEE_WriteByte@bAdd+1,f,c
 10042  010F52  C04A  F039         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
 10043  010F56  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 10044                           
 10045                           ;vend.c: 550:             displ_lflags(channel, linkflags);
 10046  010F5A  C04A  F045         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 10047  010F5E  5049               	movf	Link_chan@channel,w,c
 10048  010F60  ECC6  F08A         	call	_displ_lflags
 10049  010F64  D009               	goto	l8466
 10050  010F66                     l2266:
 10051                           
 10052                           ;vend.c: 553:         {;vend.c: 554:             venflags.linkchan = 0;
 10053  010F66  9015               	bcf	_venflags+2,0,c
 10054  010F68  0E6D               	movlw	low _chanlinkm
 10055  010F6A  6E40               	movwf	lcd_string@lcdstring,c
 10056  010F6C  0EFD               	movlw	high _chanlinkm
 10057  010F6E  6E41               	movwf	lcd_string@lcdstring+1,c
 10058  010F70  0E00               	movlw	0
 10059  010F72  6E42               	movwf	lcd_string@lcdline,c
 10060  010F74  ECCC  F088         	call	_lcd_string	;wreg free
 10061  010F78                     l8466:
 10062                           
 10063                           ;vend.c: 552:         while(Read_Service() == 0x00)
 10064  010F78  EC90  F090         	call	_Read_Service	;wreg free
 10065  010F7C  0900               	iorlw	0
 10066  010F7E  B4D8               	btfsc	status,2,c
 10067  010F80  D7F2               	goto	l2266
 10068  010F82                     u2300:
 10069                           
 10070                           ;vend.c: 534:     while(venflags.linkchan)
 10071                           
 10072                           ;vend.c: 557:     }
 10073  010F82  A015               	btfss	_venflags+2,0,c
 10074  010F84  0012               	return	
 10075  010F86  D7CC               	goto	l8448
 10076  010F88                     __end_of_Link_chan:
 10077                           	opt callstack 0
 10078                           
 10079 ;; *************** function _displ_lflags *****************
 10080 ;; Defined at:
 10081 ;;		line 58 in file "lcd.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  chanel          1    wreg     unsigned char 
 10084 ;;  linkflgs        1   14[COMRAM] unsigned char 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  chanel          1   15[COMRAM] unsigned char 
 10087 ;;  lchan           1   16[COMRAM] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10100 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10101 ;;Total ram usage:        3 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    6
 10104 ;; This function calls:
 10105 ;;		_lcd_dispadd
 10106 ;;		_lcd_string
 10107 ;;		_lcd_writeC
 10108 ;; This function is called by:
 10109 ;;		_Link_chan
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           	psect	text69
 10114  01158C                     __ptext69:
 10115                           	opt callstack 0
 10116  01158C                     _displ_lflags:
 10117                           	opt callstack 20
 10118                           
 10119                           ;incstack = 0
 10120                           ;displ_lflags@chanel stored from wreg
 10121  01158C  6E46               	movwf	displ_lflags@chanel,c
 10122  01158E  0E69               	movlw	low _chanmsg
 10123  011590  6E40               	movwf	lcd_string@lcdstring,c
 10124  011592  0EFF               	movlw	high _chanmsg
 10125  011594  6E41               	movwf	lcd_string@lcdstring+1,c
 10126  011596  0E00               	movlw	0
 10127  011598  6E42               	movwf	lcd_string@lcdline,c
 10128  01159A  ECCC  F088         	call	_lcd_string	;wreg free
 10129                           
 10130                           ;lcd.c: 61:     lcd_writeC(++chanel | 0x30);
 10131  01159E  2A46               	incf	displ_lflags@chanel,f,c
 10132  0115A0  5046               	movf	displ_lflags@chanel,w,c
 10133  0115A2  0930               	iorlw	48
 10134  0115A4  EC9E  F08C         	call	_lcd_writeC
 10135                           
 10136                           ;lcd.c: 62:     uint8_t lchan = 1;
 10137  0115A8  0E01               	movlw	1
 10138  0115AA  6E47               	movwf	displ_lflags@lchan,c
 10139  0115AC  0E75               	movlw	low _linkmsg
 10140  0115AE  6E40               	movwf	lcd_string@lcdstring,c
 10141  0115B0  0EFF               	movlw	high _linkmsg
 10142  0115B2  6E41               	movwf	lcd_string@lcdstring+1,c
 10143  0115B4  0E40               	movlw	64
 10144  0115B6  6E42               	movwf	lcd_string@lcdline,c
 10145  0115B8  ECCC  F088         	call	_lcd_string	;wreg free
 10146  0115BC  0E14               	movlw	20
 10147  0115BE  ECA8  F090         	call	_lcd_dispadd
 10148                           
 10149                           ;lcd.c: 66:     while(lchan < 0x09)
 10150  0115C2  D010               	goto	l8166
 10151  0115C4                     l1504:
 10152                           
 10153                           ;lcd.c: 67:     {;lcd.c: 68:         if(linkflgs & 0x01)
 10154  0115C4  A045               	btfss	displ_lflags@linkflgs,0,c
 10155  0115C6  D00A               	goto	l8162
 10156                           
 10157                           ;lcd.c: 69:         {;lcd.c: 70:             lcd_writeC(lchan | 0x30);
 10158  0115C8  5047               	movf	displ_lflags@lchan,w,c
 10159  0115CA  0930               	iorlw	48
 10160  0115CC  EC9E  F08C         	call	_lcd_writeC
 10161                           
 10162                           ;lcd.c: 71:             lcd_writeC(',');
 10163  0115D0  0E2C               	movlw	44
 10164  0115D2  EC9E  F08C         	call	_lcd_writeC
 10165                           
 10166                           ;lcd.c: 72:             lcd_writeC(' ');
 10167  0115D6  0E20               	movlw	32
 10168  0115D8  EC9E  F08C         	call	_lcd_writeC
 10169  0115DC                     l8162:
 10170                           
 10171                           ;lcd.c: 74:         lchan++;
 10172  0115DC  2A47               	incf	displ_lflags@lchan,f,c
 10173                           
 10174                           ;lcd.c: 75:         linkflgs = linkflgs >> 1;
 10175  0115DE  90D8               	bcf	status,0,c
 10176  0115E0  3045               	rrcf	displ_lflags@linkflgs,w,c
 10177  0115E2  6E45               	movwf	displ_lflags@linkflgs,c
 10178  0115E4                     l8166:
 10179                           
 10180                           ;lcd.c: 66:     while(lchan < 0x09)
 10181  0115E4  0E08               	movlw	8
 10182  0115E6  6447               	cpfsgt	displ_lflags@lchan,c
 10183  0115E8  D7ED               	goto	l1504
 10184  0115EA  0012               	return	
 10185  0115EC                     __end_of_displ_lflags:
 10186                           	opt callstack 0
 10187                           
 10188 ;; *************** function _Read_Service *****************
 10189 ;; Defined at:
 10190 ;;		line 306 in file "vend.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  senval          1    0[COMRAM] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      unsigned char 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;Total ram usage:        1 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_price_set
 10214 ;;		_Vend_settime
 10215 ;;		_Chan_link
 10216 ;;		_Link_chan
 10217 ;;		_Sens_off
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text70
 10222  012120                     __ptext70:
 10223                           	opt callstack 0
 10224  012120                     _Read_Service:
 10225                           	opt callstack 28
 10226                           
 10227                           ;vend.c: 308:     DAC1CON1 = 0x01;
 10228                           
 10229                           ;incstack = 0
 10230  012120  0E01               	movlw	1
 10231  012122  010F               	movlb	15	; () banked
 10232  012124  6F34               	movwf	52,b	;volatile
 10233                           
 10234                           ; BSR set to: 15
 10235                           ;vend.c: 309:     _delay((unsigned long)((50)*(12000000/4000000.0)));
 10236  012126  0E32               	movlw	50
 10237  012128                     u3817:
 10238  012128  2EE8               	decfsz	wreg,f,c
 10239  01212A  D7FE               	bra	u3817
 10240                           
 10241                           ;vend.c: 310:     uint8_t senval = CMOUT;
 10242  01212C  CF3D F037          	movff	3901,Read_Service@senval	;volatile
 10243                           
 10244                           ;vend.c: 311:     DAC1CON1 = sensorval;
 10245  012130  C020  FF34         	movff	_sensorval,3892	;volatile
 10246                           
 10247                           ;vend.c: 312:     return senval;
 10248  012134  5037               	movf	Read_Service@senval,w,c
 10249  012136  0012               	return		;funcret
 10250  012138                     __end_of_Read_Service:
 10251                           	opt callstack 0
 10252                           
 10253 ;; *************** function _Sensor_set *****************
 10254 ;; Defined at:
 10255 ;;		line 315 in file "vend.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;		None
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  dacpos          1   29[COMRAM] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1    wreg      void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;Total ram usage:        3 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    7
 10276 ;; This function calls:
 10277 ;;		_butindb
 10278 ;;		_displ_sens
 10279 ;;		_lcd_string
 10280 ;; This function is called by:
 10281 ;;		_enter_service
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text71
 10286  0109C6                     __ptext71:
 10287                           	opt callstack 0
 10288  0109C6                     _Sensor_set:
 10289                           	opt callstack 22
 10290                           
 10291                           ;vend.c: 317:     mdbflags.endis = 1;
 10292                           
 10293                           ;incstack = 0
 10294  0109C6  8C29               	bsf	_mdbflags,6,c
 10295  0109C8  0E81               	movlw	low _sensmsg
 10296  0109CA  6E40               	movwf	lcd_string@lcdstring,c
 10297  0109CC  0EFF               	movlw	high _sensmsg
 10298  0109CE  6E41               	movwf	lcd_string@lcdstring+1,c
 10299  0109D0  0E00               	movlw	0
 10300  0109D2  6E42               	movwf	lcd_string@lcdline,c
 10301  0109D4  ECCC  F088         	call	_lcd_string	;wreg free
 10302                           
 10303                           ;vend.c: 321:     senspos = bflag + 2;
 10304  0109D8  5031               	movf	_bflag,w,c
 10305  0109DA  0F02               	addlw	2
 10306  0109DC  6E1F               	movwf	_senspos,c	;volatile
 10307  0109DE  0E4F               	movlw	low _dacmsg
 10308  0109E0  6E40               	movwf	lcd_string@lcdstring,c
 10309  0109E2  0EFF               	movlw	high _dacmsg
 10310  0109E4  6E41               	movwf	lcd_string@lcdstring+1,c
 10311  0109E6  0E40               	movlw	64
 10312  0109E8  6E42               	movwf	lcd_string@lcdline,c
 10313  0109EA  ECCC  F088         	call	_lcd_string	;wreg free
 10314                           
 10315                           ;vend.c: 325:     uint8_t dacpos = bflag + 2;
 10316  0109EE  5031               	movf	_bflag,w,c
 10317  0109F0  0F02               	addlw	2
 10318  0109F2  6E54               	movwf	Sensor_set@dacpos,c
 10319                           
 10320                           ;vend.c: 326:     displ_sens(senspos, dacpos);
 10321  0109F4  C054  F050         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 10322  0109F8  501F               	movf	_senspos,w,c	;volatile
 10323  0109FA  EC94  F08A         	call	_displ_sens
 10324                           
 10325                           ;vend.c: 327:     while(mdbflags.endis)
 10326  0109FE  D03D               	goto	l9178
 10327  010A00                     l9156:
 10328                           
 10329                           ;vend.c: 328:     {;vend.c: 329:         buttons = butindb();
 10330  010A00  ECCD  F08D         	call	_butindb	;wreg free
 10331  010A04  6E22               	movwf	_buttons,c	;volatile
 10332                           
 10333                           ;vend.c: 330:         switch(buttons)
 10334  010A06  D020               	goto	l9174
 10335  010A08                     l9158:
 10336  010A08  5020               	movf	_sensorval,w,c	;volatile
 10337  010A0A  0B1F               	andlw	31
 10338  010A0C  010F               	movlb	15	; () banked
 10339  010A0E  6F34               	movwf	52,b	;volatile
 10340                           
 10341                           ; BSR set to: 15
 10342  010A10  2A20               	incf	_sensorval,f,c	;volatile
 10343                           
 10344                           ; BSR set to: 15
 10345                           ;vend.c: 333:             displ_sens(senspos, dacpos);
 10346  010A12  C054  F050         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 10347  010A16  501F               	movf	_senspos,w,c	;volatile
 10348  010A18  EC94  F08A         	call	_displ_sens
 10349                           
 10350                           ;vend.c: 334:             break;
 10351  010A1C  D026               	goto	l2183
 10352  010A1E                     l9164:
 10353  010A1E  5020               	movf	_sensorval,w,c	;volatile
 10354  010A20  0B1F               	andlw	31
 10355  010A22  010F               	movlb	15	; () banked
 10356  010A24  6F34               	movwf	52,b	;volatile
 10357                           
 10358                           ; BSR set to: 15
 10359  010A26  0620               	decf	_sensorval,f,c	;volatile
 10360                           
 10361                           ; BSR set to: 15
 10362                           ;vend.c: 336:             displ_sens(senspos, dacpos);
 10363  010A28  C054  F050         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 10364  010A2C  501F               	movf	_senspos,w,c	;volatile
 10365  010A2E  EC94  F08A         	call	_displ_sens
 10366                           
 10367                           ;vend.c: 337:             break;
 10368  010A32  D01B               	goto	l2183
 10369  010A34                     l2185:
 10370  010A34  9C29               	bcf	_mdbflags,6,c
 10371  010A36  0E5C               	movlw	low _servmsg
 10372  010A38  6E40               	movwf	lcd_string@lcdstring,c
 10373  010A3A  0EFC               	movlw	high _servmsg
 10374  010A3C  6E41               	movwf	lcd_string@lcdstring+1,c
 10375  010A3E  0E00               	movlw	0
 10376  010A40  6E42               	movwf	lcd_string@lcdline,c
 10377  010A42  ECCC  F088         	call	_lcd_string	;wreg free
 10378                           
 10379                           ;vend.c: 340:             break;
 10380  010A46  D011               	goto	l2183
 10381  010A48                     l9174:
 10382  010A48  5022               	movf	_buttons,w,c	;volatile
 10383  010A4A  6E52               	movwf	??_Sensor_set& (0+255),c
 10384  010A4C  6A53               	clrf	(??_Sensor_set+1)& (0+255),c
 10385                           
 10386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10387                           ; Switch size 1, requested type "simple"
 10388                           ; Number of cases is 1, Range of values is 0 to 0
 10389                           ; switch strategies available:
 10390                           ; Name         Instructions Cycles
 10391                           ; simple_byte            4     3 (average)
 10392                           ;	Chosen strategy is simple_byte
 10393  010A4E  5053               	movf	??_Sensor_set+1,w,c
 10394  010A50  0A00               	xorlw	0	; case 0
 10395  010A52  A4D8               	btfss	status,2,c
 10396  010A54  D00A               	goto	l2183
 10397                           
 10398                           ; Switch size 1, requested type "simple"
 10399                           ; Number of cases is 3, Range of values is 1 to 128
 10400                           ; switch strategies available:
 10401                           ; Name         Instructions Cycles
 10402                           ; simple_byte           10     6 (average)
 10403                           ;	Chosen strategy is simple_byte
 10404  010A56  5052               	movf	??_Sensor_set,w,c
 10405  010A58  0A01               	xorlw	1	; case 1
 10406  010A5A  B4D8               	btfsc	status,2,c
 10407  010A5C  D7D5               	goto	l9158
 10408  010A5E  0A03               	xorlw	3	; case 2
 10409  010A60  B4D8               	btfsc	status,2,c
 10410  010A62  D7DD               	goto	l9164
 10411  010A64  0A82               	xorlw	130	; case 128
 10412  010A66  B4D8               	btfsc	status,2,c
 10413  010A68  D7E5               	goto	l2185
 10414  010A6A                     l2183:
 10415                           
 10416                           ;vend.c: 342:         if(PIR4bits.TMR3IF)
 10417  010A6A  010E               	movlb	14	; () banked
 10418  010A6C  A5CE               	btfss	206,2,b	;volatile
 10419  010A6E  D005               	goto	l9178
 10420                           
 10421                           ; BSR set to: 14
 10422                           ;vend.c: 343:         {;vend.c: 344:             displ_sens(senspos, dacpos);
 10423  010A70  C054  F050         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 10424  010A74  501F               	movf	_senspos,w,c	;volatile
 10425  010A76  EC94  F08A         	call	_displ_sens
 10426  010A7A                     l9178:
 10427                           
 10428                           ;vend.c: 327:     while(mdbflags.endis)
 10429  010A7A  AC29               	btfss	_mdbflags,6,c
 10430  010A7C  0012               	return	
 10431  010A7E  D7C0               	goto	l9156
 10432  010A80                     __end_of_Sensor_set:
 10433                           	opt callstack 0
 10434                           
 10435 ;; *************** function _displ_sens *****************
 10436 ;; Defined at:
 10437 ;;		line 41 in file "lcd.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  smsgpos         1    wreg     unsigned char 
 10440 ;;  dmsgpos         1   25[COMRAM] unsigned char 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  smsgpos         1   26[COMRAM] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10452 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10456 ;;Total ram usage:        2 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    6
 10459 ;; This function calls:
 10460 ;;		_CMP1_GetOutputStatus
 10461 ;;		_DATAEE_WriteByte
 10462 ;;		_displ_hex
 10463 ;;		_lcd_dispadd
 10464 ;;		_lcd_string
 10465 ;; This function is called by:
 10466 ;;		_Sensor_set
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text72
 10471  011528                     __ptext72:
 10472                           	opt callstack 0
 10473  011528                     _displ_sens:
 10474                           	opt callstack 22
 10475                           
 10476                           ;incstack = 0
 10477                           ;displ_sens@smsgpos stored from wreg
 10478  011528  6E51               	movwf	displ_sens@smsgpos,c
 10479                           
 10480                           ;lcd.c: 41: void displ_sens(uint8_t smsgpos, uint8_t dmsgpos);lcd.c: 42: {;lcd.c: 43:   
      +                            if(CMP1_GetOutputStatus())
 10481  01152A  EC33  F091         	call	_CMP1_GetOutputStatus	;wreg free
 10482  01152E  0900               	iorlw	0
 10483  011530  B4D8               	btfsc	status,2,c
 10484  011532  D009               	goto	l8680
 10485                           
 10486                           ;lcd.c: 44:     {;lcd.c: 45:         lcd_string(offmsg, smsgpos);
 10487  011534  0EF5               	movlw	low _offmsg
 10488  011536  6E40               	movwf	lcd_string@lcdstring,c
 10489  011538  0EFF               	movlw	high _offmsg
 10490  01153A  6E41               	movwf	lcd_string@lcdstring+1,c
 10491  01153C  C051  F042         	movff	displ_sens@smsgpos,lcd_string@lcdline
 10492  011540  ECCC  F088         	call	_lcd_string	;wreg free
 10493                           
 10494                           ;lcd.c: 46:     }
 10495  011544  D008               	goto	l8682
 10496  011546                     l8680:
 10497                           
 10498                           ;lcd.c: 48:     {;lcd.c: 49:         lcd_string(onmsg, smsgpos);
 10499  011546  0EF9               	movlw	low _onmsg
 10500  011548  6E40               	movwf	lcd_string@lcdstring,c
 10501  01154A  0EFF               	movlw	high _onmsg
 10502  01154C  6E41               	movwf	lcd_string@lcdstring+1,c
 10503  01154E  C051  F042         	movff	displ_sens@smsgpos,lcd_string@lcdline
 10504  011552  ECCC  F088         	call	_lcd_string	;wreg free
 10505  011556                     l8682:
 10506  011556  0E00               	movlw	0
 10507  011558  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
 10508  01155A  0E19               	movlw	25
 10509  01155C  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 10510  01155E  C020  F039         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
 10511  011562  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 10512                           
 10513                           ;lcd.c: 52:     lcd_string(clrmsg, dmsgpos);
 10514  011566  0E96               	movlw	low _clrmsg
 10515  011568  6E40               	movwf	lcd_string@lcdstring,c
 10516  01156A  0EFF               	movlw	high _clrmsg
 10517  01156C  6E41               	movwf	lcd_string@lcdstring+1,c
 10518  01156E  C050  F042         	movff	displ_sens@dmsgpos,lcd_string@lcdline
 10519  011572  ECCC  F088         	call	_lcd_string	;wreg free
 10520                           
 10521                           ;lcd.c: 53:     lcd_dispadd(dmsgpos);
 10522  011576  5050               	movf	displ_sens@dmsgpos,w,c
 10523  011578  ECA8  F090         	call	_lcd_dispadd
 10524                           
 10525                           ;lcd.c: 54:     displ_hex((uint8_t) DAC1CON1);
 10526  01157C  010F               	movlb	15	; () banked
 10527  01157E  5134               	movf	52,w,b	;volatile
 10528  011580  6E41               	movwf	displ_hex@hexnum,c
 10529  011582  6A42               	clrf	displ_hex@hexnum+1,c
 10530  011584  6A43               	clrf	displ_hex@hexnum+2,c
 10531  011586  EC4B  F086         	call	_displ_hex	;wreg free
 10532  01158A  0012               	return		;funcret
 10533  01158C                     __end_of_displ_sens:
 10534                           	opt callstack 0
 10535                           
 10536 ;; *************** function _Hopper_coin *****************
 10537 ;; Defined at:
 10538 ;;		line 239 in file "vend.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;  coinval         1   31[COMRAM] unsigned char 
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;Total ram usage:        3 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:    7
 10559 ;; This function calls:
 10560 ;;		_DATAEE_ReadByte
 10561 ;;		_Update_Hopcoin
 10562 ;;		_butindb
 10563 ;;		_displ_hex
 10564 ;;		_lcd_dispadd
 10565 ;;		_lcd_string
 10566 ;; This function is called by:
 10567 ;;		_enter_service
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text73
 10572  010BEE                     __ptext73:
 10573                           	opt callstack 0
 10574  010BEE                     _Hopper_coin:
 10575                           	opt callstack 22
 10576                           
 10577                           ;incstack = 0
 10578  010BEE  0EA4               	movlw	low _hoppcoin
 10579  010BF0  6E40               	movwf	lcd_string@lcdstring,c
 10580  010BF2  0EFD               	movlw	high _hoppcoin
 10581  010BF4  6E41               	movwf	lcd_string@lcdstring+1,c
 10582  010BF6  0E00               	movlw	0
 10583  010BF8  6E42               	movwf	lcd_string@lcdline,c
 10584  010BFA  ECCC  F088         	call	_lcd_string	;wreg free
 10585                           
 10586                           ;vend.c: 242:     mdbflags.endis = 1;
 10587  010BFE  8C29               	bsf	_mdbflags,6,c
 10588                           
 10589                           ;vend.c: 243:     senspos = bflag + 2;
 10590  010C00  5031               	movf	_bflag,w,c
 10591  010C02  0F02               	addlw	2
 10592  010C04  6E1F               	movwf	_senspos,c	;volatile
 10593  010C06  0E00               	movlw	0
 10594  010C08  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
 10595  010C0A  0E1C               	movlw	28
 10596  010C0C  6E37               	movwf	DATAEE_ReadByte@bAdd,c
 10597  010C0E  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
 10598  010C12  6E56               	movwf	Hopper_coin@coinval,c
 10599                           
 10600                           ;vend.c: 245:     lcd_dispadd(senspos);
 10601  010C14  501F               	movf	_senspos,w,c	;volatile
 10602  010C16  ECA8  F090         	call	_lcd_dispadd
 10603                           
 10604                           ;vend.c: 246:     displ_hex((__uint24)coinval);
 10605  010C1A  5056               	movf	Hopper_coin@coinval,w,c
 10606  010C1C  6E41               	movwf	displ_hex@hexnum,c
 10607  010C1E  6A42               	clrf	displ_hex@hexnum+1,c
 10608  010C20  6A43               	clrf	displ_hex@hexnum+2,c
 10609  010C22  EC4B  F086         	call	_displ_hex	;wreg free
 10610                           
 10611                           ;vend.c: 247:     while(mdbflags.endis)
 10612  010C26  D034               	goto	l9212
 10613  010C28                     l9196:
 10614                           
 10615                           ;vend.c: 248:     {;vend.c: 249:         buttons = butindb();
 10616  010C28  ECCD  F08D         	call	_butindb	;wreg free
 10617  010C2C  6E22               	movwf	_buttons,c	;volatile
 10618                           
 10619                           ;vend.c: 250:         switch(buttons)
 10620  010C2E  D018               	goto	l9208
 10621  010C30                     l9198:
 10622  010C30  0E01               	movlw	1
 10623  010C32  6E50               	movwf	Update_Hopcoin@direction,c
 10624  010C34  5056               	movf	Hopper_coin@coinval,w,c
 10625  010C36  EC49  F088         	call	_Update_Hopcoin
 10626                           
 10627                           ;vend.c: 253:             break;
 10628  010C3A  D023               	goto	l9210
 10629  010C3C                     l9200:
 10630  010C3C  0E02               	movlw	2
 10631  010C3E  6E50               	movwf	Update_Hopcoin@direction,c
 10632  010C40  5056               	movf	Hopper_coin@coinval,w,c
 10633  010C42  EC49  F088         	call	_Update_Hopcoin
 10634                           
 10635                           ;vend.c: 255:             break;
 10636  010C46  D01D               	goto	l9210
 10637  010C48                     l2156:
 10638  010C48  9C29               	bcf	_mdbflags,6,c
 10639  010C4A  0E5C               	movlw	low _servmsg
 10640  010C4C  6E40               	movwf	lcd_string@lcdstring,c
 10641  010C4E  0EFC               	movlw	high _servmsg
 10642  010C50  6E41               	movwf	lcd_string@lcdstring+1,c
 10643  010C52  0E00               	movlw	0
 10644  010C54  6E42               	movwf	lcd_string@lcdline,c
 10645  010C56  ECCC  F088         	call	_lcd_string	;wreg free
 10646                           
 10647                           ;vend.c: 258:             buttons = 0x00;
 10648  010C5A  0E00               	movlw	0
 10649  010C5C  6E22               	movwf	_buttons,c	;volatile
 10650                           
 10651                           ;vend.c: 259:             break;
 10652  010C5E  D011               	goto	l9210
 10653  010C60                     l9208:
 10654  010C60  5022               	movf	_buttons,w,c	;volatile
 10655  010C62  6E54               	movwf	??_Hopper_coin& (0+255),c
 10656  010C64  6A55               	clrf	(??_Hopper_coin+1)& (0+255),c
 10657                           
 10658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10659                           ; Switch size 1, requested type "simple"
 10660                           ; Number of cases is 1, Range of values is 0 to 0
 10661                           ; switch strategies available:
 10662                           ; Name         Instructions Cycles
 10663                           ; simple_byte            4     3 (average)
 10664                           ;	Chosen strategy is simple_byte
 10665  010C66  5055               	movf	??_Hopper_coin+1,w,c
 10666  010C68  0A00               	xorlw	0	; case 0
 10667  010C6A  A4D8               	btfss	status,2,c
 10668  010C6C  D00A               	goto	l9210
 10669                           
 10670                           ; Switch size 1, requested type "simple"
 10671                           ; Number of cases is 3, Range of values is 1 to 128
 10672                           ; switch strategies available:
 10673                           ; Name         Instructions Cycles
 10674                           ; simple_byte           10     6 (average)
 10675                           ;	Chosen strategy is simple_byte
 10676  010C6E  5054               	movf	??_Hopper_coin,w,c
 10677  010C70  0A01               	xorlw	1	; case 1
 10678  010C72  B4D8               	btfsc	status,2,c
 10679  010C74  D7DD               	goto	l9198
 10680  010C76  0A03               	xorlw	3	; case 2
 10681  010C78  B4D8               	btfsc	status,2,c
 10682  010C7A  D7E0               	goto	l9200
 10683  010C7C  0A82               	xorlw	130	; case 128
 10684  010C7E  B4D8               	btfsc	status,2,c
 10685  010C80  D7E3               	goto	l2156
 10686  010C82                     l9210:
 10687  010C82  0E00               	movlw	0
 10688  010C84  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
 10689  010C86  0E1C               	movlw	28
 10690  010C88  6E37               	movwf	DATAEE_ReadByte@bAdd,c
 10691  010C8A  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
 10692  010C8E  6E56               	movwf	Hopper_coin@coinval,c
 10693  010C90                     l9212:
 10694                           
 10695                           ;vend.c: 247:     while(mdbflags.endis)
 10696  010C90  AC29               	btfss	_mdbflags,6,c
 10697  010C92  0012               	return	
 10698  010C94  D7C9               	goto	l9196
 10699  010C96                     __end_of_Hopper_coin:
 10700                           	opt callstack 0
 10701                           
 10702 ;; *************** function _butindb *****************
 10703 ;; Defined at:
 10704 ;;		line 155 in file "vend.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  butt            1    5[COMRAM] unsigned char 
 10709 ;;  butval          1    4[COMRAM] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      unsigned char 
 10712 ;; Registers used:
 10713 ;;		wreg, status,2, status,0, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;Total ram usage:        4 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    1
 10726 ;; This function calls:
 10727 ;;		_butin
 10728 ;; This function is called by:
 10729 ;;		_enter_service
 10730 ;;		_Hopper_coin
 10731 ;;		_Sensor_set
 10732 ;;		_price_set
 10733 ;;		_set_price
 10734 ;;		_Vend_setup
 10735 ;;		_Vend_settime
 10736 ;;		_Vend_timeset
 10737 ;;		_Chan_link
 10738 ;;		_Link_chan
 10739 ;;		_Sens_off
 10740 ;;		_off_sens
 10741 ;;		_set_notes
 10742 ;;		_enable_notes
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text74
 10747  011B9A                     __ptext74:
 10748                           	opt callstack 0
 10749  011B9A                     _butindb:
 10750                           	opt callstack 26
 10751                           
 10752                           ;vend.c: 157:     if(butin() == 0)
 10753                           
 10754                           ;incstack = 0
 10755  011B9A  EC79  F08C         	call	_butin	;wreg free
 10756  011B9E  0900               	iorlw	0
 10757  011BA0  A4D8               	btfss	status,2,c
 10758  011BA2  D002               	goto	l8136
 10759                           
 10760                           ;vend.c: 158:     {;vend.c: 159:         return 0x00;
 10761  011BA4  0E00               	movlw	0
 10762  011BA6  0012               	return	
 10763  011BA8                     l8136:
 10764                           
 10765                           ;vend.c: 161:     uint8_t butt = butin();
 10766  011BA8  EC79  F08C         	call	_butin	;wreg free
 10767  011BAC  6E3C               	movwf	butindb@butt,c
 10768                           
 10769                           ;vend.c: 162:     uint8_t butval = butt;
 10770  011BAE  C03C  F03B         	movff	butindb@butt,butindb@butval
 10771                           
 10772                           ;vend.c: 163:     while(butval != 0x00)
 10773  011BB2  D003               	goto	l8142
 10774  011BB4                     l8140:
 10775                           
 10776                           ;vend.c: 164:     {;vend.c: 165:         butval = butin();
 10777  011BB4  EC79  F08C         	call	_butin	;wreg free
 10778  011BB8  6E3B               	movwf	butindb@butval,c
 10779  011BBA                     l8142:
 10780                           
 10781                           ;vend.c: 163:     while(butval != 0x00)
 10782  011BBA  503B               	movf	butindb@butval,w,c
 10783  011BBC  A4D8               	btfss	status,2,c
 10784  011BBE  D7FA               	goto	l8140
 10785                           
 10786                           ;vend.c: 167:     _delay((unsigned long)((500)*(12000000/4000.0)));
 10787  011BC0  0E08               	movlw	8
 10788  011BC2  6E3A               	movwf	(??_butindb+1)& (0+255),c
 10789  011BC4  0E9D               	movlw	157
 10790  011BC6  6E39               	movwf	??_butindb& (0+255),c
 10791  011BC8  0E06               	movlw	6
 10792  011BCA                     u3827:
 10793  011BCA  2EE8               	decfsz	wreg,f,c
 10794  011BCC  D7FE               	bra	u3827
 10795  011BCE  2E39               	decfsz	??_butindb& (0+255),f,c
 10796  011BD0  D7FC               	bra	u3827
 10797  011BD2  2E3A               	decfsz	(??_butindb+1)& (0+255),f,c
 10798  011BD4  D7FA               	bra	u3827
 10799                           
 10800                           ;vend.c: 169:     return butt;
 10801  011BD6  503C               	movf	butindb@butt,w,c
 10802  011BD8  0012               	return		;funcret
 10803  011BDA                     __end_of_butindb:
 10804                           	opt callstack 0
 10805                           
 10806 ;; *************** function _Update_Hopcoin *****************
 10807 ;; Defined at:
 10808 ;;		line 265 in file "vend.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  newval          1    wreg     unsigned char 
 10811 ;;  direction       1   25[COMRAM] unsigned char 
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;  newval          1   28[COMRAM] unsigned char 
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;Total ram usage:        4 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    6
 10830 ;; This function calls:
 10831 ;;		_DATAEE_WriteByte
 10832 ;;		_displ_hex
 10833 ;;		_lcd_dispadd
 10834 ;;		_lcd_string
 10835 ;; This function is called by:
 10836 ;;		_Hopper_coin
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text75
 10841  011092                     __ptext75:
 10842                           	opt callstack 0
 10843  011092                     _Update_Hopcoin:
 10844                           	opt callstack 22
 10845                           
 10846                           ;incstack = 0
 10847                           ;Update_Hopcoin@newval stored from wreg
 10848  011092  6E53               	movwf	Update_Hopcoin@newval,c
 10849                           
 10850                           ;vend.c: 265: void Update_Hopcoin(uint8_t newval, uint8_t direction);vend.c: 266: {;vend
      +                          .c: 268:     switch(newval)
 10851  011094  D014               	goto	l8758
 10852  011096                     l8738:
 10853  011096  0450               	decf	Update_Hopcoin@direction,w,c
 10854  011098  A4D8               	btfss	status,2,c
 10855  01109A  D002               	goto	l8742
 10856                           
 10857                           ;vend.c: 271:         {;vend.c: 272:             newval++;
 10858  01109C  2A53               	incf	Update_Hopcoin@newval,f,c
 10859                           
 10860                           ;vend.c: 273:         }
 10861  01109E  D021               	goto	l8760
 10862  0110A0                     l8742:
 10863                           
 10864                           ;vend.c: 275:         {;vend.c: 276:             newval = 0x05;
 10865  0110A0  0E05               	movlw	5
 10866  0110A2  D00B               	goto	L16
 10867  0110A4                     l8744:
 10868  0110A4  0450               	decf	Update_Hopcoin@direction,w,c
 10869  0110A6  B4D8               	btfsc	status,2,c
 10870  0110A8  D7FB               	goto	l8742
 10871                           
 10872                           ;vend.c: 284:         {;vend.c: 285:             newval--;
 10873  0110AA  0653               	decf	Update_Hopcoin@newval,f,c
 10874  0110AC  D01A               	goto	l8760
 10875  0110AE                     l8750:
 10876  0110AE  0450               	decf	Update_Hopcoin@direction,w,c
 10877  0110B0  A4D8               	btfss	status,2,c
 10878  0110B2  D002               	goto	l8754
 10879                           
 10880                           ;vend.c: 289:         {;vend.c: 291:             newval = 0x01;
 10881  0110B4  0E01               	movlw	1
 10882  0110B6  D001               	goto	L16
 10883  0110B8                     l8754:
 10884                           
 10885                           ;vend.c: 294:         {;vend.c: 295:             newval = 0x02;
 10886  0110B8  0E02               	movlw	2
 10887  0110BA                     L16:
 10888  0110BA  6E53               	movwf	Update_Hopcoin@newval,c
 10889  0110BC  D012               	goto	l8760
 10890  0110BE                     l8758:
 10891  0110BE  5053               	movf	Update_Hopcoin@newval,w,c
 10892  0110C0  6E51               	movwf	??_Update_Hopcoin& (0+255),c
 10893  0110C2  6A52               	clrf	(??_Update_Hopcoin+1)& (0+255),c
 10894                           
 10895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10896                           ; Switch size 1, requested type "simple"
 10897                           ; Number of cases is 1, Range of values is 0 to 0
 10898                           ; switch strategies available:
 10899                           ; Name         Instructions Cycles
 10900                           ; simple_byte            4     3 (average)
 10901                           ;	Chosen strategy is simple_byte
 10902  0110C4  5052               	movf	??_Update_Hopcoin+1,w,c
 10903  0110C6  0A00               	xorlw	0	; case 0
 10904  0110C8  A4D8               	btfss	status,2,c
 10905  0110CA  D7F6               	goto	l8754
 10906                           
 10907                           ; Switch size 1, requested type "simple"
 10908                           ; Number of cases is 3, Range of values is 1 to 5
 10909                           ; switch strategies available:
 10910                           ; Name         Instructions Cycles
 10911                           ; simple_byte           10     6 (average)
 10912                           ;	Chosen strategy is simple_byte
 10913  0110CC  5051               	movf	??_Update_Hopcoin,w,c
 10914  0110CE  0A01               	xorlw	1	; case 1
 10915  0110D0  B4D8               	btfsc	status,2,c
 10916  0110D2  D7E1               	goto	l8738
 10917  0110D4  0A03               	xorlw	3	; case 2
 10918  0110D6  B4D8               	btfsc	status,2,c
 10919  0110D8  D7E5               	goto	l8744
 10920  0110DA  0A07               	xorlw	7	; case 5
 10921  0110DC  B4D8               	btfsc	status,2,c
 10922  0110DE  D7E7               	goto	l8750
 10923  0110E0  D7EB               	goto	l8754
 10924  0110E2                     l8760:
 10925                           
 10926                           ;vend.c: 300:     lcd_string(clrmsg, senspos);
 10927  0110E2  0E96               	movlw	low _clrmsg
 10928  0110E4  6E40               	movwf	lcd_string@lcdstring,c
 10929  0110E6  0EFF               	movlw	high _clrmsg
 10930  0110E8  6E41               	movwf	lcd_string@lcdstring+1,c
 10931  0110EA  C01F  F042         	movff	_senspos,lcd_string@lcdline	;volatile
 10932  0110EE  ECCC  F088         	call	_lcd_string	;wreg free
 10933  0110F2  0E00               	movlw	0
 10934  0110F4  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
 10935  0110F6  0E1C               	movlw	28
 10936  0110F8  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 10937  0110FA  C053  F039         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
 10938  0110FE  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 10939                           
 10940                           ;vend.c: 302:     lcd_dispadd(senspos);
 10941  011102  501F               	movf	_senspos,w,c	;volatile
 10942  011104  ECA8  F090         	call	_lcd_dispadd
 10943                           
 10944                           ;vend.c: 303:     displ_hex((__uint24)newval);
 10945  011108  5053               	movf	Update_Hopcoin@newval,w,c
 10946  01110A  6E41               	movwf	displ_hex@hexnum,c
 10947  01110C  6A42               	clrf	displ_hex@hexnum+1,c
 10948  01110E  6A43               	clrf	displ_hex@hexnum+2,c
 10949  011110  EC4B  F086         	call	_displ_hex	;wreg free
 10950  011114  0012               	return		;funcret
 10951  011116                     __end_of_Update_Hopcoin:
 10952                           	opt callstack 0
 10953                           
 10954 ;; *************** function _Clear_cred *****************
 10955 ;; Defined at:
 10956 ;;		line 349 in file "vend.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;		None
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;		None
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  1    wreg      void 
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;Total ram usage:        2 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; Hardware stack levels required when called:    6
 10977 ;; This function calls:
 10978 ;;		_DATAEE_WriteByte
 10979 ;;		_lcd_string
 10980 ;; This function is called by:
 10981 ;;		_enter_service
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text76
 10986  0116FC                     __ptext76:
 10987                           	opt callstack 0
 10988  0116FC                     _Clear_cred:
 10989                           	opt callstack 23
 10990                           
 10991                           ;incstack = 0
 10992  0116FC  0E00               	movlw	0
 10993  0116FE  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
 10994  011700  0E00               	movlw	0
 10995  011702  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 10996  011704  0E00               	movlw	0
 10997  011706  6E39               	movwf	DATAEE_WriteByte@bData,c
 10998  011708  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 10999  01170C  0E00               	movlw	0
 11000  01170E  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
 11001  011710  0E17               	movlw	23
 11002  011712  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 11003  011714  0E00               	movlw	0
 11004  011716  6E39               	movwf	DATAEE_WriteByte@bData,c
 11005  011718  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 11006  01171C  0E00               	movlw	0
 11007  01171E  6E38               	movwf	DATAEE_WriteByte@bAdd+1,c
 11008  011720  0E2F               	movlw	47
 11009  011722  6E37               	movwf	DATAEE_WriteByte@bAdd,c
 11010  011724  0E00               	movlw	0
 11011  011726  6E39               	movwf	DATAEE_WriteByte@bData,c
 11012  011728  EC27  F08E         	call	_DATAEE_WriteByte	;wreg free
 11013  01172C  0E3F               	movlw	low _creditclr
 11014  01172E  6E40               	movwf	lcd_string@lcdstring,c
 11015  011730  0EFF               	movlw	high _creditclr
 11016  011732  6E41               	movwf	lcd_string@lcdstring+1,c
 11017  011734  0E00               	movlw	0
 11018  011736  6E42               	movwf	lcd_string@lcdline,c
 11019  011738  ECCC  F088         	call	_lcd_string	;wreg free
 11020                           
 11021                           ;vend.c: 355:     _delay((unsigned long)((1000)*(12000000/4000.0)));
 11022  01173C  0E10               	movlw	16
 11023  01173E  6E46               	movwf	(??_Clear_cred+1)& (0+255),c
 11024  011740  0E39               	movlw	57
 11025  011742  6E45               	movwf	??_Clear_cred& (0+255),c
 11026  011744  0E0E               	movlw	14
 11027  011746                     u3837:
 11028  011746  2EE8               	decfsz	wreg,f,c
 11029  011748  D7FE               	bra	u3837
 11030  01174A  2E45               	decfsz	??_Clear_cred& (0+255),f,c
 11031  01174C  D7FC               	bra	u3837
 11032  01174E  2E46               	decfsz	(??_Clear_cred+1)& (0+255),f,c
 11033  011750  D7FA               	bra	u3837
 11034  011752  0012               	return		;funcret
 11035  011754                     __end_of_Clear_cred:
 11036                           	opt callstack 0
 11037                           
 11038 ;; *************** function _DATAEE_WriteByte *****************
 11039 ;; Defined at:
 11040 ;;		line 169 in file "mcc_generated_files/memory.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;  bAdd            2    0[COMRAM] unsigned short 
 11043 ;;  bData           1    2[COMRAM] unsigned char 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  GIEBitValue     1    3[COMRAM] unsigned char 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;Total ram usage:        4 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_displ_sens
 11065 ;;		_Write_NVstore
 11066 ;;		_credit_add
 11067 ;;		_credit_subtract
 11068 ;;		_Clear_Totals
 11069 ;;		_Update_Hopcoin
 11070 ;;		_Clear_cred
 11071 ;;		_set_price
 11072 ;;		_Vend_timeset
 11073 ;;		_Link_chan
 11074 ;;		_off_sens
 11075 ;;		_Reset_settings
 11076 ;;		_save_notes
 11077 ;;		_hopper_pay
 11078 ;;		_disable_channel
 11079 ;;		_update_vends
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text77
 11084  011C4E                     __ptext77:
 11085                           	opt callstack 0
 11086  011C4E                     _DATAEE_WriteByte:
 11087                           	opt callstack 25
 11088                           
 11089                           ;mcc_generated_files/memory.c: 169: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 170: {;mcc_generated_files/memory.c: 171:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
 11090                           
 11091                           ;incstack = 0
 11092  011C4E  0E00               	movlw	0
 11093  011C50  BEF2               	btfsc	4082,7,c	;volatile
 11094  011C52  0E01               	movlw	1
 11095  011C54  6E3A               	movwf	DATAEE_WriteByte@GIEBitValue,c
 11096                           
 11097                           ;mcc_generated_files/memory.c: 173:     NVMADRH = ((bAdd >> 8) & 0x03);
 11098  011C56  5038               	movf	DATAEE_WriteByte@bAdd+1,w,c
 11099  011C58  0B03               	andlw	3
 11100  011C5A  6E7F               	movwf	3967,c	;volatile
 11101                           
 11102                           ;mcc_generated_files/memory.c: 174:     NVMADRL = (bAdd & 0xFF);
 11103  011C5C  C037  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 11104                           
 11105                           ;mcc_generated_files/memory.c: 175:     NVMDAT = bData;
 11106  011C60  C039  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 11107                           
 11108                           ;mcc_generated_files/memory.c: 176:     NVMCON1bits.NVMREG = 0;
 11109  011C64  0E3F               	movlw	-193
 11110  011C66  1681               	andwf	3969,f,c	;volsfr
 11111                           
 11112                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WREN = 1;
 11113  011C68  8481               	bsf	3969,2,c	;volsfr
 11114                           
 11115                           ;mcc_generated_files/memory.c: 178:  INTCONbits.GIE = 0;
 11116  011C6A  9EF2               	bcf	4082,7,c	;volatile
 11117                           
 11118                           ;mcc_generated_files/memory.c: 179:     NVMCON2 = 0x55;
 11119  011C6C  0E55               	movlw	85
 11120  011C6E  6E82               	movwf	3970,c	;volsfr
 11121                           
 11122                           ;mcc_generated_files/memory.c: 180:     NVMCON2 = 0xAA;
 11123  011C70  0EAA               	movlw	170
 11124  011C72  6E82               	movwf	3970,c	;volsfr
 11125                           
 11126                           ;mcc_generated_files/memory.c: 181:     NVMCON1bits.WR = 1;
 11127  011C74  8281               	bsf	3969,1,c	;volsfr
 11128  011C76                     l218:
 11129                           
 11130                           ;mcc_generated_files/memory.c: 183:     while (NVMCON1bits.WR)
 11131  011C76  B281               	btfsc	3969,1,c	;volsfr
 11132  011C78  D7FE               	goto	l218
 11133                           
 11134                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.WREN = 0;
 11135  011C7A  9481               	bcf	3969,2,c	;volsfr
 11136                           
 11137                           ;mcc_generated_files/memory.c: 188:  INTCONbits.GIE = GIEBitValue;
 11138  011C7C  B03A               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 11139  011C7E  D002               	bra	u1995
 11140  011C80  9EF2               	bcf	4082,7,c	;volatile
 11141  011C82  D001               	bra	u1996
 11142  011C84                     u1995:
 11143  011C84  8EF2               	bsf	4082,7,c	;volatile
 11144  011C86                     u1996:
 11145  011C86  0012               	return		;funcret
 11146  011C88                     __end_of_DATAEE_WriteByte:
 11147                           	opt callstack 0
 11148                           
 11149 ;; *************** function _Audit *****************
 11150 ;; Defined at:
 11151 ;;		line 194 in file "vend.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;		None
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  vends           1   25[COMRAM] unsigned char 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;Total ram usage:        1 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    6
 11172 ;; This function calls:
 11173 ;;		_CMP1_GetOutputStatus
 11174 ;;		_DATAEE_ReadByte
 11175 ;;		_Read_NVstore
 11176 ;;		_butin
 11177 ;;		_displ_hex
 11178 ;;		_get_channel
 11179 ;;		_lcd_string
 11180 ;; This function is called by:
 11181 ;;		_enter_service
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185                           	psect	text78
 11186  0103A4                     __ptext78:
 11187                           	opt callstack 0
 11188  0103A4                     _Audit:
 11189                           	opt callstack 23
 11190                           
 11191                           ;vend.c: 196:     DAC1CON1 = 0x01;
 11192                           
 11193                           ;incstack = 0
 11194  0103A4  0E01               	movlw	1
 11195  0103A6  010F               	movlb	15	; () banked
 11196  0103A8  6F34               	movwf	52,b	;volatile
 11197                           
 11198                           ; BSR set to: 15
 11199  0103AA  0E00               	movlw	0
 11200  0103AC  6E3A               	movwf	Read_NVstore@storeadd+1,c
 11201  0103AE  0E02               	movlw	2
 11202  0103B0  6E39               	movwf	Read_NVstore@storeadd,c
 11203  0103B2  0E35               	movlw	low _pvcash
 11204  0103B4  6E3B               	movwf	Read_NVstore@storemem,c
 11205  0103B6  0E00               	movlw	high _pvcash
 11206  0103B8  6E3C               	movwf	Read_NVstore@storemem+1,c
 11207  0103BA  0E02               	movlw	2
 11208  0103BC  6E3D               	movwf	Read_NVstore@storesize,c
 11209  0103BE  EC6A  F08F         	call	_Read_NVstore	;wreg free
 11210  0103C2  0E00               	movlw	0
 11211  0103C4  6E3A               	movwf	Read_NVstore@storeadd+1,c
 11212  0103C6  0E0C               	movlw	12
 11213  0103C8  6E39               	movwf	Read_NVstore@storeadd,c
 11214  0103CA  0E32               	movlw	low _pnvcash
 11215  0103CC  6E3B               	movwf	Read_NVstore@storemem,c
 11216  0103CE  0E00               	movlw	high _pnvcash
 11217  0103D0  6E3C               	movwf	Read_NVstore@storemem+1,c
 11218  0103D2  0E03               	movlw	3
 11219  0103D4  6E3D               	movwf	Read_NVstore@storesize,c
 11220  0103D6  EC6A  F08F         	call	_Read_NVstore	;wreg free
 11221  0103DA  0E8C               	movlw	low _cashinmsg
 11222  0103DC  6E40               	movwf	lcd_string@lcdstring,c
 11223  0103DE  0EFF               	movlw	high _cashinmsg
 11224  0103E0  6E41               	movwf	lcd_string@lcdstring+1,c
 11225  0103E2  0E00               	movlw	0
 11226  0103E4  6E42               	movwf	lcd_string@lcdline,c
 11227  0103E6  ECCC  F088         	call	_lcd_string	;wreg free
 11228                           
 11229                           ;vend.c: 200:     displ_hex((__uint24)pvcash);
 11230  0103EA  C035  F041         	movff	_pvcash,displ_hex@hexnum	;volatile
 11231  0103EE  C036  F042         	movff	_pvcash+1,displ_hex@hexnum+1	;volatile
 11232  0103F2  6A43               	clrf	displ_hex@hexnum+2,c
 11233  0103F4  EC4B  F086         	call	_displ_hex	;wreg free
 11234  0103F8  0EC6               	movlw	low _totalmsg
 11235  0103FA  6E40               	movwf	lcd_string@lcdstring,c
 11236  0103FC  0EFF               	movlw	high _totalmsg
 11237  0103FE  6E41               	movwf	lcd_string@lcdstring+1,c
 11238  010400  0E40               	movlw	64
 11239  010402  6E42               	movwf	lcd_string@lcdline,c
 11240  010404  ECCC  F088         	call	_lcd_string	;wreg free
 11241                           
 11242                           ;vend.c: 202:     displ_hex(pnvcash);
 11243  010408  C032  F041         	movff	_pnvcash,displ_hex@hexnum	;volatile
 11244  01040C  C033  F042         	movff	_pnvcash+1,displ_hex@hexnum+1	;volatile
 11245  010410  C034  F043         	movff	_pnvcash+2,displ_hex@hexnum+2	;volatile
 11246  010414  EC4B  F086         	call	_displ_hex	;wreg free
 11247  010418  0EF1               	movlw	low _vendispmsg
 11248  01041A  6E40               	movwf	lcd_string@lcdstring,c
 11249  01041C  0EFE               	movlw	high _vendispmsg
 11250  01041E  6E41               	movwf	lcd_string@lcdstring+1,c
 11251  010420  0E14               	movlw	20
 11252  010422  6E42               	movwf	lcd_string@lcdline,c
 11253  010424  ECCC  F088         	call	_lcd_string	;wreg free
 11254                           
 11255                           ;vend.c: 204:     venflags.audit = 1;
 11256  010428  8615               	bsf	_venflags+2,3,c
 11257                           
 11258                           ;vend.c: 205:     while(venflags.audit)
 11259  01042A  D049               	goto	l9144
 11260  01042C                     l9118:
 11261                           
 11262                           ;vend.c: 206:     {;vend.c: 207:         buttons = butin();
 11263  01042C  EC79  F08C         	call	_butin	;wreg free
 11264  010430  6E22               	movwf	_buttons,c	;volatile
 11265                           
 11266                           ;vend.c: 208:         if(buttons != 0x00)
 11267  010432  5022               	movf	_buttons,w,c	;volatile
 11268  010434  B4D8               	btfsc	status,2,c
 11269  010436  D033               	goto	l9138
 11270                           
 11271                           ;vend.c: 209:         {;vend.c: 210:             buttons = butin();
 11272  010438  EC79  F08C         	call	_butin	;wreg free
 11273  01043C  6E22               	movwf	_buttons,c	;volatile
 11274  01043E  0E06               	movlw	low _clrline
 11275  010440  6E40               	movwf	lcd_string@lcdstring,c
 11276  010442  0EFF               	movlw	high _clrline
 11277  010444  6E41               	movwf	lcd_string@lcdstring+1,c
 11278  010446  0E54               	movlw	84
 11279  010448  6E42               	movwf	lcd_string@lcdline,c
 11280  01044A  ECCC  F088         	call	_lcd_string	;wreg free
 11281                           
 11282                           ;vend.c: 212:             channel = get_channel(buttons);
 11283  01044E  5022               	movf	_buttons,w,c	;volatile
 11284  010450  EC66  F090         	call	_get_channel
 11285  010454  6E1A               	movwf	_channel,c	;volatile
 11286  010456  0E04               	movlw	4
 11287  010458  241A               	addwf	_channel,w,c	;volatile
 11288  01045A  6E37               	movwf	DATAEE_ReadByte@bAdd,c
 11289  01045C  6A38               	clrf	DATAEE_ReadByte@bAdd+1,c
 11290  01045E  0E00               	movlw	0
 11291  010460  2238               	addwfc	DATAEE_ReadByte@bAdd+1,f,c
 11292  010462  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
 11293  010466  6E50               	movwf	Audit@vends,c
 11294  010468  0EEE               	movlw	low _totalvendsm
 11295  01046A  6E40               	movwf	lcd_string@lcdstring,c
 11296  01046C  0EFF               	movlw	high _totalvendsm
 11297  01046E  6E41               	movwf	lcd_string@lcdstring+1,c
 11298  010470  0E54               	movlw	84
 11299  010472  6E42               	movwf	lcd_string@lcdline,c
 11300  010474  ECCC  F088         	call	_lcd_string	;wreg free
 11301                           
 11302                           ;vend.c: 215:             displ_hex((__uint24)vends);
 11303  010478  5050               	movf	Audit@vends,w,c
 11304  01047A  6E41               	movwf	displ_hex@hexnum,c
 11305  01047C  6A42               	clrf	displ_hex@hexnum+1,c
 11306  01047E  6A43               	clrf	displ_hex@hexnum+2,c
 11307  010480  EC4B  F086         	call	_displ_hex	;wreg free
 11308  010484                     l9134:
 11309  010484  EC79  F08C         	call	_butin	;wreg free
 11310  010488  0900               	iorlw	0
 11311  01048A  A4D8               	btfss	status,2,c
 11312  01048C  D7FB               	goto	l9134
 11313  01048E  0E06               	movlw	low _clrline
 11314  010490  6E40               	movwf	lcd_string@lcdstring,c
 11315  010492  0EFF               	movlw	high _clrline
 11316  010494  6E41               	movwf	lcd_string@lcdstring+1,c
 11317  010496  0E54               	movlw	84
 11318  010498  6E42               	movwf	lcd_string@lcdline,c
 11319  01049A  ECCC  F088         	call	_lcd_string	;wreg free
 11320  01049E                     l9138:
 11321                           
 11322                           ;vend.c: 219:         if(!CMP1_GetOutputStatus())
 11323  01049E  EC33  F091         	call	_CMP1_GetOutputStatus	;wreg free
 11324  0104A2  0900               	iorlw	0
 11325  0104A4  A4D8               	btfss	status,2,c
 11326  0104A6  D00B               	goto	l9144
 11327                           
 11328                           ;vend.c: 220:         {;vend.c: 221:             DAC1CON1 = sensorval;
 11329  0104A8  C020  FF34         	movff	_sensorval,3892	;volatile
 11330                           
 11331                           ;vend.c: 222:             venflags.audit = 0;
 11332  0104AC  9615               	bcf	_venflags+2,3,c
 11333  0104AE  0E5C               	movlw	low _servmsg
 11334  0104B0  6E40               	movwf	lcd_string@lcdstring,c
 11335  0104B2  0EFC               	movlw	high _servmsg
 11336  0104B4  6E41               	movwf	lcd_string@lcdstring+1,c
 11337  0104B6  0E00               	movlw	0
 11338  0104B8  6E42               	movwf	lcd_string@lcdline,c
 11339  0104BA  ECCC  F088         	call	_lcd_string	;wreg free
 11340  0104BE                     l9144:
 11341                           
 11342                           ;vend.c: 205:     while(venflags.audit)
 11343  0104BE  A615               	btfss	_venflags+2,3,c
 11344  0104C0  0012               	return	
 11345  0104C2  D7B4               	goto	l9118
 11346  0104C4                     __end_of_Audit:
 11347                           	opt callstack 0
 11348                           
 11349 ;; *************** function _get_channel *****************
 11350 ;; Defined at:
 11351 ;;		line 379 in file "vend.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  butons          1    wreg     unsigned char 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  butons          1    0[COMRAM] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      unsigned char 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;Total ram usage:        1 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_main
 11375 ;;		_Audit
 11376 ;;		_set_price
 11377 ;;		_Vend_settime
 11378 ;;		_Chan_link
 11379 ;;		_Sens_off
 11380 ;;		_price_check
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text79
 11385  0120CC                     __ptext79:
 11386                           	opt callstack 0
 11387  0120CC                     _get_channel:
 11388                           	opt callstack 29
 11389                           
 11390                           ;incstack = 0
 11391                           ;get_channel@butons stored from wreg
 11392  0120CC  6E37               	movwf	get_channel@butons,c
 11393                           
 11394                           ;vend.c: 379: uint8_t get_channel(uint8_t butons);vend.c: 380: {;vend.c: 382:     channe
      +                          l = 0x00;
 11395  0120CE  0E00               	movlw	0
 11396  0120D0  6E1A               	movwf	_channel,c	;volatile
 11397                           
 11398                           ;vend.c: 383:     while(butons != 0)
 11399  0120D2  D004               	goto	l8298
 11400  0120D4                     l8294:
 11401                           
 11402                           ;vend.c: 384:     {;vend.c: 385:         channel++;
 11403  0120D4  2A1A               	incf	_channel,f,c	;volatile
 11404                           
 11405                           ;vend.c: 386:         butons = butons >> 1;
 11406  0120D6  90D8               	bcf	status,0,c
 11407  0120D8  3037               	rrcf	get_channel@butons,w,c
 11408  0120DA  6E37               	movwf	get_channel@butons,c
 11409  0120DC                     l8298:
 11410                           
 11411                           ;vend.c: 383:     while(butons != 0)
 11412  0120DC  5037               	movf	get_channel@butons,w,c
 11413  0120DE  A4D8               	btfss	status,2,c
 11414  0120E0  D7F9               	goto	l8294
 11415                           
 11416                           ;vend.c: 388:     channel--;
 11417  0120E2  061A               	decf	_channel,f,c	;volatile
 11418                           
 11419                           ;vend.c: 389:     return channel;
 11420  0120E4  501A               	movf	_channel,w,c	;volatile
 11421  0120E6  0012               	return		;funcret
 11422  0120E8                     __end_of_get_channel:
 11423                           	opt callstack 0
 11424                           
 11425 ;; *************** function _butin *****************
 11426 ;; Defined at:
 11427 ;;		line 172 in file "vend.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;  butons          1    1[COMRAM] unsigned char 
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      unsigned char 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;Total ram usage:        2 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_main
 11451 ;;		_butindb
 11452 ;;		_Audit
 11453 ;;		_price_check
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           	psect	text80
 11458  0118F2                     __ptext80:
 11459                           	opt callstack 0
 11460  0118F2                     _butin:
 11461                           	opt callstack 29
 11462                           
 11463                           ;vend.c: 174:     LATA7 = 0;
 11464                           
 11465                           ;incstack = 0
 11466  0118F2  9E83               	bcf	3971,7,c	;volatile
 11467                           
 11468                           ;vend.c: 175:     LATA6 = 1;
 11469  0118F4  8C83               	bsf	3971,6,c	;volatile
 11470                           
 11471                           ;vend.c: 176:     _delay((unsigned long)((15)*(12000000/4000.0)));
 11472  0118F6  0E3B               	movlw	59
 11473  0118F8  6E37               	movwf	??_butin& (0+255),c
 11474  0118FA  0E70               	movlw	112
 11475  0118FC                     u3847:
 11476  0118FC  2EE8               	decfsz	wreg,f,c
 11477  0118FE  D7FE               	bra	u3847
 11478  011900  2E37               	decfsz	??_butin& (0+255),f,c
 11479  011902  D7FC               	bra	u3847
 11480                           
 11481                           ;vend.c: 178:     uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
 11482  011904  CF8D F037          	movff	3981,??_butin	;volatile
 11483  011908  90D8               	bcf	status,0,c
 11484  01190A  3237               	rrcf	??_butin,f,c
 11485  01190C  0E0F               	movlw	15
 11486  01190E  1637               	andwf	??_butin,f,c
 11487  011910  3837               	swapf	??_butin,w,c
 11488  011912  0BF0               	andlw	240
 11489  011914  6E38               	movwf	butin@butons,c
 11490                           
 11491                           ;vend.c: 179:     LATA7 = 1;
 11492  011916  8E83               	bsf	3971,7,c	;volatile
 11493                           
 11494                           ;vend.c: 180:     LATA6 = 0;
 11495  011918  9C83               	bcf	3971,6,c	;volatile
 11496                           
 11497                           ;vend.c: 181:     _delay((unsigned long)((15)*(12000000/4000.0)));
 11498  01191A  0E3B               	movlw	59
 11499  01191C  6E37               	movwf	??_butin& (0+255),c
 11500  01191E  0E70               	movlw	112
 11501  011920                     u3857:
 11502  011920  2EE8               	decfsz	wreg,f,c
 11503  011922  D7FE               	bra	u3857
 11504  011924  2E37               	decfsz	??_butin& (0+255),f,c
 11505  011926  D7FC               	bra	u3857
 11506                           
 11507                           ;vend.c: 183:     butons = ((PORTA >> 1) & 0x0F) | butons;
 11508  011928  90D8               	bcf	status,0,c
 11509  01192A  308D               	rrcf	3981,w,c	;volatile
 11510  01192C  0B0F               	andlw	15
 11511  01192E  1038               	iorwf	butin@butons,w,c
 11512  011930  6E38               	movwf	butin@butons,c
 11513                           
 11514                           ;vend.c: 184:     LATA7 = 1;
 11515  011932  8E83               	bsf	3971,7,c	;volatile
 11516                           
 11517                           ;vend.c: 185:     LATA6 = 1;
 11518  011934  8C83               	bsf	3971,6,c	;volatile
 11519                           
 11520                           ;vend.c: 186:     return ~butons;
 11521  011936  5038               	movf	butin@butons,w,c
 11522  011938  0AFF               	xorlw	255
 11523  01193A  0012               	return		;funcret
 11524  01193C                     __end_of_butin:
 11525                           	opt callstack 0
 11526                           
 11527 ;; *************** function _Read_NVstore *****************
 11528 ;; Defined at:
 11529 ;;		line 96 in file "vend.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  storeadd        2    2[COMRAM] unsigned short 
 11532 ;;  storemem        2    4[COMRAM] PTR unsigned char 
 11533 ;;		 -> pnvcash(3), pvcash(2), 
 11534 ;;  storesize       1    6[COMRAM] unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  i               1    7[COMRAM] unsigned char 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11546 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;Total ram usage:        6 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    1
 11553 ;; This function calls:
 11554 ;;		_DATAEE_ReadByte
 11555 ;; This function is called by:
 11556 ;;		_Update_cashaudit
 11557 ;;		_Audit
 11558 ;;		_Update_coinsout
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text81
 11563  011ED4                     __ptext81:
 11564                           	opt callstack 0
 11565  011ED4                     _Read_NVstore:
 11566                           	opt callstack 25
 11567                           
 11568                           ;vend.c: 96: void Read_NVstore(uint16_t storeadd, uint8_t *storemem, uint8_t storesize);
      +                          vend.c: 97: {;vend.c: 98:     uint8_t i = 0;
 11569                           
 11570                           ;incstack = 0
 11571  011ED4  0E00               	movlw	0
 11572  011ED6  6E3E               	movwf	Read_NVstore@i,c
 11573                           
 11574                           ;vend.c: 99:     while(i < storesize)
 11575  011ED8  D010               	goto	l8206
 11576  011EDA                     l8202:
 11577                           
 11578                           ;vend.c: 100:     {;vend.c: 101:         storemem[i] = DATAEE_ReadByte(storeadd + i);
 11579  011EDA  503E               	movf	Read_NVstore@i,w,c
 11580  011EDC  243B               	addwf	Read_NVstore@storemem,w,c
 11581  011EDE  6ED9               	movwf	fsr2l,c
 11582  011EE0  0E00               	movlw	0
 11583  011EE2  203C               	addwfc	Read_NVstore@storemem+1,w,c
 11584  011EE4  6EDA               	movwf	fsr2h,c
 11585  011EE6  503E               	movf	Read_NVstore@i,w,c
 11586  011EE8  2439               	addwf	Read_NVstore@storeadd,w,c
 11587  011EEA  6E37               	movwf	DATAEE_ReadByte@bAdd,c
 11588  011EEC  0E00               	movlw	0
 11589  011EEE  203A               	addwfc	Read_NVstore@storeadd+1,w,c
 11590  011EF0  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
 11591  011EF2  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
 11592  011EF6  6EDF               	movwf	indf2,c
 11593                           
 11594                           ;vend.c: 102:         i++;
 11595  011EF8  2A3E               	incf	Read_NVstore@i,f,c
 11596  011EFA                     l8206:
 11597                           
 11598                           ;vend.c: 99:     while(i < storesize)
 11599  011EFA  503D               	movf	Read_NVstore@storesize,w,c
 11600  011EFC  5C3E               	subwf	Read_NVstore@i,w,c
 11601  011EFE  B0D8               	btfsc	status,0,c
 11602  011F00  0012               	return	
 11603  011F02  D7EB               	goto	l8202
 11604  011F04                     __end_of_Read_NVstore:
 11605                           	opt callstack 0
 11606                           
 11607 ;; *************** function _CMP1_GetOutputStatus *****************
 11608 ;; Defined at:
 11609 ;;		line 74 in file "mcc_generated_files/cmp1.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      _Bool 
 11616 ;; Registers used:
 11617 ;;		wreg
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11627 ;;Total ram usage:        0 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_main
 11633 ;;		_displ_sens
 11634 ;;		_Audit
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text82
 11639  012266                     __ptext82:
 11640                           	opt callstack 0
 11641  012266                     _CMP1_GetOutputStatus:
 11642                           	opt callstack 27
 11643                           
 11644                           ;mcc_generated_files/cmp1.c: 76:  return (CMOUTbits.MC1OUT);
 11645                           
 11646                           ;incstack = 0
 11647  012266  010F               	movlb	15	; () banked
 11648  012268  A13D               	btfss	61,0,b	;volatile
 11649  01226A  D002               	goto	u2230
 11650  01226C  0E01               	movlw	1
 11651  01226E  0012               	return	
 11652  012270                     u2230:
 11653  012270  0E00               	movlw	0
 11654                           
 11655                           ; BSR set to: 15
 11656  012272  0012               	return		;funcret
 11657  012274                     __end_of_CMP1_GetOutputStatus:
 11658                           	opt callstack 0
 11659                           
 11660 ;; *************** function _displ_noteer *****************
 11661 ;; Defined at:
 11662 ;;		line 183 in file "lcd.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;		None
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;		None
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1    wreg      void 
 11669 ;; Registers used:
 11670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;Total ram usage:        0 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:    6
 11683 ;; This function calls:
 11684 ;;		_displ_code
 11685 ;;		_lcd_string
 11686 ;; This function is called by:
 11687 ;;		_main
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           	psect	text83
 11692  012072                     __ptext83:
 11693                           	opt callstack 0
 11694  012072                     _displ_noteer:
 11695                           	opt callstack 24
 11696                           
 11697                           ; BSR set to: 15
 11698                           ;incstack = 0
 11699  012072  0ED5               	movlw	low _noteerr
 11700  012074  6E40               	movwf	lcd_string@lcdstring,c
 11701  012076  0EFE               	movlw	high _noteerr
 11702  012078  6E41               	movwf	lcd_string@lcdstring+1,c
 11703  01207A  0E00               	movlw	0
 11704  01207C  6E42               	movwf	lcd_string@lcdline,c
 11705  01207E  ECCC  F088         	call	_lcd_string	;wreg free
 11706                           
 11707                           ;lcd.c: 186:     ercode = mdbdata[0];
 11708  012082  C060  F02E         	movff	_mdbdata,_ercode
 11709                           
 11710                           ;lcd.c: 187:     displ_code(ercode);
 11711  012086  502E               	movf	_ercode,w,c
 11712  012088  EC62  F082         	call	_displ_code
 11713                           
 11714                           ;lcd.c: 188:     mdbflags.noteerr = 0;
 11715  01208C  9229               	bcf	_mdbflags,1,c
 11716                           
 11717                           ;lcd.c: 189:     venflags.noterr = 0;
 11718  01208E  9C13               	bcf	_venflags,6,c
 11719  012090  0012               	return		;funcret
 11720  012092                     __end_of_displ_noteer:
 11721                           	opt callstack 0
 11722                           
 11723 ;; *************** function _displ_code *****************
 11724 ;; Defined at:
 11725 ;;		line 136 in file "lcd.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  ercode          1    wreg     unsigned char 
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;  ercode          1   11[COMRAM] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		wreg, status,2, status,0, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;Total ram usage:        3 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    5
 11746 ;; This function calls:
 11747 ;;		_lcd_writeC
 11748 ;; This function is called by:
 11749 ;;		_displ_noteer
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text84
 11754  0104C4                     __ptext84:
 11755                           	opt callstack 0
 11756  0104C4                     _displ_code:
 11757                           	opt callstack 24
 11758                           
 11759                           ;incstack = 0
 11760                           ;displ_code@ercode stored from wreg
 11761  0104C4  6E42               	movwf	displ_code@ercode,c
 11762                           
 11763                           ;lcd.c: 136: void displ_code(uint8_t ercode);lcd.c: 137: {;lcd.c: 138:     if((ercode >>
      +                           4) < 0x0A)
 11764  0104C6  C042  F040         	movff	displ_code@ercode,??_displ_code
 11765  0104CA  3A40               	swapf	??_displ_code,f,c
 11766  0104CC  0E0F               	movlw	15
 11767  0104CE  1640               	andwf	??_displ_code,f,c
 11768  0104D0  0E0A               	movlw	10
 11769  0104D2  6040               	cpfslt	??_displ_code,c
 11770  0104D4  D01E               	goto	l9336
 11771                           
 11772                           ;lcd.c: 139:     {;lcd.c: 140:         lcd_writeC((ercode >> 4) | 0x30);
 11773  0104D6  3842               	swapf	displ_code@ercode,w,c
 11774  0104D8  0B0F               	andlw	15
 11775  0104DA  0930               	iorlw	48
 11776  0104DC  EC9E  F08C         	call	_lcd_writeC
 11777                           
 11778                           ;lcd.c: 141:     }
 11779  0104E0  D033               	goto	l9338
 11780  0104E2                     l9324:
 11781  0104E2  0E41               	movlw	65
 11782  0104E4  EC9E  F08C         	call	_lcd_writeC
 11783                           
 11784                           ;lcd.c: 147:             break;
 11785  0104E8  D02F               	goto	l9338
 11786  0104EA                     l9326:
 11787  0104EA  0E42               	movlw	66
 11788  0104EC  EC9E  F08C         	call	_lcd_writeC
 11789                           
 11790                           ;lcd.c: 149:             break;
 11791  0104F0  D02B               	goto	l9338
 11792  0104F2                     l9328:
 11793  0104F2  0E43               	movlw	67
 11794  0104F4  EC9E  F08C         	call	_lcd_writeC
 11795                           
 11796                           ;lcd.c: 151:             break;
 11797  0104F8  D027               	goto	l9338
 11798  0104FA                     l9330:
 11799  0104FA  0E44               	movlw	68
 11800  0104FC  EC9E  F08C         	call	_lcd_writeC
 11801                           
 11802                           ;lcd.c: 153:             break;
 11803  010500  D023               	goto	l9338
 11804  010502                     l9332:
 11805  010502  0E45               	movlw	69
 11806  010504  EC9E  F08C         	call	_lcd_writeC
 11807                           
 11808                           ;lcd.c: 155:             break;
 11809  010508  D01F               	goto	l9338
 11810  01050A                     l9334:
 11811  01050A  0E46               	movlw	70
 11812  01050C  EC9E  F08C         	call	_lcd_writeC
 11813                           
 11814                           ;lcd.c: 157:         }
 11815  010510  D01B               	goto	l9338
 11816  010512                     l9336:
 11817  010512  3842               	swapf	displ_code@ercode,w,c
 11818  010514  0B0F               	andlw	15
 11819  010516  6E40               	movwf	??_displ_code& (0+255),c
 11820  010518  6A41               	clrf	(??_displ_code+1)& (0+255),c
 11821                           
 11822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11823                           ; Switch size 1, requested type "simple"
 11824                           ; Number of cases is 1, Range of values is 0 to 0
 11825                           ; switch strategies available:
 11826                           ; Name         Instructions Cycles
 11827                           ; simple_byte            4     3 (average)
 11828                           ;	Chosen strategy is simple_byte
 11829  01051A  5041               	movf	??_displ_code+1,w,c
 11830  01051C  0A00               	xorlw	0	; case 0
 11831  01051E  A4D8               	btfss	status,2,c
 11832  010520  D013               	goto	l9338
 11833                           
 11834                           ; Switch size 1, requested type "simple"
 11835                           ; Number of cases is 6, Range of values is 10 to 15
 11836                           ; switch strategies available:
 11837                           ; Name         Instructions Cycles
 11838                           ; simple_byte           19    10 (average)
 11839                           ;	Chosen strategy is simple_byte
 11840  010522  5040               	movf	??_displ_code,w,c
 11841  010524  0A0A               	xorlw	10	; case 10
 11842  010526  B4D8               	btfsc	status,2,c
 11843  010528  D7DC               	goto	l9324
 11844  01052A  0A01               	xorlw	1	; case 11
 11845  01052C  B4D8               	btfsc	status,2,c
 11846  01052E  D7DD               	goto	l9326
 11847  010530  0A07               	xorlw	7	; case 12
 11848  010532  B4D8               	btfsc	status,2,c
 11849  010534  D7DE               	goto	l9328
 11850  010536  0A01               	xorlw	1	; case 13
 11851  010538  B4D8               	btfsc	status,2,c
 11852  01053A  D7DF               	goto	l9330
 11853  01053C  0A03               	xorlw	3	; case 14
 11854  01053E  B4D8               	btfsc	status,2,c
 11855  010540  D7E0               	goto	l9332
 11856  010542  0A01               	xorlw	1	; case 15
 11857  010544  B4D8               	btfsc	status,2,c
 11858  010546  D7E1               	goto	l9334
 11859  010548                     l9338:
 11860                           
 11861                           ;lcd.c: 159:     if((ercode & 0x0F) < 0x0A)
 11862  010548  C042  F040         	movff	displ_code@ercode,??_displ_code
 11863  01054C  0E0F               	movlw	15
 11864  01054E  1640               	andwf	??_displ_code,f,c
 11865  010550  0E0A               	movlw	10
 11866  010552  6040               	cpfslt	??_displ_code,c
 11867  010554  D01E               	goto	l9354
 11868                           
 11869                           ;lcd.c: 160:     {;lcd.c: 161:         lcd_writeC((ercode & 0x0F) | 0x30);
 11870  010556  5042               	movf	displ_code@ercode,w,c
 11871  010558  0B0F               	andlw	15
 11872  01055A  0930               	iorlw	48
 11873  01055C  EC9E  F08C         	call	_lcd_writeC
 11874                           
 11875                           ;lcd.c: 162:     }
 11876  010560  0012               	return	
 11877  010562                     l9342:
 11878  010562  0E41               	movlw	65
 11879  010564  EC9E  F08C         	call	_lcd_writeC
 11880                           
 11881                           ;lcd.c: 168:             break;
 11882  010568  0012               	return	
 11883  01056A                     l9344:
 11884  01056A  0E42               	movlw	66
 11885  01056C  EC9E  F08C         	call	_lcd_writeC
 11886                           
 11887                           ;lcd.c: 170:             break;
 11888  010570  0012               	return	
 11889  010572                     l9346:
 11890  010572  0E43               	movlw	67
 11891  010574  EC9E  F08C         	call	_lcd_writeC
 11892                           
 11893                           ;lcd.c: 172:             break;
 11894  010578  0012               	return	
 11895  01057A                     l9348:
 11896  01057A  0E44               	movlw	68
 11897  01057C  EC9E  F08C         	call	_lcd_writeC
 11898                           
 11899                           ;lcd.c: 174:             break;
 11900  010580  0012               	return	
 11901  010582                     l9350:
 11902  010582  0E45               	movlw	69
 11903  010584  EC9E  F08C         	call	_lcd_writeC
 11904                           
 11905                           ;lcd.c: 176:             break;
 11906  010588  0012               	return	
 11907  01058A                     l9352:
 11908  01058A  0E46               	movlw	70
 11909  01058C  EC9E  F08C         	call	_lcd_writeC
 11910                           
 11911                           ;lcd.c: 178:         }
 11912  010590  0012               	return	
 11913  010592                     l9354:
 11914  010592  5042               	movf	displ_code@ercode,w,c
 11915  010594  0B0F               	andlw	15
 11916  010596  6E40               	movwf	??_displ_code& (0+255),c
 11917  010598  6A41               	clrf	(??_displ_code+1)& (0+255),c
 11918                           
 11919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11920                           ; Switch size 1, requested type "simple"
 11921                           ; Number of cases is 1, Range of values is 0 to 0
 11922                           ; switch strategies available:
 11923                           ; Name         Instructions Cycles
 11924                           ; simple_byte            4     3 (average)
 11925                           ;	Chosen strategy is simple_byte
 11926  01059A  5041               	movf	??_displ_code+1,w,c
 11927  01059C  0A00               	xorlw	0	; case 0
 11928  01059E  A4D8               	btfss	status,2,c
 11929  0105A0  0012               	return	
 11930                           
 11931                           ; Switch size 1, requested type "simple"
 11932                           ; Number of cases is 6, Range of values is 10 to 15
 11933                           ; switch strategies available:
 11934                           ; Name         Instructions Cycles
 11935                           ; simple_byte           19    10 (average)
 11936                           ;	Chosen strategy is simple_byte
 11937  0105A2  5040               	movf	??_displ_code,w,c
 11938  0105A4  0A0A               	xorlw	10	; case 10
 11939  0105A6  B4D8               	btfsc	status,2,c
 11940  0105A8  D7DC               	goto	l9342
 11941  0105AA  0A01               	xorlw	1	; case 11
 11942  0105AC  B4D8               	btfsc	status,2,c
 11943  0105AE  D7DD               	goto	l9344
 11944  0105B0  0A07               	xorlw	7	; case 12
 11945  0105B2  B4D8               	btfsc	status,2,c
 11946  0105B4  D7DE               	goto	l9346
 11947  0105B6  0A01               	xorlw	1	; case 13
 11948  0105B8  B4D8               	btfsc	status,2,c
 11949  0105BA  D7DF               	goto	l9348
 11950  0105BC  0A03               	xorlw	3	; case 14
 11951  0105BE  B4D8               	btfsc	status,2,c
 11952  0105C0  D7E0               	goto	l9350
 11953  0105C2  0A01               	xorlw	1	; case 15
 11954  0105C4  A4D8               	btfss	status,2,c
 11955  0105C6  0012               	return	
 11956  0105C8  D7E0               	goto	l9352
 11957  0105CA                     __end_of_displ_code:
 11958                           	opt callstack 0
 11959                           
 11960 ;; *************** function _displ_nochange *****************
 11961 ;; Defined at:
 11962 ;;		line 243 in file "lcd.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;		None
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;Total ram usage:        0 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    6
 11983 ;; This function calls:
 11984 ;;		_lcd_dispadd
 11985 ;;		_lcd_string
 11986 ;; This function is called by:
 11987 ;;		_main
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text85
 11992  012138                     __ptext85:
 11993                           	opt callstack 0
 11994  012138                     _displ_nochange:
 11995                           	opt callstack 24
 11996                           
 11997                           ;incstack = 0
 11998  012138  0E14               	movlw	20
 11999  01213A  ECA8  F090         	call	_lcd_dispadd
 12000  01213E  0E75               	movlw	low _nochange
 12001  012140  6E40               	movwf	lcd_string@lcdstring,c
 12002  012142  0EFE               	movlw	high _nochange
 12003  012144  6E41               	movwf	lcd_string@lcdstring+1,c
 12004  012146  0E14               	movlw	20
 12005  012148  6E42               	movwf	lcd_string@lcdline,c
 12006  01214A  ECCC  F088         	call	_lcd_string	;wreg free
 12007  01214E  0012               	return		;funcret
 12008  012150                     __end_of_displ_nochange:
 12009                           	opt callstack 0
 12010                           
 12011 ;; *************** function _displ_credit *****************
 12012 ;; Defined at:
 12013 ;;		line 128 in file "lcd.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;  cash            1   25[COMRAM] unsigned char 
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;Total ram usage:        1 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    6
 12034 ;; This function calls:
 12035 ;;		_credit_check
 12036 ;;		_displ_hex
 12037 ;;		_lcd_string
 12038 ;; This function is called by:
 12039 ;;		_main
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text86
 12044  01200A                     __ptext86:
 12045                           	opt callstack 0
 12046  01200A                     _displ_credit:
 12047                           	opt callstack 24
 12048                           
 12049                           ;incstack = 0
 12050  01200A  0E5C               	movlw	low _credits
 12051  01200C  6E40               	movwf	lcd_string@lcdstring,c
 12052  01200E  0EFF               	movlw	high _credits
 12053  012010  6E41               	movwf	lcd_string@lcdstring+1,c
 12054  012012  0E00               	movlw	0
 12055  012014  6E42               	movwf	lcd_string@lcdline,c
 12056  012016  ECCC  F088         	call	_lcd_string	;wreg free
 12057                           
 12058                           ;lcd.c: 131:     uint8_t cash = credit_check();
 12059  01201A  EC1C  F091         	call	_credit_check	;wreg free
 12060  01201E  6E50               	movwf	displ_credit@cash,c
 12061                           
 12062                           ;lcd.c: 132:     displ_hex((uint8_t) cash);
 12063  012020  5050               	movf	displ_credit@cash,w,c
 12064  012022  6E41               	movwf	displ_hex@hexnum,c
 12065  012024  6A42               	clrf	displ_hex@hexnum+1,c
 12066  012026  6A43               	clrf	displ_hex@hexnum+2,c
 12067  012028  EC4B  F086         	call	_displ_hex	;wreg free
 12068                           
 12069                           ;lcd.c: 133:     venflags.credisplay = 0;
 12070  01202C  9813               	bcf	_venflags,4,c
 12071  01202E  0012               	return		;funcret
 12072  012030                     __end_of_displ_credit:
 12073                           	opt callstack 0
 12074                           
 12075 ;; *************** function _lcd_string *****************
 12076 ;; Defined at:
 12077 ;;		line 217 in file "lcd.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  lcdstring       2    9[COMRAM] PTR unsigned char 
 12080 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 12081 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 12082 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(67), pricesetm2(57), 
 12083 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 12084 ;;		 -> totalvendsm(7), vendispmsg(21), totalmsg(8), cashinmsg(10), 
 12085 ;;		 -> initnote(37), nochange(33), noteerr(28), credits(13), 
 12086 ;;		 -> timemsg(18), clrline(21), enabled(10), disabled(10), 
 12087 ;;		 -> sensoffmsg(31), sensmsg(11), linkmsg(12), chanmsg(12), 
 12088 ;;		 -> clrmsg(10), onmsg(4), offmsg(4), servmsg(80), 
 12089 ;;		 -> emptymsg(9), inscoin(39), 
 12090 ;;  lcdline         1   11[COMRAM] unsigned char 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;		None
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12106 ;;Total ram usage:        5 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    5
 12109 ;; This function calls:
 12110 ;;		_lcd_dispadd
 12111 ;;		_lcd_write
 12112 ;;		_lcd_writeC
 12113 ;; This function is called by:
 12114 ;;		_main
 12115 ;;		_enter_service
 12116 ;;		_displ_sens
 12117 ;;		_displ_lflags
 12118 ;;		_displ_sflags
 12119 ;;		_displ_time
 12120 ;;		_displ_note
 12121 ;;		_displ_nendis
 12122 ;;		_displ_credit
 12123 ;;		_displ_noteer
 12124 ;;		_displ_nochange
 12125 ;;		_vend_init
 12126 ;;		_Audit
 12127 ;;		_Hopper_coin
 12128 ;;		_Update_Hopcoin
 12129 ;;		_Sensor_set
 12130 ;;		_Clear_cred
 12131 ;;		_price_set
 12132 ;;		_set_price
 12133 ;;		_Vend_setup
 12134 ;;		_Vend_settime
 12135 ;;		_Vend_timeset
 12136 ;;		_Chan_link
 12137 ;;		_Link_chan
 12138 ;;		_Sens_off
 12139 ;;		_off_sens
 12140 ;;		_Reset_settings
 12141 ;;		_set_notes
 12142 ;;		_enable_notes
 12143 ;;		_price_check
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text87
 12148  011198                     __ptext87:
 12149                           	opt callstack 0
 12150  011198                     _lcd_string:
 12151                           	opt callstack 24
 12152                           
 12153                           ;incstack = 0
 12154  011198  5042               	movf	lcd_string@lcdline,w,c
 12155  01119A  A4D8               	btfss	status,2,c
 12156  01119C  D004               	goto	l8022
 12157  01119E  0E01               	movlw	1
 12158  0111A0  ECDC  F08F         	call	_lcd_write
 12159                           
 12160                           ;lcd.c: 222:     }
 12161  0111A4  D004               	goto	l8024
 12162  0111A6                     l8022:
 12163                           
 12164                           ;lcd.c: 224:     {;lcd.c: 226:         lcd_dispadd(lcdline | 0x80);
 12165  0111A6  5042               	movf	lcd_string@lcdline,w,c
 12166  0111A8  0980               	iorlw	128
 12167  0111AA  ECA8  F090         	call	_lcd_dispadd
 12168  0111AE                     l8024:
 12169                           
 12170                           ;lcd.c: 228:     for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 12171  0111AE  0E00               	movlw	0
 12172  0111B0  6E2F               	movwf	_stradd,c
 12173  0111B2  D020               	goto	l8032
 12174  0111B4                     l8026:
 12175                           
 12176                           ;lcd.c: 229:     {;lcd.c: 230:         lcdata = lcdstring[stradd];
 12177  0111B4  502F               	movf	_stradd,w,c
 12178  0111B6  2440               	addwf	lcd_string@lcdstring,w,c
 12179  0111B8  6E43               	movwf	??_lcd_string& (0+255),c
 12180  0111BA  0E00               	movlw	0
 12181  0111BC  2041               	addwfc	lcd_string@lcdstring+1,w,c
 12182  0111BE  6E44               	movwf	(??_lcd_string+1)& (0+255),c
 12183  0111C0  C043  FFF6         	movff	??_lcd_string,tblptrl
 12184  0111C4  C044  FFF7         	movff	??_lcd_string+1,tblptrh
 12185  0111C8                     	if	0	;tblptru may be non-zero
 12186  0111C8                     	endif
 12187  0111C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12188  0111C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12189  0111CA  6EF8               	movwf	tblptru,c
 12190  0111CC                     	endif
 12191  0111CC  0008               	tblrd		*
 12192  0111CE  CFF5 F030          	movff	tablat,_lcdata
 12193                           
 12194                           ;lcd.c: 231:         lcd_writeC(lcdstring[stradd]);
 12195  0111D2  502F               	movf	_stradd,w,c
 12196  0111D4  2440               	addwf	lcd_string@lcdstring,w,c
 12197  0111D6  6E43               	movwf	??_lcd_string& (0+255),c
 12198  0111D8  0E00               	movlw	0
 12199  0111DA  2041               	addwfc	lcd_string@lcdstring+1,w,c
 12200  0111DC  6E44               	movwf	(??_lcd_string+1)& (0+255),c
 12201  0111DE  C043  FFF6         	movff	??_lcd_string,tblptrl
 12202  0111E2  C044  FFF7         	movff	??_lcd_string+1,tblptrh
 12203  0111E6                     	if	0	;tblptru may be non-zero
 12204  0111E6                     	endif
 12205  0111E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12206  0111E6  0E00               	movlw	low (__mediumconst shr (0+16))
 12207  0111E8  6EF8               	movwf	tblptru,c
 12208  0111EA                     	endif
 12209  0111EA  0008               	tblrd		*
 12210  0111EC  50F5               	movf	tablat,w,c
 12211  0111EE  EC9E  F08C         	call	_lcd_writeC
 12212                           
 12213                           ;lcd.c: 232:     }
 12214  0111F2  2A2F               	incf	_stradd,f,c
 12215  0111F4                     l8032:
 12216  0111F4  502F               	movf	_stradd,w,c
 12217  0111F6  2440               	addwf	lcd_string@lcdstring,w,c
 12218  0111F8  6E43               	movwf	??_lcd_string& (0+255),c
 12219  0111FA  0E00               	movlw	0
 12220  0111FC  2041               	addwfc	lcd_string@lcdstring+1,w,c
 12221  0111FE  6E44               	movwf	(??_lcd_string+1)& (0+255),c
 12222  011200  C043  FFF6         	movff	??_lcd_string,tblptrl
 12223  011204  C044  FFF7         	movff	??_lcd_string+1,tblptrh
 12224  011208                     	if	0	;tblptru may be non-zero
 12225  011208                     	endif
 12226  011208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12227  011208  0E00               	movlw	low (__mediumconst shr (0+16))
 12228  01120A  6EF8               	movwf	tblptru,c
 12229  01120C                     	endif
 12230  01120C  0008               	tblrd		*
 12231  01120E  50F5               	movf	tablat,w,c
 12232  011210  0900               	iorlw	0
 12233  011212  B4D8               	btfsc	status,2,c
 12234  011214  0012               	return	
 12235  011216  D7CE               	goto	l8026
 12236  011218                     __end_of_lcd_string:
 12237                           	opt callstack 0
 12238                           
 12239 ;; *************** function _displ_hex *****************
 12240 ;; Defined at:
 12241 ;;		line 192 in file "lcd.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  hexnum          3   10[COMRAM] unsigned um
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;  value           8   13[COMRAM] unsigned char [8]
 12246 ;;  hexnumsave      3   21[COMRAM] unsigned um
 12247 ;;  i               1   24[COMRAM] char 
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12257 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;Total ram usage:       15 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    5
 12264 ;; This function calls:
 12265 ;;		___ltdiv
 12266 ;;		___ltmod
 12267 ;;		_lcd_writeC
 12268 ;; This function is called by:
 12269 ;;		_displ_sens
 12270 ;;		_displ_time
 12271 ;;		_displ_credit
 12272 ;;		_displ_price
 12273 ;;		_Audit
 12274 ;;		_Hopper_coin
 12275 ;;		_Update_Hopcoin
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           	psect	text88
 12280  010C96                     __ptext88:
 12281                           	opt callstack 0
 12282  010C96                     _displ_hex:
 12283                           	opt callstack 21
 12284                           
 12285                           ;lcd.c: 192: void displ_hex(__uint24 hexnum);lcd.c: 193: {;lcd.c: 194:     signed char i
      +                           = 0;
 12286                           
 12287                           ;incstack = 0
 12288  010C96  0E00               	movlw	0
 12289  010C98  6E4F               	movwf	displ_hex@i,c
 12290                           
 12291                           ;lcd.c: 195:     uint8_t value[8];;lcd.c: 196:     __uint24 hexnumsave = hexnum;
 12292  010C9A  C041  F04C         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 12293  010C9E  C042  F04D         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 12294  010CA2  C043  F04E         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 12295                           
 12296                           ;lcd.c: 197:     while(hexnum > 0)
 12297  010CA6  D02C               	goto	l8062
 12298  010CA8                     l8056:
 12299                           
 12300                           ;lcd.c: 198:     {;lcd.c: 199:         value[i] = hexnum % 10;
 12301  010CA8  0E44               	movlw	low displ_hex@value
 12302  010CAA  244F               	addwf	displ_hex@i,w,c
 12303  010CAC  6ED9               	movwf	fsr2l,c
 12304  010CAE  6ADA               	clrf	fsr2h,c
 12305  010CB0  0E00               	movlw	high displ_hex@value
 12306  010CB2  22DA               	addwfc	fsr2h,f,c
 12307  010CB4  C041  F037         	movff	displ_hex@hexnum,___ltmod@dividend
 12308  010CB8  C042  F038         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 12309  010CBC  C043  F039         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 12310  010CC0  0E0A               	movlw	10
 12311  010CC2  6E3A               	movwf	___ltmod@divisor,c
 12312  010CC4  0E00               	movlw	0
 12313  010CC6  6E3B               	movwf	___ltmod@divisor+1,c
 12314  010CC8  0E00               	movlw	0
 12315  010CCA  6E3C               	movwf	___ltmod@divisor+2,c
 12316  010CCC  ECFF  F08B         	call	___ltmod	;wreg free
 12317  010CD0  5037               	movf	?___ltmod,w,c
 12318  010CD2  6EDF               	movwf	indf2,c
 12319                           
 12320                           ;lcd.c: 200:         hexnum /= 10;
 12321  010CD4  C041  F037         	movff	displ_hex@hexnum,___ltdiv@dividend
 12322  010CD8  C042  F038         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 12323  010CDC  C043  F039         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 12324  010CE0  0E0A               	movlw	10
 12325  010CE2  6E3A               	movwf	___ltdiv@divisor,c
 12326  010CE4  0E00               	movlw	0
 12327  010CE6  6E3B               	movwf	___ltdiv@divisor+1,c
 12328  010CE8  0E00               	movlw	0
 12329  010CEA  6E3C               	movwf	___ltdiv@divisor+2,c
 12330  010CEC  EC2D  F08A         	call	___ltdiv	;wreg free
 12331  010CF0  C037  F041         	movff	?___ltdiv,displ_hex@hexnum
 12332  010CF4  C038  F042         	movff	?___ltdiv+1,displ_hex@hexnum+1
 12333  010CF8  C039  F043         	movff	?___ltdiv+2,displ_hex@hexnum+2
 12334                           
 12335                           ;lcd.c: 201:         i = i + 1;
 12336  010CFC  284F               	incf	displ_hex@i,w,c
 12337  010CFE  6E4F               	movwf	displ_hex@i,c
 12338  010D00                     l8062:
 12339                           
 12340                           ;lcd.c: 197:     while(hexnum > 0)
 12341  010D00  5041               	movf	displ_hex@hexnum,w,c
 12342  010D02  1042               	iorwf	displ_hex@hexnum+1,w,c
 12343  010D04  1043               	iorwf	displ_hex@hexnum+2,w,c
 12344  010D06  B4D8               	btfsc	status,2,c
 12345  010D08  D00C               	goto	l8068
 12346  010D0A  D7CE               	goto	l8056
 12347  010D0C                     l8064:
 12348                           
 12349                           ;lcd.c: 205:     {;lcd.c: 206:         i--;
 12350  010D0C  064F               	decf	displ_hex@i,f,c
 12351                           
 12352                           ;lcd.c: 207:         lcd_writeC(value[i] | 0x30);
 12353  010D0E  0E44               	movlw	low displ_hex@value
 12354  010D10  244F               	addwf	displ_hex@i,w,c
 12355  010D12  6ED9               	movwf	fsr2l,c
 12356  010D14  6ADA               	clrf	fsr2h,c
 12357  010D16  0E00               	movlw	high displ_hex@value
 12358  010D18  22DA               	addwfc	fsr2h,f,c
 12359  010D1A  50DF               	movf	indf2,w,c
 12360  010D1C  0930               	iorlw	48
 12361  010D1E  EC9E  F08C         	call	_lcd_writeC
 12362  010D22                     l8068:
 12363                           
 12364                           ;lcd.c: 204:     while(i > 0)
 12365  010D22  504F               	movf	displ_hex@i,w,c
 12366  010D24  0A80               	xorlw	128
 12367  010D26  0F7F               	addlw	-129
 12368  010D28  B0D8               	btfsc	status,0,c
 12369  010D2A  D7F0               	goto	l8064
 12370                           
 12371                           ;lcd.c: 210:     if(hexnumsave == 0)
 12372  010D2C  504C               	movf	displ_hex@hexnumsave,w,c
 12373  010D2E  104D               	iorwf	displ_hex@hexnumsave+1,w,c
 12374  010D30  104E               	iorwf	displ_hex@hexnumsave+2,w,c
 12375  010D32  A4D8               	btfss	status,2,c
 12376  010D34  0012               	return	
 12377                           
 12378                           ;lcd.c: 211:     {;lcd.c: 212:        lcd_writeC(0x30);
 12379  010D36  0E30               	movlw	48
 12380  010D38  EC9E  F08C         	call	_lcd_writeC
 12381  010D3C  0012               	return		;funcret
 12382  010D3E                     __end_of_displ_hex:
 12383                           	opt callstack 0
 12384                           
 12385 ;; *************** function _lcd_writeC *****************
 12386 ;; Defined at:
 12387 ;;		line 250 in file "lcd.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;  lcdata          1    wreg     unsigned char 
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;  lcdata          1    8[COMRAM] unsigned char 
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		wreg, status,2, status,0, cstack
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;Total ram usage:        3 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    4
 12408 ;; This function calls:
 12409 ;;		_lcd_dispadd
 12410 ;;		_lcd_write
 12411 ;; This function is called by:
 12412 ;;		_displ_lflags
 12413 ;;		_displ_sflags
 12414 ;;		_displ_time
 12415 ;;		_displ_code
 12416 ;;		_displ_hex
 12417 ;;		_lcd_string
 12418 ;;		_displ_price
 12419 ;;		_lcd_test
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text89
 12424  01193C                     __ptext89:
 12425                           	opt callstack 0
 12426  01193C                     _lcd_writeC:
 12427                           	opt callstack 24
 12428                           
 12429                           ;incstack = 0
 12430                           ;lcd_writeC@lcdata stored from wreg
 12431  01193C  6E3F               	movwf	lcd_writeC@lcdata,c
 12432  01193E  8487               	bsf	3975,2,c	;# 
 12433                           
 12434                           ;lcd.c: 255:     lcd_write(lcdata);
 12435  011940  503F               	movf	lcd_writeC@lcdata,w,c
 12436  011942  ECDC  F08F         	call	_lcd_write
 12437                           
 12438                           ;lcd.c: 259:     switch(bflag)
 12439  011946  D00C               	goto	l7930
 12440  011948                     l7924:
 12441  011948  0E40               	movlw	64
 12442  01194A  ECA8  F090         	call	_lcd_dispadd
 12443                           
 12444                           ;lcd.c: 262:         break;
 12445  01194E  D019               	goto	l1581
 12446  011950                     l7926:
 12447  011950  0E14               	movlw	20
 12448  011952  ECA8  F090         	call	_lcd_dispadd
 12449                           
 12450                           ;lcd.c: 264:         break;
 12451  011956  D015               	goto	l1581
 12452  011958                     l7928:
 12453  011958  0E54               	movlw	84
 12454  01195A  ECA8  F090         	call	_lcd_dispadd
 12455                           
 12456                           ;lcd.c: 266:     }
 12457  01195E  D011               	goto	l1581
 12458  011960                     l7930:
 12459  011960  5031               	movf	_bflag,w,c
 12460  011962  6E3D               	movwf	??_lcd_writeC& (0+255),c
 12461  011964  6A3E               	clrf	(??_lcd_writeC+1)& (0+255),c
 12462                           
 12463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12464                           ; Switch size 1, requested type "simple"
 12465                           ; Number of cases is 1, Range of values is 0 to 0
 12466                           ; switch strategies available:
 12467                           ; Name         Instructions Cycles
 12468                           ; simple_byte            4     3 (average)
 12469                           ;	Chosen strategy is simple_byte
 12470  011966  503E               	movf	??_lcd_writeC+1,w,c
 12471  011968  0A00               	xorlw	0	; case 0
 12472  01196A  A4D8               	btfss	status,2,c
 12473  01196C  D00A               	goto	l1581
 12474                           
 12475                           ; Switch size 1, requested type "simple"
 12476                           ; Number of cases is 3, Range of values is 19 to 83
 12477                           ; switch strategies available:
 12478                           ; Name         Instructions Cycles
 12479                           ; simple_byte           10     6 (average)
 12480                           ;	Chosen strategy is simple_byte
 12481  01196E  503D               	movf	??_lcd_writeC,w,c
 12482  011970  0A13               	xorlw	19	; case 19
 12483  011972  B4D8               	btfsc	status,2,c
 12484  011974  D7E9               	goto	l7924
 12485  011976  0A34               	xorlw	52	; case 39
 12486  011978  B4D8               	btfsc	status,2,c
 12487  01197A  D7EE               	goto	l7928
 12488  01197C  0A74               	xorlw	116	; case 83
 12489  01197E  B4D8               	btfsc	status,2,c
 12490  011980  D7E7               	goto	l7926
 12491  011982                     l1581:
 12492  011982  9487               	bcf	3975,2,c	;# 
 12493  011984  0012               	return		;funcret
 12494  011986                     __end_of_lcd_writeC:
 12495                           	opt callstack 0
 12496                           
 12497 ;; *************** function _lcd_dispadd *****************
 12498 ;; Defined at:
 12499 ;;		line 270 in file "lcd.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  lcdaddress      1    wreg     unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  lcdaddress      1    4[COMRAM] unsigned char 
 12504 ;;  lcdatasave      1    5[COMRAM] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg, status,2, status,0, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;Total ram usage:        2 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:    3
 12521 ;; This function calls:
 12522 ;;		_lcd_write
 12523 ;; This function is called by:
 12524 ;;		_displ_sens
 12525 ;;		_displ_lflags
 12526 ;;		_lcd_string
 12527 ;;		_displ_price
 12528 ;;		_displ_nochange
 12529 ;;		_lcd_writeC
 12530 ;;		_Hopper_coin
 12531 ;;		_Update_Hopcoin
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           	psect	text90
 12536  012150                     __ptext90:
 12537                           	opt callstack 0
 12538  012150                     _lcd_dispadd:
 12539                           	opt callstack 24
 12540                           
 12541                           ;incstack = 0
 12542                           ;lcd_dispadd@lcdaddress stored from wreg
 12543  012150  6E3B               	movwf	lcd_dispadd@lcdaddress,c
 12544                           
 12545                           ;lcd.c: 270: void lcd_dispadd(uint8_t lcdaddress);lcd.c: 271: {;lcd.c: 272:         uint
      +                          8_t lcdatasave = lcdata;
 12546  012152  C030  F03C         	movff	_lcdata,lcd_dispadd@lcdatasave
 12547  012156  9487               	bcf	3975,2,c	;# 
 12548                           
 12549                           ;lcd.c: 275:         lcd_write(lcdaddress | 0x80);
 12550  012158  503B               	movf	lcd_dispadd@lcdaddress,w,c
 12551  01215A  0980               	iorlw	128
 12552  01215C  ECDC  F08F         	call	_lcd_write
 12553  012160  8487               	bsf	3975,2,c	;# 
 12554                           
 12555                           ;lcd.c: 277:         lcdata = lcdatasave;
 12556  012162  C03C  F030         	movff	lcd_dispadd@lcdatasave,_lcdata
 12557  012166  0012               	return		;funcret
 12558  012168                     __end_of_lcd_dispadd:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _lcd_write *****************
 12562 ;; Defined at:
 12563 ;;		line 282 in file "lcd.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  lcdata          1    wreg     unsigned char 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  lcdata          1    3[COMRAM] unsigned char 
 12568 ;;  savelatd        1    2[COMRAM] unsigned char 
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1    wreg      void 
 12571 ;; Registers used:
 12572 ;;		wreg, status,2, status,0, cstack
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;Total ram usage:        2 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:    2
 12585 ;; This function calls:
 12586 ;;		_lcd_clockE
 12587 ;;		_read_busy
 12588 ;; This function is called by:
 12589 ;;		_lcd_init
 12590 ;;		_displ_note
 12591 ;;		_lcd_string
 12592 ;;		_displ_price
 12593 ;;		_lcd_writeC
 12594 ;;		_lcd_dispadd
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text91
 12599  011FB8                     __ptext91:
 12600                           	opt callstack 0
 12601  011FB8                     _lcd_write:
 12602                           	opt callstack 25
 12603                           
 12604                           ;incstack = 0
 12605                           ;lcd_write@lcdata stored from wreg
 12606  011FB8  6E3A               	movwf	lcd_write@lcdata,c
 12607                           
 12608                           ;lcd.c: 282: void lcd_write(uint8_t lcdata);lcd.c: 283: {;lcd.c: 284:     uint8_t savela
      +                          td = LATD;
 12609  011FBA  CF86 F039          	movff	3974,lcd_write@savelatd	;volatile
 12610  011FBE                     l7900:
 12611                           
 12612                           ;lcd.c: 287:     bflag = read_busy();
 12613  011FBE  EC4C  F08D         	call	_read_busy	;wreg free
 12614  011FC2  6E31               	movwf	_bflag,c
 12615                           
 12616                           ;lcd.c: 288:     while(bflag & 0x80)
 12617                           
 12618                           ;lcd.c: 288:     while(bflag & 0x80)
 12619  011FC4  BE31               	btfsc	_bflag,7,c
 12620  011FC6  D7FB               	goto	l7900
 12621                           
 12622                           ;lcd.c: 292:     LATD = (lcdata >> 4) & 0x0F;
 12623  011FC8  383A               	swapf	lcd_write@lcdata,w,c
 12624  011FCA  0B0F               	andlw	15
 12625  011FCC  0B0F               	andlw	15
 12626  011FCE  6E86               	movwf	3974,c	;volatile
 12627                           
 12628                           ;lcd.c: 294:     lcd_clockE();
 12629  011FD0  EC3A  F091         	call	_lcd_clockE	;wreg free
 12630                           
 12631                           ;lcd.c: 296:     LATD = lcdata & 0x0F;
 12632  011FD4  503A               	movf	lcd_write@lcdata,w,c
 12633  011FD6  0B0F               	andlw	15
 12634  011FD8  6E86               	movwf	3974,c	;volatile
 12635                           
 12636                           ;lcd.c: 297:     lcd_clockE();
 12637  011FDA  EC3A  F091         	call	_lcd_clockE	;wreg free
 12638                           
 12639                           ;lcd.c: 298:     LATD = savelatd;
 12640  011FDE  C039  FF86         	movff	lcd_write@savelatd,3974	;volatile
 12641  011FE2  0012               	return		;funcret
 12642  011FE4                     __end_of_lcd_write:
 12643                           	opt callstack 0
 12644                           
 12645 ;; *************** function _read_busy *****************
 12646 ;; Defined at:
 12647 ;;		line 313 in file "lcd.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;		None
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;  savelatd        1    1[COMRAM] unsigned char 
 12652 ;;  savelate        1    0[COMRAM] unsigned char 
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      char 
 12655 ;; Registers used:
 12656 ;;		wreg, status,2, status,0, cstack
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;Total ram usage:        2 bytes
 12667 ;; Hardware stack levels used:    1
 12668 ;; Hardware stack levels required when called:    1
 12669 ;; This function calls:
 12670 ;;		_lcd_clockH
 12671 ;;		_lcd_clockL
 12672 ;; This function is called by:
 12673 ;;		_lcd_write
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text92
 12678  011A98                     __ptext92:
 12679                           	opt callstack 0
 12680  011A98                     _read_busy:
 12681                           	opt callstack 25
 12682                           
 12683                           ;lcd.c: 315:     uint8_t savelate = LATE;
 12684                           
 12685                           ;incstack = 0
 12686  011A98  CF87 F037          	movff	3975,read_busy@savelate	;volatile
 12687                           
 12688                           ;lcd.c: 316:     uint8_t savelatd = LATD;
 12689  011A9C  CF86 F038          	movff	3974,read_busy@savelatd	;volatile
 12690  011AA0  9487               	bcf	3975,2,c	;# 
 12691  011AA2  8287               	bsf	3975,1,c	;# 
 12692                           
 12693                           ;lcd.c: 319:     TRISD = (TRISD | 0x0F);
 12694  011AA4  508B               	movf	3979,w,c	;volatile
 12695  011AA6  090F               	iorlw	15
 12696  011AA8  6E8B               	movwf	3979,c	;volatile
 12697                           
 12698                           ;lcd.c: 320:     lcd_clockH();
 12699  011AAA  EC59  F091         	call	_lcd_clockH	;wreg free
 12700                           
 12701                           ;lcd.c: 321:     bflag = (PORTD << 4);
 12702  011AAE  3890               	swapf	3984,w,c	;volatile
 12703  011AB0  0BF0               	andlw	240
 12704  011AB2  6E31               	movwf	_bflag,c
 12705                           
 12706                           ;lcd.c: 322:     lcd_clockL();
 12707  011AB4  EC55  F091         	call	_lcd_clockL	;wreg free
 12708                           
 12709                           ;lcd.c: 323:     lcd_clockH();
 12710  011AB8  EC59  F091         	call	_lcd_clockH	;wreg free
 12711                           
 12712                           ;lcd.c: 324:     bflag = bflag | (PORTD & 0x0F);
 12713  011ABC  5090               	movf	3984,w,c	;volatile
 12714  011ABE  0B0F               	andlw	15
 12715  011AC0  1031               	iorwf	_bflag,w,c
 12716  011AC2  6E31               	movwf	_bflag,c
 12717  011AC4  9087               	bcf	3975,0,c	;# 
 12718                           
 12719                           ;lcd.c: 326:     TRISD = (TRISD & 0xF0);
 12720  011AC6  508B               	movf	3979,w,c	;volatile
 12721  011AC8  0BF0               	andlw	240
 12722  011ACA  6E8B               	movwf	3979,c	;volatile
 12723  011ACC  9287               	bcf	3975,1,c	;# 
 12724                           
 12725                           ;lcd.c: 328:     LATD = savelatd;
 12726  011ACE  C038  FF86         	movff	read_busy@savelatd,3974	;volatile
 12727                           
 12728                           ;lcd.c: 329:     LATE = savelate;
 12729  011AD2  C037  FF87         	movff	read_busy@savelate,3975	;volatile
 12730                           
 12731                           ;lcd.c: 330:     return(bflag);
 12732  011AD6  5031               	movf	_bflag,w,c
 12733  011AD8  0012               	return		;funcret
 12734  011ADA                     __end_of_read_busy:
 12735                           	opt callstack 0
 12736                           
 12737 ;; *************** function _lcd_clockL *****************
 12738 ;; Defined at:
 12739 ;;		line 345 in file "lcd.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;		None
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  1    wreg      void 
 12746 ;; Registers used:
 12747 ;;		None
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;Total ram usage:        0 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_read_busy
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text93
 12767  0122AA                     __ptext93:
 12768                           	opt callstack 0
 12769  0122AA                     _lcd_clockL:
 12770                           	opt callstack 25
 12771                           
 12772                           ;incstack = 0
 12773  0122AA  9087               	bcf	3975,0,c	;# 
 12774                           
 12775                           ;lcd.c: 348:     _delay((unsigned long)((1)*(12000000/4000000.0)));
 12776  0122AC  D000               	nop2		;2 cycle nop
 12777  0122AE  F000               	nop	
 12778  0122B0  0012               	return		;funcret
 12779  0122B2                     __end_of_lcd_clockL:
 12780                           	opt callstack 0
 12781                           
 12782 ;; *************** function _lcd_clockH *****************
 12783 ;; Defined at:
 12784 ;;		line 337 in file "lcd.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;		None
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		None
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;Total ram usage:        0 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; This function calls:
 12805 ;;		Nothing
 12806 ;; This function is called by:
 12807 ;;		_read_busy
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text94
 12812  0122B2                     __ptext94:
 12813                           	opt callstack 0
 12814  0122B2                     _lcd_clockH:
 12815                           	opt callstack 25
 12816                           
 12817                           ;incstack = 0
 12818  0122B2  8087               	bsf	3975,0,c	;# 
 12819                           
 12820                           ;lcd.c: 340:     _delay((unsigned long)((1)*(12000000/4000000.0)));
 12821  0122B4  D000               	nop2		;2 cycle nop
 12822  0122B6  F000               	nop	
 12823  0122B8  0012               	return		;funcret
 12824  0122BA                     __end_of_lcd_clockH:
 12825                           	opt callstack 0
 12826                           
 12827 ;; *************** function _lcd_clockE *****************
 12828 ;; Defined at:
 12829 ;;		line 353 in file "lcd.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;		None
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;		None
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      void 
 12836 ;; Registers used:
 12837 ;;		None
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12847 ;;Total ram usage:        0 bytes
 12848 ;; Hardware stack levels used:    1
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_lcd_init
 12853 ;;		_lcd_write
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text95
 12858  012274                     __ptext95:
 12859                           	opt callstack 0
 12860  012274                     _lcd_clockE:
 12861                           	opt callstack 26
 12862                           
 12863                           ;incstack = 0
 12864  012274  8087               	bsf	3975,0,c	;# 
 12865                           
 12866                           ;lcd.c: 356:     _delay((unsigned long)((1)*(12000000/4000000.0)));
 12867  012276  D000               	nop2		;2 cycle nop
 12868  012278  F000               	nop	
 12869  01227A  9087               	bcf	3975,0,c	;# 
 12870                           
 12871                           ;lcd.c: 358:     _delay((unsigned long)((1)*(12000000/4000000.0)));
 12872  01227C  D000               	nop2		;2 cycle nop
 12873  01227E  F000               	nop	
 12874  012280  0012               	return		;funcret
 12875  012282                     __end_of_lcd_clockE:
 12876                           	opt callstack 0
 12877                           
 12878 ;; *************** function ___ltmod *****************
 12879 ;; Defined at:
 12880 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/ltmod.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  dividend        3    0[COMRAM] unsigned um
 12883 ;;  divisor         3    3[COMRAM] unsigned um
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  counter         1    6[COMRAM] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  3    0[COMRAM] unsigned um
 12888 ;; Registers used:
 12889 ;;		wreg, status,2, status,0
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12895 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;Total ram usage:        7 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; This function calls:
 12902 ;;		Nothing
 12903 ;; This function is called by:
 12904 ;;		_displ_hex
 12905 ;; This function uses a non-reentrant model
 12906 ;;
 12907                           
 12908                           	psect	text96
 12909  0117FE                     __ptext96:
 12910                           	opt callstack 0
 12911  0117FE                     ___ltmod:
 12912                           	opt callstack 25
 12913                           
 12914                           ;incstack = 0
 12915  0117FE  503A               	movf	___ltmod@divisor,w,c
 12916  011800  103B               	iorwf	___ltmod@divisor+1,w,c
 12917  011802  103C               	iorwf	___ltmod@divisor+2,w,c
 12918  011804  B4D8               	btfsc	status,2,c
 12919  011806  D01E               	goto	l4911
 12920  011808  0E01               	movlw	1
 12921  01180A  6E3D               	movwf	___ltmod@counter,c
 12922  01180C  D005               	goto	l7962
 12923  01180E                     l7960:
 12924  01180E  90D8               	bcf	status,0,c
 12925  011810  363A               	rlcf	___ltmod@divisor,f,c
 12926  011812  363B               	rlcf	___ltmod@divisor+1,f,c
 12927  011814  363C               	rlcf	___ltmod@divisor+2,f,c
 12928  011816  2A3D               	incf	___ltmod@counter,f,c
 12929  011818                     l7962:
 12930  011818  AE3C               	btfss	___ltmod@divisor+2,7,c
 12931  01181A  D7F9               	goto	l7960
 12932  01181C                     u1950:
 12933  01181C  503A               	movf	___ltmod@divisor,w,c
 12934  01181E  5C37               	subwf	___ltmod@dividend,w,c
 12935  011820  503B               	movf	___ltmod@divisor+1,w,c
 12936  011822  5838               	subwfb	___ltmod@dividend+1,w,c
 12937  011824  503C               	movf	___ltmod@divisor+2,w,c
 12938  011826  5839               	subwfb	___ltmod@dividend+2,w,c
 12939  011828  A0D8               	btfss	status,0,c
 12940  01182A  D006               	goto	l7968
 12941  01182C  503A               	movf	___ltmod@divisor,w,c
 12942  01182E  5E37               	subwf	___ltmod@dividend,f,c
 12943  011830  503B               	movf	___ltmod@divisor+1,w,c
 12944  011832  5A38               	subwfb	___ltmod@dividend+1,f,c
 12945  011834  503C               	movf	___ltmod@divisor+2,w,c
 12946  011836  5A39               	subwfb	___ltmod@dividend+2,f,c
 12947  011838                     l7968:
 12948  011838  90D8               	bcf	status,0,c
 12949  01183A  323C               	rrcf	___ltmod@divisor+2,f,c
 12950  01183C  323B               	rrcf	___ltmod@divisor+1,f,c
 12951  01183E  323A               	rrcf	___ltmod@divisor,f,c
 12952  011840  2E3D               	decfsz	___ltmod@counter,f,c
 12953  011842  D7EC               	goto	u1950
 12954  011844                     l4911:
 12955  011844  C037  F037         	movff	___ltmod@dividend,?___ltmod
 12956  011848  C038  F038         	movff	___ltmod@dividend+1,?___ltmod+1
 12957  01184C  C039  F039         	movff	___ltmod@dividend+2,?___ltmod+2
 12958  011850  0012               	return		;funcret
 12959  011852                     __end_of___ltmod:
 12960                           	opt callstack 0
 12961                           
 12962 ;; *************** function ___ltdiv *****************
 12963 ;; Defined at:
 12964 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/ltdiv.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;  dividend        3    0[COMRAM] unsigned um
 12967 ;;  divisor         3    3[COMRAM] unsigned um
 12968 ;; Auto vars:     Size  Location     Type
 12969 ;;  quotient        3    6[COMRAM] unsigned um
 12970 ;;  counter         1    9[COMRAM] unsigned char 
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  3    0[COMRAM] unsigned um
 12973 ;; Registers used:
 12974 ;;		wreg, status,2, status,0
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;Total ram usage:       10 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; This function calls:
 12987 ;;		Nothing
 12988 ;; This function is called by:
 12989 ;;		_displ_hex
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           	psect	text97
 12994  01145A                     __ptext97:
 12995                           	opt callstack 0
 12996  01145A                     ___ltdiv:
 12997                           	opt callstack 25
 12998                           
 12999                           ;incstack = 0
 13000  01145A  0E00               	movlw	0
 13001  01145C  6E3D               	movwf	___ltdiv@quotient,c
 13002  01145E  0E00               	movlw	0
 13003  011460  6E3E               	movwf	___ltdiv@quotient+1,c
 13004  011462  0E00               	movlw	0
 13005  011464  6E3F               	movwf	___ltdiv@quotient+2,c
 13006  011466  503A               	movf	___ltdiv@divisor,w,c
 13007  011468  103B               	iorwf	___ltdiv@divisor+1,w,c
 13008  01146A  103C               	iorwf	___ltdiv@divisor+2,w,c
 13009  01146C  B4D8               	btfsc	status,2,c
 13010  01146E  D023               	goto	l4901
 13011  011470  0E01               	movlw	1
 13012  011472  6E40               	movwf	___ltdiv@counter,c
 13013  011474  D005               	goto	l7944
 13014  011476                     l7942:
 13015  011476  90D8               	bcf	status,0,c
 13016  011478  363A               	rlcf	___ltdiv@divisor,f,c
 13017  01147A  363B               	rlcf	___ltdiv@divisor+1,f,c
 13018  01147C  363C               	rlcf	___ltdiv@divisor+2,f,c
 13019  01147E  2A40               	incf	___ltdiv@counter,f,c
 13020  011480                     l7944:
 13021  011480  AE3C               	btfss	___ltdiv@divisor+2,7,c
 13022  011482  D7F9               	goto	l7942
 13023  011484                     u1920:
 13024  011484  90D8               	bcf	status,0,c
 13025  011486  363D               	rlcf	___ltdiv@quotient,f,c
 13026  011488  363E               	rlcf	___ltdiv@quotient+1,f,c
 13027  01148A  363F               	rlcf	___ltdiv@quotient+2,f,c
 13028  01148C  503A               	movf	___ltdiv@divisor,w,c
 13029  01148E  5C37               	subwf	___ltdiv@dividend,w,c
 13030  011490  503B               	movf	___ltdiv@divisor+1,w,c
 13031  011492  5838               	subwfb	___ltdiv@dividend+1,w,c
 13032  011494  503C               	movf	___ltdiv@divisor+2,w,c
 13033  011496  5839               	subwfb	___ltdiv@dividend+2,w,c
 13034  011498  A0D8               	btfss	status,0,c
 13035  01149A  D007               	goto	l4906
 13036  01149C  503A               	movf	___ltdiv@divisor,w,c
 13037  01149E  5E37               	subwf	___ltdiv@dividend,f,c
 13038  0114A0  503B               	movf	___ltdiv@divisor+1,w,c
 13039  0114A2  5A38               	subwfb	___ltdiv@dividend+1,f,c
 13040  0114A4  503C               	movf	___ltdiv@divisor+2,w,c
 13041  0114A6  5A39               	subwfb	___ltdiv@dividend+2,f,c
 13042  0114A8  803D               	bsf	___ltdiv@quotient,0,c
 13043  0114AA                     l4906:
 13044  0114AA  90D8               	bcf	status,0,c
 13045  0114AC  323C               	rrcf	___ltdiv@divisor+2,f,c
 13046  0114AE  323B               	rrcf	___ltdiv@divisor+1,f,c
 13047  0114B0  323A               	rrcf	___ltdiv@divisor,f,c
 13048  0114B2  2E40               	decfsz	___ltdiv@counter,f,c
 13049  0114B4  D7E7               	goto	u1920
 13050  0114B6                     l4901:
 13051  0114B6  C03D  F037         	movff	___ltdiv@quotient,?___ltdiv
 13052  0114BA  C03E  F038         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13053  0114BE  C03F  F039         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13054  0114C2  0012               	return		;funcret
 13055  0114C4                     __end_of___ltdiv:
 13056                           	opt callstack 0
 13057                           
 13058 ;; *************** function _credit_check *****************
 13059 ;; Defined at:
 13060 ;;		line 149 in file "vend.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;		None
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      unsigned char 
 13067 ;; Registers used:
 13068 ;;		wreg, status,2, status,0, cstack
 13069 ;; Tracked objects:
 13070 ;;		On entry : 0/0
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13078 ;;Total ram usage:        0 bytes
 13079 ;; Hardware stack levels used:    1
 13080 ;; Hardware stack levels required when called:    1
 13081 ;; This function calls:
 13082 ;;		_DATAEE_ReadByte
 13083 ;; This function is called by:
 13084 ;;		_displ_credit
 13085 ;;		_vend_init
 13086 ;;		_price_check
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           
 13090                           	psect	text98
 13091  012238                     __ptext98:
 13092                           	opt callstack 0
 13093  012238                     _credit_check:
 13094                           	opt callstack 28
 13095                           
 13096                           ;incstack = 0
 13097  012238  0E00               	movlw	0
 13098  01223A  6E38               	movwf	DATAEE_ReadByte@bAdd+1,c
 13099  01223C  0E00               	movlw	0
 13100  01223E  6E37               	movwf	DATAEE_ReadByte@bAdd,c
 13101  012240  ECB4  F090         	call	_DATAEE_ReadByte	;wreg free
 13102  012244  6E23               	movwf	_cash,c	;volatile
 13103                           
 13104                           ;vend.c: 152:     return(cash);
 13105  012246  5023               	movf	_cash,w,c	;volatile
 13106  012248  0012               	return		;funcret
 13107  01224A                     __end_of_credit_check:
 13108                           	opt callstack 0
 13109                           
 13110 ;; *************** function _DATAEE_ReadByte *****************
 13111 ;; Defined at:
 13112 ;;		line 191 in file "mcc_generated_files/memory.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  bAdd            2    0[COMRAM] unsigned short 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;		None
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      unsigned char 
 13119 ;; Registers used:
 13120 ;;		wreg, status,2, status,0
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13130 ;;Total ram usage:        2 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		_main
 13136 ;;		_Init_vendmem
 13137 ;;		_vend_init
 13138 ;;		_Read_NVstore
 13139 ;;		_credit_add
 13140 ;;		_credit_subtract
 13141 ;;		_credit_check
 13142 ;;		_Audit
 13143 ;;		_Hopper_coin
 13144 ;;		_set_price
 13145 ;;		_Vend_timeset
 13146 ;;		_Link_chan
 13147 ;;		_off_sens
 13148 ;;		_mdb_init
 13149 ;;		_give_change
 13150 ;;		_price_check
 13151 ;;		_dispense
 13152 ;;		_set_motortime
 13153 ;;		_disable_channel
 13154 ;;		_update_vends
 13155 ;;		_init_pricestore
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           	psect	text99
 13160  012168                     __ptext99:
 13161                           	opt callstack 0
 13162  012168                     _DATAEE_ReadByte:
 13163                           	opt callstack 28
 13164                           
 13165                           ;mcc_generated_files/memory.c: 191: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 192: {;mcc_generated_files/memory.c: 193:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
 13166                           
 13167                           ;incstack = 0
 13168  012168  5038               	movf	DATAEE_ReadByte@bAdd+1,w,c
 13169  01216A  0B03               	andlw	3
 13170  01216C  6E7F               	movwf	3967,c	;volatile
 13171                           
 13172                           ;mcc_generated_files/memory.c: 194:     NVMADRL = (bAdd & 0xFF);
 13173  01216E  C037  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 13174                           
 13175                           ;mcc_generated_files/memory.c: 195:     NVMCON1bits.NVMREG = 0;
 13176  012172  0E3F               	movlw	-193
 13177  012174  1681               	andwf	3969,f,c	;volsfr
 13178                           
 13179                           ;mcc_generated_files/memory.c: 196:     NVMCON1bits.RD = 1;
 13180  012176  8081               	bsf	3969,0,c	;volsfr
 13181                           
 13182                           ;mcc_generated_files/memory.c: 197:     __nop();
 13183  012178  F000               	nop	
 13184                           
 13185                           ;mcc_generated_files/memory.c: 198:     __nop();
 13186  01217A  F000               	nop	
 13187                           
 13188                           ;mcc_generated_files/memory.c: 200:     return (NVMDAT);
 13189  01217C  5080               	movf	3968,w,c	;volatile
 13190  01217E  0012               	return		;funcret
 13191  012180                     __end_of_DATAEE_ReadByte:
 13192                           	opt callstack 0
 13193                           
 13194 ;; *************** function _SYSTEM_Initialize *****************
 13195 ;; Defined at:
 13196 ;;		line 116 in file "mcc_generated_files/mcc.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;		None
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      void 
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0, cstack
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13214 ;;Total ram usage:        0 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    1
 13217 ;; This function calls:
 13218 ;;		_CMP1_Initialize
 13219 ;;		_DAC1_Initialize
 13220 ;;		_EUSART1_Initialize
 13221 ;;		_OSCILLATOR_Initialize
 13222 ;;		_PIN_MANAGER_Initialize
 13223 ;;		_PMD_Initialize
 13224 ;;		_TMR0_Initialize
 13225 ;;		_TMR1_Initialize
 13226 ;;		_TMR2_Initialize
 13227 ;;		_TMR3_Initialize
 13228 ;;		_TMR4_Initialize
 13229 ;;		_TMR5_Initialize
 13230 ;; This function is called by:
 13231 ;;		_main
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text100
 13236  011EA2                     __ptext100:
 13237                           	opt callstack 0
 13238  011EA2                     _SYSTEM_Initialize:
 13239                           	opt callstack 29
 13240                           
 13241                           ;mcc_generated_files/mcc.c: 118:     PMD_Initialize();
 13242                           
 13243                           ;incstack = 0
 13244  011EA2  EC82  F090         	call	_PMD_Initialize	;wreg free
 13245                           
 13246                           ;mcc_generated_files/mcc.c: 119:     PIN_MANAGER_Initialize();
 13247  011EA6  EC85  F089         	call	_PIN_MANAGER_Initialize	;wreg free
 13248                           
 13249                           ;mcc_generated_files/mcc.c: 120:     OSCILLATOR_Initialize();
 13250  011EAA  ECC0  F090         	call	_OSCILLATOR_Initialize	;wreg free
 13251                           
 13252                           ;mcc_generated_files/mcc.c: 121:     CMP1_Initialize();
 13253  011EAE  ECF7  F090         	call	_CMP1_Initialize	;wreg free
 13254                           
 13255                           ;mcc_generated_files/mcc.c: 122:     TMR3_Initialize();
 13256  011EB2  ECCF  F08E         	call	_TMR3_Initialize	;wreg free
 13257                           
 13258                           ;mcc_generated_files/mcc.c: 123:     TMR4_Initialize();
 13259  011EB6  EC74  F090         	call	_TMR4_Initialize	;wreg free
 13260                           
 13261                           ;mcc_generated_files/mcc.c: 124:     DAC1_Initialize();
 13262  011EBA  EC41  F091         	call	_DAC1_Initialize	;wreg free
 13263                           
 13264                           ;mcc_generated_files/mcc.c: 125:     TMR2_Initialize();
 13265  011EBE  EC49  F090         	call	_TMR2_Initialize	;wreg free
 13266                           
 13267                           ;mcc_generated_files/mcc.c: 126:     TMR5_Initialize();
 13268  011EC2  ECB4  F08E         	call	_TMR5_Initialize	;wreg free
 13269                           
 13270                           ;mcc_generated_files/mcc.c: 127:     TMR1_Initialize();
 13271  011EC6  ECEA  F08E         	call	_TMR1_Initialize	;wreg free
 13272                           
 13273                           ;mcc_generated_files/mcc.c: 128:     TMR0_Initialize();
 13274  011ECA  EC99  F08F         	call	_TMR0_Initialize	;wreg free
 13275                           
 13276                           ;mcc_generated_files/mcc.c: 129:     EUSART1_Initialize();
 13277  011ECE  ECE2  F090         	call	_EUSART1_Initialize	;wreg free
 13278  011ED2  0012               	return		;funcret
 13279  011ED4                     __end_of_SYSTEM_Initialize:
 13280                           	opt callstack 0
 13281                           
 13282 ;; *************** function _TMR5_Initialize *****************
 13283 ;; Defined at:
 13284 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;		None
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;		None
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1    wreg      void 
 13291 ;; Registers used:
 13292 ;;		wreg, status,2, status,0
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13302 ;;Total ram usage:        2 bytes
 13303 ;; Hardware stack levels used:    1
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_SYSTEM_Initialize
 13308 ;;		_mdb_unlock
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text101
 13313  011D68                     __ptext101:
 13314                           	opt callstack 0
 13315  011D68                     _TMR5_Initialize:
 13316                           	opt callstack 26
 13317                           
 13318                           ;mcc_generated_files/tmr5.c: 67:     T5GCON = 0x00;
 13319                           
 13320                           ;incstack = 0
 13321  011D68  0E00               	movlw	0
 13322  011D6A  6EC4               	movwf	4036,c	;volatile
 13323                           
 13324                           ;mcc_generated_files/tmr5.c: 70:     T5GATE = 0x00;
 13325  011D6C  0E00               	movlw	0
 13326  011D6E  6EC5               	movwf	4037,c	;volatile
 13327                           
 13328                           ;mcc_generated_files/tmr5.c: 73:     T5CLK = 0x04;
 13329  011D70  0E04               	movlw	4
 13330  011D72  6EC6               	movwf	4038,c	;volatile
 13331                           
 13332                           ;mcc_generated_files/tmr5.c: 76:     TMR5H = 0xE1;
 13333  011D74  0EE1               	movlw	225
 13334  011D76  6EC2               	movwf	4034,c	;volatile
 13335                           
 13336                           ;mcc_generated_files/tmr5.c: 79:     TMR5L = 0xBA;
 13337  011D78  0EBA               	movlw	186
 13338  011D7A  6EC1               	movwf	4033,c	;volatile
 13339                           
 13340                           ;mcc_generated_files/tmr5.c: 82:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13341  011D7C  50C1               	movf	4033,w,c	;volatile
 13342  011D7E  CFC2 F037          	movff	4034,??_TMR5_Initialize	;volatile
 13343  011D82  6A38               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 13344  011D84  C037  F038         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13345  011D88  6A37               	clrf	??_TMR5_Initialize,c
 13346  011D8A  1037               	iorwf	??_TMR5_Initialize,w,c
 13347  011D8C  0100               	movlb	0	; () banked
 13348  011D8E  6FA8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13349  011D90  5038               	movf	??_TMR5_Initialize+1,w,c
 13350  011D92  6FA9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;mcc_generated_files/tmr5.c: 85:     PIR4bits.TMR5IF = 0;
 13354  011D94  010E               	movlb	14	; () banked
 13355  011D96  99CE               	bcf	206,4,b	;volatile
 13356                           
 13357                           ; BSR set to: 14
 13358                           ;mcc_generated_files/tmr5.c: 88:     T5CON = 0x01;
 13359  011D98  0E01               	movlw	1
 13360  011D9A  6EC3               	movwf	4035,c	;volatile
 13361                           
 13362                           ; BSR set to: 14
 13363  011D9C  0012               	return		;funcret
 13364  011D9E                     __end_of_TMR5_Initialize:
 13365                           	opt callstack 0
 13366                           
 13367 ;; *************** function _TMR4_Initialize *****************
 13368 ;; Defined at:
 13369 ;;		line 61 in file "mcc_generated_files/tmr4.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;		None
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      void 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; This function calls:
 13390 ;;		Nothing
 13391 ;; This function is called by:
 13392 ;;		_SYSTEM_Initialize
 13393 ;;		_Reset_hopper
 13394 ;;		_pay_coin
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           	psect	text102
 13399  0120E8                     __ptext102:
 13400                           	opt callstack 0
 13401  0120E8                     _TMR4_Initialize:
 13402                           	opt callstack 26
 13403                           
 13404                           ;mcc_generated_files/tmr4.c: 66:     T4CLKCON = 0x04;
 13405                           
 13406                           ; BSR set to: 14
 13407                           ;incstack = 0
 13408  0120E8  0E04               	movlw	4
 13409  0120EA  6EB9               	movwf	4025,c	;volatile
 13410                           
 13411                           ;mcc_generated_files/tmr4.c: 69:     T4HLT = 0x00;
 13412  0120EC  0E00               	movlw	0
 13413  0120EE  6EB8               	movwf	4024,c	;volatile
 13414                           
 13415                           ;mcc_generated_files/tmr4.c: 72:     T4RST = 0x00;
 13416  0120F0  0E00               	movlw	0
 13417  0120F2  6EBA               	movwf	4026,c	;volatile
 13418                           
 13419                           ;mcc_generated_files/tmr4.c: 75:     T4PR = 0x4B;
 13420  0120F4  0E4B               	movlw	75
 13421  0120F6  6EB6               	movwf	4022,c	;volatile
 13422                           
 13423                           ;mcc_generated_files/tmr4.c: 78:     T4TMR = 0x00;
 13424  0120F8  0E00               	movlw	0
 13425  0120FA  6EB5               	movwf	4021,c	;volatile
 13426                           
 13427                           ;mcc_generated_files/tmr4.c: 81:     PIR4bits.TMR4IF = 0;
 13428  0120FC  010E               	movlb	14	; () banked
 13429  0120FE  97CE               	bcf	206,3,b	;volatile
 13430                           
 13431                           ; BSR set to: 14
 13432                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0xFF;
 13433  012100  68B7               	setf	4023,c	;volatile
 13434                           
 13435                           ; BSR set to: 14
 13436  012102  0012               	return		;funcret
 13437  012104                     __end_of_TMR4_Initialize:
 13438                           	opt callstack 0
 13439                           
 13440 ;; *************** function _TMR3_Initialize *****************
 13441 ;; Defined at:
 13442 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1    wreg      void 
 13449 ;; Registers used:
 13450 ;;		wreg, status,2, status,0
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;Total ram usage:        2 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_SYSTEM_Initialize
 13466 ;;		_mdb_poll
 13467 ;;		_mdb_unlock
 13468 ;;		_cctalk_comm
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text103
 13473  011D9E                     __ptext103:
 13474                           	opt callstack 0
 13475  011D9E                     _TMR3_Initialize:
 13476                           	opt callstack 26
 13477                           
 13478                           ;mcc_generated_files/tmr3.c: 67:     T3GCON = 0x00;
 13479                           
 13480                           ; BSR set to: 14
 13481                           ;incstack = 0
 13482  011D9E  0E00               	movlw	0
 13483  011DA0  6ECA               	movwf	4042,c	;volatile
 13484                           
 13485                           ;mcc_generated_files/tmr3.c: 70:     T3GATE = 0x00;
 13486  011DA2  0E00               	movlw	0
 13487  011DA4  6ECB               	movwf	4043,c	;volatile
 13488                           
 13489                           ;mcc_generated_files/tmr3.c: 73:     T3CLK = 0x05;
 13490  011DA6  0E05               	movlw	5
 13491  011DA8  6ECC               	movwf	4044,c	;volatile
 13492                           
 13493                           ;mcc_generated_files/tmr3.c: 76:     TMR3H = 0x9E;
 13494  011DAA  0E9E               	movlw	158
 13495  011DAC  6EC8               	movwf	4040,c	;volatile
 13496                           
 13497                           ;mcc_generated_files/tmr3.c: 79:     TMR3L = 0x58;
 13498  011DAE  0E58               	movlw	88
 13499  011DB0  6EC7               	movwf	4039,c	;volatile
 13500                           
 13501                           ;mcc_generated_files/tmr3.c: 82:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13502  011DB2  50C7               	movf	4039,w,c	;volatile
 13503  011DB4  CFC8 F037          	movff	4040,??_TMR3_Initialize	;volatile
 13504  011DB8  6A38               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 13505  011DBA  C037  F038         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13506  011DBE  6A37               	clrf	??_TMR3_Initialize,c
 13507  011DC0  1037               	iorwf	??_TMR3_Initialize,w,c
 13508  011DC2  0100               	movlb	0	; () banked
 13509  011DC4  6FAA               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13510  011DC6  5038               	movf	??_TMR3_Initialize+1,w,c
 13511  011DC8  6FAB               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;mcc_generated_files/tmr3.c: 85:     PIR4bits.TMR3IF = 0;
 13515  011DCA  010E               	movlb	14	; () banked
 13516  011DCC  95CE               	bcf	206,2,b	;volatile
 13517                           
 13518                           ; BSR set to: 14
 13519                           ;mcc_generated_files/tmr3.c: 88:     T3CON = 0x01;
 13520  011DCE  0E01               	movlw	1
 13521  011DD0  6EC9               	movwf	4041,c	;volatile
 13522                           
 13523                           ; BSR set to: 14
 13524  011DD2  0012               	return		;funcret
 13525  011DD4                     __end_of_TMR3_Initialize:
 13526                           	opt callstack 0
 13527                           
 13528 ;; *************** function _TMR2_Initialize *****************
 13529 ;; Defined at:
 13530 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;		None
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg, status,2
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;Total ram usage:        0 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		_SYSTEM_Initialize
 13554 ;;		_pay_coin
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text104
 13559  012092                     __ptext104:
 13560                           	opt callstack 0
 13561  012092                     _TMR2_Initialize:
 13562                           	opt callstack 26
 13563                           
 13564                           ;mcc_generated_files/tmr2.c: 66:     T2CLKCON = 0x05;
 13565                           
 13566                           ; BSR set to: 14
 13567                           ;incstack = 0
 13568  012092  0E05               	movlw	5
 13569  012094  6EBF               	movwf	4031,c	;volatile
 13570                           
 13571                           ;mcc_generated_files/tmr2.c: 69:     T2HLT = 0x20;
 13572  012096  0E20               	movlw	32
 13573  012098  6EBE               	movwf	4030,c	;volatile
 13574                           
 13575                           ;mcc_generated_files/tmr2.c: 72:     T2RST = 0x00;
 13576  01209A  0E00               	movlw	0
 13577  01209C  6EC0               	movwf	4032,c	;volatile
 13578                           
 13579                           ;mcc_generated_files/tmr2.c: 75:     T2PR = 0x85;
 13580  01209E  0E85               	movlw	133
 13581  0120A0  6EBC               	movwf	4028,c	;volatile
 13582                           
 13583                           ;mcc_generated_files/tmr2.c: 78:     T2TMR = 0x00;
 13584  0120A2  0E00               	movlw	0
 13585  0120A4  6EBB               	movwf	4027,c	;volatile
 13586                           
 13587                           ;mcc_generated_files/tmr2.c: 81:     PIR4bits.TMR2IF = 0;
 13588  0120A6  010E               	movlb	14	; () banked
 13589  0120A8  93CE               	bcf	206,1,b	;volatile
 13590                           
 13591                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0xF1;
 13592  0120AA  0EF1               	movlw	241
 13593  0120AC  6EBD               	movwf	4029,c	;volatile
 13594                           
 13595                           ; BSR set to: 14
 13596  0120AE  0012               	return		;funcret
 13597  0120B0                     __end_of_TMR2_Initialize:
 13598                           	opt callstack 0
 13599                           
 13600 ;; *************** function _TMR1_Initialize *****************
 13601 ;; Defined at:
 13602 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1    wreg      void 
 13609 ;; Registers used:
 13610 ;;		wreg, status,2, status,0
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13620 ;;Total ram usage:        2 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; This function calls:
 13623 ;;		Nothing
 13624 ;; This function is called by:
 13625 ;;		_SYSTEM_Initialize
 13626 ;;		_mdb_comm
 13627 ;;		_mdb_unlock
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           	psect	text105
 13632  011DD4                     __ptext105:
 13633                           	opt callstack 0
 13634  011DD4                     _TMR1_Initialize:
 13635                           	opt callstack 26
 13636                           
 13637                           ;mcc_generated_files/tmr1.c: 67:     T1GCON = 0x00;
 13638                           
 13639                           ; BSR set to: 14
 13640                           ;incstack = 0
 13641  011DD4  0E00               	movlw	0
 13642  011DD6  6ED0               	movwf	4048,c	;volatile
 13643                           
 13644                           ;mcc_generated_files/tmr1.c: 70:     T1GATE = 0x00;
 13645  011DD8  0E00               	movlw	0
 13646  011DDA  6ED1               	movwf	4049,c	;volatile
 13647                           
 13648                           ;mcc_generated_files/tmr1.c: 73:     T1CLK = 0x05;
 13649  011DDC  0E05               	movlw	5
 13650  011DDE  6ED2               	movwf	4050,c	;volatile
 13651                           
 13652                           ;mcc_generated_files/tmr1.c: 76:     TMR1H = 0xF6;
 13653  011DE0  0EF6               	movlw	246
 13654  011DE2  6ECE               	movwf	4046,c	;volatile
 13655                           
 13656                           ;mcc_generated_files/tmr1.c: 79:     TMR1L = 0x3C;
 13657  011DE4  0E3C               	movlw	60
 13658  011DE6  6ECD               	movwf	4045,c	;volatile
 13659                           
 13660                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13661  011DE8  50CD               	movf	4045,w,c	;volatile
 13662  011DEA  CFCE F037          	movff	4046,??_TMR1_Initialize	;volatile
 13663  011DEE  6A38               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13664  011DF0  C037  F038         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13665  011DF4  6A37               	clrf	??_TMR1_Initialize,c
 13666  011DF6  1037               	iorwf	??_TMR1_Initialize,w,c
 13667  011DF8  0100               	movlb	0	; () banked
 13668  011DFA  6FAC               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13669  011DFC  5038               	movf	??_TMR1_Initialize+1,w,c
 13670  011DFE  6FAD               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;mcc_generated_files/tmr1.c: 85:     PIR4bits.TMR1IF = 0;
 13674  011E00  010E               	movlb	14	; () banked
 13675  011E02  91CE               	bcf	206,0,b	;volatile
 13676                           
 13677                           ; BSR set to: 14
 13678                           ;mcc_generated_files/tmr1.c: 88:     T1CON = 0x01;
 13679  011E04  0E01               	movlw	1
 13680  011E06  6ECF               	movwf	4047,c	;volatile
 13681                           
 13682                           ; BSR set to: 14
 13683  011E08  0012               	return		;funcret
 13684  011E0A                     __end_of_TMR1_Initialize:
 13685                           	opt callstack 0
 13686                           
 13687 ;; *************** function _TMR0_Initialize *****************
 13688 ;; Defined at:
 13689 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 13690 ;; Parameters:    Size  Location     Type
 13691 ;;		None
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;		None
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  1    wreg      void 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13707 ;;Total ram usage:        2 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_SYSTEM_Initialize
 13713 ;; This function uses a non-reentrant model
 13714 ;;
 13715                           
 13716                           	psect	text106
 13717  011F32                     __ptext106:
 13718                           	opt callstack 0
 13719  011F32                     _TMR0_Initialize:
 13720                           	opt callstack 29
 13721                           
 13722                           ;mcc_generated_files/tmr0.c: 69:     T0CON1 = 0x82;
 13723                           
 13724                           ; BSR set to: 14
 13725                           ;incstack = 0
 13726  011F32  0E82               	movlw	130
 13727  011F34  6ED6               	movwf	4054,c	;volatile
 13728                           
 13729                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0xA2;
 13730  011F36  0EA2               	movlw	162
 13731  011F38  6ED4               	movwf	4052,c	;volatile
 13732                           
 13733                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x27;
 13734  011F3A  0E27               	movlw	39
 13735  011F3C  6ED3               	movwf	4051,c	;volatile
 13736                           
 13737                           ;mcc_generated_files/tmr0.c: 78:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 13738  011F3E  50D3               	movf	4051,w,c	;volatile
 13739  011F40  CFD4 F037          	movff	4052,??_TMR0_Initialize	;volatile
 13740  011F44  6A38               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13741  011F46  C037  F038         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13742  011F4A  6A37               	clrf	??_TMR0_Initialize,c
 13743  011F4C  1037               	iorwf	??_TMR0_Initialize,w,c
 13744  011F4E  0100               	movlb	0	; () banked
 13745  011F50  6FA6               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 13746  011F52  5038               	movf	??_TMR0_Initialize+1,w,c
 13747  011F54  6FA7               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 13751  011F56  010E               	movlb	14	; () banked
 13752  011F58  9BCA               	bcf	202,5,b	;volatile
 13753                           
 13754                           ; BSR set to: 14
 13755                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x90;
 13756  011F5A  0E90               	movlw	144
 13757  011F5C  6ED5               	movwf	4053,c	;volatile
 13758                           
 13759                           ; BSR set to: 14
 13760  011F5E  0012               	return		;funcret
 13761  011F60                     __end_of_TMR0_Initialize:
 13762                           	opt callstack 0
 13763                           
 13764 ;; *************** function _PMD_Initialize *****************
 13765 ;; Defined at:
 13766 ;;		line 146 in file "mcc_generated_files/mcc.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg, status,2
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;Total ram usage:        0 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; This function calls:
 13787 ;;		Nothing
 13788 ;; This function is called by:
 13789 ;;		_SYSTEM_Initialize
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text107
 13794  012104                     __ptext107:
 13795                           	opt callstack 0
 13796  012104                     _PMD_Initialize:
 13797                           	opt callstack 29
 13798                           
 13799                           ;mcc_generated_files/mcc.c: 149:     PMD0 = 0x00;
 13800                           
 13801                           ; BSR set to: 14
 13802                           ;incstack = 0
 13803  012104  0E00               	movlw	0
 13804  012106  010E               	movlb	14	; () banked
 13805  012108  6FE1               	movwf	225,b	;volatile
 13806                           
 13807                           ;mcc_generated_files/mcc.c: 151:     PMD1 = 0x00;
 13808  01210A  0E00               	movlw	0
 13809  01210C  6FE2               	movwf	226,b	;volatile
 13810                           
 13811                           ;mcc_generated_files/mcc.c: 153:     PMD2 = 0x00;
 13812  01210E  0E00               	movlw	0
 13813  012110  6FE3               	movwf	227,b	;volatile
 13814                           
 13815                           ;mcc_generated_files/mcc.c: 155:     PMD3 = 0x00;
 13816  012112  0E00               	movlw	0
 13817  012114  6FE4               	movwf	228,b	;volatile
 13818                           
 13819                           ;mcc_generated_files/mcc.c: 157:     PMD4 = 0x00;
 13820  012116  0E00               	movlw	0
 13821  012118  6FE5               	movwf	229,b	;volatile
 13822                           
 13823                           ;mcc_generated_files/mcc.c: 159:     PMD5 = 0x00;
 13824  01211A  0E00               	movlw	0
 13825  01211C  6FE6               	movwf	230,b	;volatile
 13826                           
 13827                           ; BSR set to: 14
 13828  01211E  0012               	return		;funcret
 13829  012120                     __end_of_PMD_Initialize:
 13830                           	opt callstack 0
 13831                           
 13832 ;; *************** function _PIN_MANAGER_Initialize *****************
 13833 ;; Defined at:
 13834 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;		None
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;		None
 13839 ;; Return value:  Size  Location     Type
 13840 ;;                  1    wreg      void 
 13841 ;; Registers used:
 13842 ;;		wreg, status,2
 13843 ;; Tracked objects:
 13844 ;;		On entry : 0/0
 13845 ;;		On exit  : 0/0
 13846 ;;		Unchanged: 0/0
 13847 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;Total ram usage:        0 bytes
 13853 ;; Hardware stack levels used:    1
 13854 ;; This function calls:
 13855 ;;		Nothing
 13856 ;; This function is called by:
 13857 ;;		_SYSTEM_Initialize
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text108
 13862  01130A                     __ptext108:
 13863                           	opt callstack 0
 13864  01130A                     _PIN_MANAGER_Initialize:
 13865                           	opt callstack 29
 13866                           
 13867                           ;mcc_generated_files/pin_manager.c: 57:     LATE = 0x00;
 13868                           
 13869                           ; BSR set to: 14
 13870                           ;incstack = 0
 13871  01130A  0E00               	movlw	0
 13872  01130C  6E87               	movwf	3975,c	;volatile
 13873                           
 13874                           ;mcc_generated_files/pin_manager.c: 58:     LATD = 0x00;
 13875  01130E  0E00               	movlw	0
 13876  011310  6E86               	movwf	3974,c	;volatile
 13877                           
 13878                           ;mcc_generated_files/pin_manager.c: 59:     LATA = 0xC0;
 13879  011312  0EC0               	movlw	192
 13880  011314  6E83               	movwf	3971,c	;volatile
 13881                           
 13882                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 13883  011316  0E00               	movlw	0
 13884  011318  6E84               	movwf	3972,c	;volatile
 13885                           
 13886                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x40;
 13887  01131A  0E40               	movlw	64
 13888  01131C  6E85               	movwf	3973,c	;volatile
 13889                           
 13890                           ;mcc_generated_files/pin_manager.c: 66:     TRISE = 0x00;
 13891  01131E  0E00               	movlw	0
 13892  011320  6E8C               	movwf	3980,c	;volatile
 13893                           
 13894                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x1F;
 13895  011322  0E1F               	movlw	31
 13896  011324  6E88               	movwf	3976,c	;volatile
 13897                           
 13898                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 13899  011326  0EF0               	movlw	240
 13900  011328  6E89               	movwf	3977,c	;volatile
 13901                           
 13902                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x80;
 13903  01132A  0E80               	movlw	128
 13904  01132C  6E8A               	movwf	3978,c	;volatile
 13905                           
 13906                           ;mcc_generated_files/pin_manager.c: 70:     TRISD = 0x00;
 13907  01132E  0E00               	movlw	0
 13908  011330  6E8B               	movwf	3979,c	;volatile
 13909                           
 13910                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0x00;
 13911  011332  0E00               	movlw	0
 13912  011334  010F               	movlb	15	; () banked
 13913  011336  6F21               	movwf	33,b	;volatile
 13914                           
 13915                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0xC0;
 13916  011338  0EC0               	movlw	192
 13917  01133A  6F19               	movwf	25,b	;volatile
 13918                           
 13919                           ;mcc_generated_files/pin_manager.c: 77:     ANSELD = 0x00;
 13920  01133C  0E00               	movlw	0
 13921  01133E  6F26               	movwf	38,b	;volatile
 13922                           
 13923                           ;mcc_generated_files/pin_manager.c: 78:     ANSELE = 0x00;
 13924  011340  0E00               	movlw	0
 13925  011342  6F2E               	movwf	46,b	;volatile
 13926                           
 13927                           ;mcc_generated_files/pin_manager.c: 79:     ANSELA = 0x01;
 13928  011344  0E01               	movlw	1
 13929  011346  6F11               	movwf	17,b	;volatile
 13930                           
 13931                           ;mcc_generated_files/pin_manager.c: 84:     WPUD = 0x00;
 13932  011348  0E00               	movlw	0
 13933  01134A  6F25               	movwf	37,b	;volatile
 13934                           
 13935                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 13936  01134C  0E00               	movlw	0
 13937  01134E  6F2D               	movwf	45,b	;volatile
 13938                           
 13939                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 13940  011350  0E00               	movlw	0
 13941  011352  6F18               	movwf	24,b	;volatile
 13942                           
 13943                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 13944  011354  0E00               	movlw	0
 13945  011356  6F10               	movwf	16,b	;volatile
 13946                           
 13947                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 13948  011358  0E00               	movlw	0
 13949  01135A  6F20               	movwf	32,b	;volatile
 13950                           
 13951                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 13952  01135C  0E00               	movlw	0
 13953  01135E  6F2C               	movwf	44,b	;volatile
 13954                           
 13955                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 13956  011360  0E00               	movlw	0
 13957  011362  6F0F               	movwf	15,b	;volatile
 13958                           
 13959                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 13960  011364  0E00               	movlw	0
 13961  011366  6F17               	movwf	23,b	;volatile
 13962                           
 13963                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 13964  011368  0E00               	movlw	0
 13965  01136A  6F1F               	movwf	31,b	;volatile
 13966                           
 13967                           ;mcc_generated_files/pin_manager.c: 97:     ODCOND = 0x00;
 13968  01136C  0E00               	movlw	0
 13969  01136E  6F24               	movwf	36,b	;volatile
 13970                           
 13971                           ;mcc_generated_files/pin_manager.c: 104:     RX1PPSbits.RXPPS = 0x17;
 13972  011370  010E               	movlb	14	; () banked
 13973  011372  51B5               	movf	181,w,b	;volatile
 13974  011374  0BE0               	andlw	-32
 13975  011376  0917               	iorlw	23
 13976  011378  6FB5               	movwf	181,b	;volatile
 13977                           
 13978                           ;mcc_generated_files/pin_manager.c: 105:     RC6PPS = 0x09;
 13979  01137A  0E09               	movlw	9
 13980  01137C  6FFD               	movwf	253,b	;volatile
 13981                           
 13982                           ; BSR set to: 14
 13983  01137E  0012               	return		;funcret
 13984  011380                     __end_of_PIN_MANAGER_Initialize:
 13985                           	opt callstack 0
 13986                           
 13987 ;; *************** function _OSCILLATOR_Initialize *****************
 13988 ;; Defined at:
 13989 ;;		line 132 in file "mcc_generated_files/mcc.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;Total ram usage:        0 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_SYSTEM_Initialize
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text109
 14017  012180                     __ptext109:
 14018                           	opt callstack 0
 14019  012180                     _OSCILLATOR_Initialize:
 14020                           	opt callstack 29
 14021                           
 14022                           ;mcc_generated_files/mcc.c: 135:     OSCCON1 = 0x60;
 14023                           
 14024                           ; BSR set to: 14
 14025                           ;incstack = 0
 14026  012180  0E60               	movlw	96
 14027  012182  010E               	movlb	14	; () banked
 14028  012184  6FD8               	movwf	216,b	;volatile
 14029                           
 14030                           ;mcc_generated_files/mcc.c: 137:     OSCCON3 = 0x00;
 14031  012186  0E00               	movlw	0
 14032  012188  6FDA               	movwf	218,b	;volatile
 14033                           
 14034                           ;mcc_generated_files/mcc.c: 139:     OSCEN = 0x00;
 14035  01218A  0E00               	movlw	0
 14036  01218C  6FDC               	movwf	220,b	;volatile
 14037                           
 14038                           ;mcc_generated_files/mcc.c: 141:     OSCFRQ = 0x04;
 14039  01218E  0E04               	movlw	4
 14040  012190  6FDE               	movwf	222,b	;volatile
 14041                           
 14042                           ;mcc_generated_files/mcc.c: 143:     OSCTUNE = 0x00;
 14043  012192  0E00               	movlw	0
 14044  012194  6FDD               	movwf	221,b	;volatile
 14045                           
 14046                           ; BSR set to: 14
 14047  012196  0012               	return		;funcret
 14048  012198                     __end_of_OSCILLATOR_Initialize:
 14049                           	opt callstack 0
 14050                           
 14051 ;; *************** function _EUSART1_Initialize *****************
 14052 ;; Defined at:
 14053 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;		None
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;		None
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      void 
 14060 ;; Registers used:
 14061 ;;		wreg, status,2
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14071 ;;Total ram usage:        0 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; This function calls:
 14074 ;;		Nothing
 14075 ;; This function is called by:
 14076 ;;		_SYSTEM_Initialize
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text110
 14081  0121C4                     __ptext110:
 14082                           	opt callstack 0
 14083  0121C4                     _EUSART1_Initialize:
 14084                           	opt callstack 29
 14085                           
 14086                           ;mcc_generated_files/eusart1.c: 58:     BAUD1CON = 0x08;
 14087                           
 14088                           ; BSR set to: 14
 14089                           ;incstack = 0
 14090  0121C4  0E08               	movlw	8
 14091  0121C6  6E9F               	movwf	3999,c	;volatile
 14092                           
 14093                           ;mcc_generated_files/eusart1.c: 61:     RC1STA = 0xD0;
 14094  0121C8  0ED0               	movlw	208
 14095  0121CA  6E9D               	movwf	3997,c	;volatile
 14096                           
 14097                           ;mcc_generated_files/eusart1.c: 64:     TX1STA = 0xEC;
 14098  0121CC  0EEC               	movlw	236
 14099  0121CE  6E9E               	movwf	3998,c	;volatile
 14100                           
 14101                           ;mcc_generated_files/eusart1.c: 67:     SP1BRGL = 0x38;
 14102  0121D0  0E38               	movlw	56
 14103  0121D2  6E9B               	movwf	3995,c	;volatile
 14104                           
 14105                           ;mcc_generated_files/eusart1.c: 70:     SP1BRGH = 0x01;
 14106  0121D4  0E01               	movlw	1
 14107  0121D6  6E9C               	movwf	3996,c	;volatile
 14108  0121D8  0012               	return		;funcret
 14109  0121DA                     __end_of_EUSART1_Initialize:
 14110                           	opt callstack 0
 14111                           
 14112 ;; *************** function _DAC1_Initialize *****************
 14113 ;; Defined at:
 14114 ;;		line 57 in file "mcc_generated_files/dac1.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;		None
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;		None
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      void 
 14121 ;; Registers used:
 14122 ;;		wreg, status,2
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;Total ram usage:        0 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; This function calls:
 14135 ;;		Nothing
 14136 ;; This function is called by:
 14137 ;;		_SYSTEM_Initialize
 14138 ;;		_mdb_unlock
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text111
 14143  012282                     __ptext111:
 14144                           	opt callstack 0
 14145  012282                     _DAC1_Initialize:
 14146                           	opt callstack 26
 14147                           
 14148                           ;mcc_generated_files/dac1.c: 60:     DAC1CON0 = 0x80;
 14149                           
 14150                           ;incstack = 0
 14151  012282  0E80               	movlw	128
 14152  012284  010F               	movlb	15	; () banked
 14153  012286  6F33               	movwf	51,b	;volatile
 14154                           
 14155                           ;mcc_generated_files/dac1.c: 62:     DAC1CON1 = 0x1C;
 14156  012288  0E1C               	movlw	28
 14157  01228A  6F34               	movwf	52,b	;volatile
 14158                           
 14159                           ; BSR set to: 15
 14160  01228C  0012               	return		;funcret
 14161  01228E                     __end_of_DAC1_Initialize:
 14162                           	opt callstack 0
 14163                           
 14164 ;; *************** function _CMP1_Initialize *****************
 14165 ;; Defined at:
 14166 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;		None
 14171 ;; Return value:  Size  Location     Type
 14172 ;;                  1    wreg      void 
 14173 ;; Registers used:
 14174 ;;		wreg, status,2
 14175 ;; Tracked objects:
 14176 ;;		On entry : 0/0
 14177 ;;		On exit  : 0/0
 14178 ;;		Unchanged: 0/0
 14179 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14184 ;;Total ram usage:        0 bytes
 14185 ;; Hardware stack levels used:    1
 14186 ;; This function calls:
 14187 ;;		Nothing
 14188 ;; This function is called by:
 14189 ;;		_SYSTEM_Initialize
 14190 ;;		_mdb_unlock
 14191 ;; This function uses a non-reentrant model
 14192 ;;
 14193                           
 14194                           	psect	text112
 14195  0121EE                     __ptext112:
 14196                           	opt callstack 0
 14197  0121EE                     _CMP1_Initialize:
 14198                           	opt callstack 26
 14199                           
 14200                           ;mcc_generated_files/cmp1.c: 61:     CM1CON0 = 0x90;
 14201                           
 14202                           ; BSR set to: 15
 14203                           ;incstack = 0
 14204  0121EE  0E90               	movlw	144
 14205  0121F0  010F               	movlb	15	; () banked
 14206  0121F2  6F39               	movwf	57,b	;volatile
 14207                           
 14208                           ;mcc_generated_files/cmp1.c: 64:     CM1CON1 = 0x00;
 14209  0121F4  0E00               	movlw	0
 14210  0121F6  6F3A               	movwf	58,b	;volatile
 14211                           
 14212                           ;mcc_generated_files/cmp1.c: 67:     CM1NCH = 0x00;
 14213  0121F8  0E00               	movlw	0
 14214  0121FA  6F3B               	movwf	59,b	;volatile
 14215                           
 14216                           ;mcc_generated_files/cmp1.c: 70:     CM1PCH = 0x05;
 14217  0121FC  0E05               	movlw	5
 14218  0121FE  6F3C               	movwf	60,b	;volatile
 14219                           
 14220                           ; BSR set to: 15
 14221  012200  0012               	return		;funcret
 14222  012202                     __end_of_CMP1_Initialize:
 14223                           	opt callstack 0
 14224                           
 14225                           	psect	rparam
 14226  0000                     tosu	equ	0xFFF
 14227                           tosh	equ	0xFFE
 14228                           tosl	equ	0xFFD
 14229                           stkptr	equ	0xFFC
 14230                           pclatu	equ	0xFFB
 14231                           pclath	equ	0xFFA
 14232                           pcl	equ	0xFF9
 14233                           tblptru	equ	0xFF8
 14234                           tblptrh	equ	0xFF7
 14235                           tblptrl	equ	0xFF6
 14236                           tablat	equ	0xFF5
 14237                           prodh	equ	0xFF4
 14238                           prodl	equ	0xFF3
 14239                           indf0	equ	0xFEF
 14240                           postinc0	equ	0xFEE
 14241                           postdec0	equ	0xFED
 14242                           preinc0	equ	0xFEC
 14243                           plusw0	equ	0xFEB
 14244                           fsr0h	equ	0xFEA
 14245                           fsr0l	equ	0xFE9
 14246                           wreg	equ	0xFE8
 14247                           indf1	equ	0xFE7
 14248                           postinc1	equ	0xFE6
 14249                           postdec1	equ	0xFE5
 14250                           preinc1	equ	0xFE4
 14251                           plusw1	equ	0xFE3
 14252                           fsr1h	equ	0xFE2
 14253                           fsr1l	equ	0xFE1
 14254                           bsr	equ	0xFE0
 14255                           indf2	equ	0xFDF
 14256                           postinc2	equ	0xFDE
 14257                           postdec2	equ	0xFDD
 14258                           preinc2	equ	0xFDC
 14259                           plusw2	equ	0xFDB
 14260                           fsr2h	equ	0xFDA
 14261                           fsr2l	equ	0xFD9
 14262                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1413
    Data        2
    BSS         115
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     38      84
    COMRAMl           2      0       2
    BANK0           160      0      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[67]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> totalvendsm(CODE[7]), vendispmsg(CODE[21]), totalmsg(CODE[8]), cashinmsg(CODE[10]), 
		 -> initnote(CODE[37]), nochange(CODE[33]), noteerr(CODE[28]), credits(CODE[13]), 
		 -> timemsg(CODE[18]), clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), 
		 -> sensoffmsg(CODE[31]), sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), 
		 -> clrmsg(CODE[10]), onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), 
		 -> emptymsg(CODE[9]), inscoin(CODE[39]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _main->_enter_service
    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _price_check->_dispense
    _price_check->_give_change
    _mdb_noten->_mdb_comm
    _give_change->_hopper_pay
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _dispense->_vend_dispense
    _vend_nosense->_mdb_unlock
    _vend_dispense->_set_motortime
    _set_motortime->___wmul
    _disable_channel->_DATAEE_WriteByte
    _update_vends->_DATAEE_WriteByte
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _enter_service->_Vend_setup
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _price_set->_set_price
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _hopper_test->_hopper_pay
    _hopper_pay->_Update_coinsout
    _pay_coin->_Reset_hopper
    _Update_coinsout->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Vend_settime->_Vend_timeset
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Clear_Totals->_DATAEE_WriteByte
    _Chan_link->_Link_chan
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _Audit->_displ_hex
    _Read_NVstore->_DATAEE_ReadByte
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_nochange->_lcd_string
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  485907
                                             35 COMRAMh    3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
                              _butin
                         _credit_add
                       _displ_credit
                     _displ_nochange
                       _displ_noteer
                        _displ_price
                      _enter_service
                        _get_channel
                           _lcd_init
                         _lcd_string
                           _mdb_init
                             _mdb_on
                           _mdb_poll
                        _price_check
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   22454
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                     _find_highprice
                      _find_lowprice
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0    5880
                                              8 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                              5 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _find_lowprice                                        2     2      0      68
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _find_highprice                                       2     2      0      68
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      22
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _price_check                                          5     5      0   70601
                                             15 COMRAMh    5     5      0
                    _DATAEE_ReadByte
                              _butin
                       _credit_check
                    _credit_subtract
                           _dispense
                        _get_channel
                        _give_change
                         _lcd_string
                       _note_disable
 ---------------------------------------------------------------------------------
 (2) _note_disable                                         0     0      0     983
                          _mdb_noten
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _give_change                                          2     2      0   33115
                                             13 COMRAMh    2     2      0
                    _DATAEE_ReadByte
                            ___lbdiv
                         _credit_add
                    _credit_subtract
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _credit_subtract                                      1     1      0    5703
                                              4 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _credit_add                                           1     1      0   13542
                                             11 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (4) _Update_cashaudit                                     1     1      0    7817
                                             10 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAMh    4     3      1
 ---------------------------------------------------------------------------------
 (2) _dispense                                             2     2      0   16434
                                             13 COMRAMh    2     2      0
                    _DATAEE_ReadByte
                       _update_vends
                      _vend_dispense
                       _vend_nosense
 ---------------------------------------------------------------------------------
 (3) _vend_nosense                                         3     3      0      22
                                              3 COMRAMh    3     3      0
                         _mdb_unlock
 ---------------------------------------------------------------------------------
 (3) _vend_dispense                                        3     3      0    8478
                                             10 COMRAMh    3     3      0
                     _TMR0_StopTimer
                    _disable_channel
                         _mdb_unlock
                      _set_motortime
 ---------------------------------------------------------------------------------
 (4) _set_motortime                                        4     4      0    2618
                                              6 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                    _TMR0_StartTimer
                     _TMR0_StopTimer
               _TMR0_Write16bitTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (5) _TMR0_Write16bitTimer                                 2     0      2     120
                                              0 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disable_channel                                      4     4      0    5772
                                              4 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _update_vends                                         2     2      0    5749
                                              4 COMRAMh    2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             3     3      0     894
                                              5 COMRAMh    3     3      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                              2 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                              1 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     474
                                             10 COMRAMh    2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     361
                                              9 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        2     2      0  323076
                                             33 COMRAMh    2     2      0
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                        _hopper_test
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            2     2      0   44269
                                             19 COMRAMh    2     2      0
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         3     3      0   23747
                                             16 COMRAMh    3     3      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    3585
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0    9991
                                             14 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   10461
                                             14 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   28421
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   18337
                                             26 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    2438
                                             25 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (4) _mdb_unlock                                           1     1      0       0
                                              2 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _hopper_test                                          0     0      0   11447
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _hopper_pay                                           2     2      0   11447
                                             11 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                    _Update_coinsout
                         _cctalk_off
                          _cctalk_on
                           _pay_coin
 ---------------------------------------------------------------------------------
 (4) _pay_coin                                             0     0      0       0
                       _Reset_hopper
                    _TMR2_Initialize
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
                        _switch_read
 ---------------------------------------------------------------------------------
 (5) _switch_read                                          1     1      0       0
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _Reset_hopper                                         2     2      0       0
                                              0 COMRAMh    2     2      0
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
 ---------------------------------------------------------------------------------
 (5) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _cctalk_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Update_coinsout                                      1     1      0    7795
                                             10 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (5) _Write_NVstore                                        6     1      5    4403
                                              4 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           2     2      0  141819
                                             31 COMRAMh    2     2      0
                          _Chan_link
                       _Clear_Totals
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   38480
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   28351
                                             27 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   12364
                                             25 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             2     2      0   36966
                                             22 COMRAMh    2     2      0
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             5     5      0   26837
                                             17 COMRAMh    5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   10761
                                             14 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       6     6      0   13623
                                             14 COMRAMh    6     6      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         5     5      0    2278
                                              2 COMRAMh    5     5      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Clear_Totals                                         2     2      0    3631
                                              4 COMRAMh    2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   36780
                                             20 COMRAMh    2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            3     3      0   26651
                                             17 COMRAMh    3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   10662
                                             14 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      23
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           3     3      0   26083
                                             27 COMRAMh    3     3      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   15933
                                             25 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          3     3      0   30067
                                             29 COMRAMh    3     3      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     115
                                              2 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       4     3      1   15832
                                             25 COMRAMh    4     3      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   13531
                                             14 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (6) _DATAEE_WriteByte                                     4     1      3    3585
                                              0 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (2) _Audit                                                1     1      0   17378
                                             25 COMRAMh    1     1      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                       _Read_NVstore
                              _butin
                          _displ_hex
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _get_channel                                          1     1      0      45
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _butin                                                2     2      0      46
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _Read_NVstore                                         6     1      5    3370
                                              2 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   10371
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     425
                                              9 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_nochange                                       0     0      0   10104
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   13917
                                             25 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    9946
                                              9 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    1852
                                             10 COMRAMh   15    12      3
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           3     3      0     293
                                              6 COMRAMh    3     3      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     158
                                              4 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     113
                                              2 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      46
                                              0 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     311
                                              0 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     314
                                              0 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    2096
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    2096
                                              0 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (5) _TMR5_Initialize                                      2     2      0       0
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _butin
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_nochange
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_price
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _enter_service
     _Audit
       _CMP1_GetOutputStatus
       _DATAEE_ReadByte
       _Read_NVstore
         _DATAEE_ReadByte
       _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _get_channel
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Clear_Totals
         _DATAEE_WriteByte
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _hopper_test
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _get_channel
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_on
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _price_check
     _DATAEE_ReadByte
     _butin
     _credit_check
       _DATAEE_ReadByte
     _credit_subtract
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _dispense
       _DATAEE_ReadByte
       _update_vends
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _vend_dispense
         _TMR0_StopTimer
         _disable_channel
           _DATAEE_ReadByte
           _DATAEE_WriteByte
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
         _set_motortime
           _DATAEE_ReadByte
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_Write16bitTimer
           ___wmul
       _vend_nosense
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
     _get_channel
     _give_change
       _DATAEE_ReadByte
       ___lbdiv
       _credit_add
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _Update_cashaudit
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
       _credit_subtract
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _note_disable
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _find_highprice
     _find_lowprice
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0      0      4E       7       48.8%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     26      54       2       98.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           2      0       0       1        0.0%
COMRAMl              2      0       2       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      26        0.0%
DATA                 0      0      A4       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 16 11:17:39 2019

               lcd_writeC@lcdata 003F           __end_of_displ_nochange 2150  
           __end_of_Clear_Totals 1F32           disable_channel@channel 003D  
              ??_disable_channel 003B                     _update_vends 1F8C  
                   ?_displ_price 0000                      __CFG_CP$OFF 000000  
              ??_CMP1_Initialize 0037                    ?_displ_credit 0000  
            ___wmul@multiplicand 0039                  ??_vend_dispense 0041  
                  ?_displ_lflags 0045                    ?_displ_nendis 0037  
                  ?_displ_sflags 0045                  lcd_write@lcdata 003A  
                  ?_displ_noteer 0000                      __CFG_LVP$ON 000000  
                            LATE 000F87                  _DAC1_Initialize 2282  
                            l218 1C76                              _PR2 000FBC  
                            _PR4 000FB6                     __CFG_CPD$OFF 000000  
                _timer1ReloadVal 00AC          __size_of_PMD_Initialize 001C  
                _TMR2_Initialize 2092                              wreg 000FE8  
               ??_Update_Hopcoin 0051                   _DAC1_SetOutput 22A2  
                   ?_give_change 0037                   ??_credit_check 0039  
                    main@channel 005C                     _BAUD1CONbits 000F9F  
                   __CFG_ZCD$OFF 000000                    ?_mdb_security 0000  
                           l1011 0154                             l1020 0200  
                           l1025 01C0                             l1037 026E  
                           l1046 0DDA                             l1057 0D88  
                           l2214 0BA2                             l1504 15C4  
                           l2208 0BE8                             l2241 09C0  
                           l2233 1B94                             l2219 0906  
                _timer3ReloadVal 00AA                             l2156 0C48  
                           l2252 18EC                             l2228 08BA  
                           l2183 0A6A                             l2247 098A  
                           l2087 0E06                             l2185 0A34  
                           l2089 0E62                             l2266 0F66  
                           l2194 1794                             l2283 0B32  
                           l2275 1522                             l1581 1982  
                           l2289 0AFC                             l2840 0788  
                           l2851 128C                             l2836 078E  
                           l4372 013E                             l3910 189C  
                           l4367 004A                             l2857 1252  
                           l4369 0066                             l4394 0FEE  
                           l4901 14B6                             l8022 11A6  
                           l3862 21EA                             l4911 1844  
                           l8032 11F4                             l8024 11AE  
                           l2889 039E                             l4906 14AA  
                           l8026 11B4                             l8202 1EDA  
                           l9010 0FCA                             l8140 1BB4  
                           l8062 0D00                             l8206 1EFA  
                           l8142 1BBA                             l3894 1150  
                           l8064 0D0C                             l8056 0CA8  
                           l8136 1BA8                             l9200 0C3C  
                           l9008 0FBE                             l9210 0C82  
                           l8162 15DC                             l8402 1E5E  
                           l8226 2058                             l9042 1C26  
                           l8068 0D22                             l9212 0C90  
                           l8180 1448                             l8420 0946  
                           l8084 2222                             l9134 0484  
                           l9118 042C                             l8166 15E4  
                           l9230 06E8                             l9054 1C42  
                           l9046 1C2C                             l9144 04BE  
                           l9208 0C60                             l8256 1D64  
                           l9232 06FE                             l9224 06C6  
                           l9330 04FA                             l9138 049E  
                           l8426 0968                             l8418 093E  
                           l8194 1E76                             l8266 1882  
                           l8610 1166                             l9234 0714  
                           l8514 05EA                             l8522 0612  
                           l9058 1C4A                             l7900 1FBE  
                           l9332 0502                             l9324 04E2  
                           l9164 0A1E                             l9156 0A00  
                           l8436 099E                             l8268 1892  
                           l9260 1778                             l9236 072A  
                           l9228 06D2                             l9244 0754  
                           l9308 21B2                             l8540 0640  
                           l9350 0582                             l9342 0562  
                           l9334 050A                             l9326 04EA  
                           l8294 20D4                             l9158 0A08  
                           l9174 0A48                             l8198 1E98  
                           l9238 0740                             l8550 0666  
                           l9352 058A                             l9344 056A  
                           l9328 04F2                             l9336 0512  
                           l8448 0F20                             l8712 12E2  
                           l8704 12B6                             l8536 0638  
                           l9600 02B0                             l9416 1D1E  
                           l7930 1960                             l9346 0572  
                           l9354 0592                             l9338 0548  
                           l8298 20DC                             l9178 0A7A  
                           l8458 0F40                             l8466 0F78  
                           l8730 1F0E                             l8482 0AD6  
                           l8474 0AA6                             l9282 0872  
                           l9274 0852                             l8618 117C  
                           l9266 178A                             l8570 06A8  
                           l9418 1D24                             l9514 0E08  
                           l7924 1948                             l9348 057A  
                           l9196 0C28                             l8716 1302  
                           l8708 12D6                             l8476 0AAE  
                           l8492 0B10                             l9284 0888  
                           l9276 0864                             l9540 0D54  
                           l9604 02B8                             l9372 1CEE  
                           l9380 1C92                             l7942 1476  
                           l7926 1950                             l8750 10AE  
                           l8742 10A0                             l9198 0C30  
                           l8830 18E2                             l8822 18B6  
                           l8734 1F22                             l8814 1B8A  
                           l9286 089E                             l9278 086C  
                           l9550 0D74                             l9542 0D5C  
                           l9622 0302                             l9702 0030  
                           l9374 1CF0                             l7944 1480  
                           l7960 180E                             l7928 1958  
                           l8744 10A4                             l8760 10E2  
                           l8680 1546                             l8808 1B74  
                           l9288 08A4                             l9296 08D2  
                           l8584 1128                             l9544 0D62  
                           l9560 0D94                             l9640 0324  
                           l9632 0314                             l9624 0306  
                           l9608 02C0                             l9616 02CA  
                           l9368 1CCA                             l9384 1CB6  
                           l7962 1818                             l8754 10B8  
                           l8738 1096                             l8682 1556  
                           l8594 1142                             l8922 123E  
                           l8914 1224                             l9554 0D7C  
                           l9546 0D68                             l9490 13AC  
                           l9650 0338                             l9642 0328  
                           l9634 0318                             l9626 030A  
                           l9618 02FA                             l8674 1C0C  
                           l9386 1CB8                             l8860 0E8A  
                           l8852 1518                             l8836 14DA  
                           l8780 0B66                             l8916 122C  
                           l9556 0D82                             l9548 0D6E  
                           l7972 225A                             l9644 032C  
                           l9636 031C                             l9652 033E  
                           l9732 00A6                             l9708 0052  
                           l8758 10BE                             l8846 1502  
                           l8598 1146                             l8934 126A  
                           l9558 0D8E                             l9478 138C  
                           l9646 0330                             l9638 0320  
                           l7968 1838                             l8872 0EC8  
                           l8864 0E9E                             l8960 1632  
                           l8944 15F8                             l9648 0334  
                           l9592 02A0                             l8962 1636  
                           l8786 0B84                             l8778 0B5E  
                           l9690 0016                             l8882 1A5A  
                           l9826 018C                             l8868 0EB4  
                           l8956 162E                             l8796 0BC6  
                           l9596 02A8                             l9588 0298  
                           l9764 0116                             l9748 00E0  
                           l8884 1A64                             l9860 01C6  
                           l9836 019E                             l9846 01B6  
                           l9862 01CC                             l9870 0204  
                           l9848 01BA                             l9864 01F6  
                           l9778 0136                             l9698 0026  
                           l9876 0216                             l9888 0246  
                           u2300 0F82                             _LATA 000F83  
                           u2230 2270                             _LATB 000F84  
                           _LATC 000F85                             _LATD 000F86  
                           _LATE 000F87                             u2180 185A  
                           u2340 0618                             u2405 0684  
                           u2190 1866                             u2182 185C  
                           u2510 118C                             u3230 0012  
                           u2407 0686                             u2192 1868  
                           u2450 1138                             u2370 0670  
                           _T2PR 000FBC                             u2355 065E  
                           u2460 113E                             u2357 0660  
                           u2390 067A                             u2534 1AF0  
                           u2535 1AEC                             u1920 1484  
                           _T4PR 000FB6                             u2740 0EAA  
                           u2900 1C30                             u1950 181C  
                           u2590 1F2E                             u2750 0ED4  
                           u2814 1668                             u2815 1664  
                           u2840 0FD6                             u2824 0FAE  
                           u2825 0FAA                             u3707 168C  
                           _PMD0 000EE1                             u3717 13A0  
                           _PMD1 000EE2                             u2870 0FFA  
                           _PMD2 000EE3                             u3807 18D6  
                           u3727 13AE                             _PMD3 000EE4  
                           _PMD4 000EE5                             u3817 2128  
                           u3737 13E0                             _PMD5 000EE6  
                           u1995 1C84                             u3827 1BCA  
                           u3747 079A                             u1996 1C86  
                           u3837 1746                             u3757 1878  
                           u3847 18FC                             u3767 1888  
                           u3857 1920                             u3777 1D40  
                           u3697 1990                             u3787 14CE  
                           u3797 0EEE                             _TMR2 000FBB  
                           _TMR4 000FB5    __size_of_eusartmdb_Initialize 0016  
                    _totalvendsm FFEE                             _WPUA 000F10  
                           _WPUB 000F18                             _WPUC 000F20  
                           _WPUD 000F25                             _WPUE 000F2D  
                  _EUSART1_Write 2258                    __CFG_FCMEN$ON 000000  
                           _cash 0023                             _dest 009F  
                           _main 0144                    ?_EUSART1_Read 0037  
                _TMR0_StartTimer 22CA                    ?_mdb_transmit 0000  
                           indf2 000FDF                             fsr2l 000FD9  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                  _timer5ReloadVal 00A8  
           __end_of_chanresetmsg FEB6                       _Clear_cred 16FC  
                _TMR3_Initialize 1D9E         disable_channel@errormask 003E  
         __size_of_enter_service 00A2                    __CFG_CSWEN$ON 000000  
                   ___param_bank 000000                  ?_displ_nochange 0000  
                  __CFG_SCANE$ON 000000                      _switch_read 1852  
                 ??_displ_credit 0050        __size_of_DATAEE_WriteByte 003A  
             vend_nosense@chanel 003C                   ??_displ_lflags 0046  
        __end_of_TMR0_Initialize 1F60                   ??_displ_nendis 0045  
                 ??_displ_sflags 0047   __size_of_OSCILLATOR_Initialize 0018  
                 ??_displ_noteer 0045                    ?_Read_NVstore 0039  
  __end_of_OSCILLATOR_Initialize 2198                            ?_main 0037  
                __end_of___lbdiv 1C4E                    __CFG_WDTE$OFF 000000  
                          _T1CLK 000FD2                            _T1CON 000FCF  
                          _T3CLK 000FCC                            _T2CON 000FBD  
                          _LATA6 007C1E                            _T3CON 000FC9  
                          _LATA7 007C1F                            _CMOUT 000F3D  
                          _T5CLK 000FC6                            _T4CON 000FB7  
                          _T2HLT 000FBE                            _T5CON 000FC3  
                __end_of___ltdiv 14C4                            _T4HLT 000FB8  
                 __CFG_DEBUG$OFF 000000                  __end_of___ltmod 1852  
                          _T2TMR 000FBB                            _T2RST 000FC0  
                          _T4TMR 000FB5                            _T4RST 000FBA  
         __end_of_DAC1_SetOutput 22AA              price_check@savechan 0047  
                          _OSCEN 000EDC           __size_of_Write_NVstore 0032  
                          _TMR0H 000FD4                            _TMR1H 000FCE  
                __end_of_cc_poll FC29                            _TMR0L 000FD3  
                          _TMR1L 000FCD                            _TMR3H 000FC8  
                          _TMR3L 000FC7                            _TMR5H 000FC2  
                          _TMR5L 000FC1                  ??_find_lowprice 0037  
                          _PORTA 000F8D                  __end_of_cc_test FC34  
                          _PORTD 000F90                  __end_of_cc_stop FC2F  
                          _TRISA 000F88                            _TRISB 000F89  
                          _TRISC 000F8A                            _TRISD 000F8B  
                          _TRISE 000F8C                  __end_of_chanmsg FF75  
                  ?_Read_Service 0037                  __end_of_cashint FC1C  
                __end_of_cashinv FC20               off_sens@senseflags 004C  
                          _Audit 03A4                    __CFG_WRT0$OFF 000000  
                _TMR4_Initialize 20E8                    __CFG_WRT1$OFF 000000  
                 __pidataCOMRAMh 22DB                    __CFG_WRT2$OFF 000000  
                 __pidataCOMRAMl 22DA                    __CFG_WRT3$OFF 000000  
                  __CFG_WRT4$OFF 000000                    __CFG_WRT5$OFF 000000  
                  __CFG_WRT6$OFF 000000                    __CFG_WRT7$OFF 000000  
                __end_of_enabled FFB4                   __CFG_EBTR0$OFF 000000  
              lcd_write@savelatd 0039                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                __end_of_credclr FB47                   __CFG_EBTR4$OFF 000000  
                __end_of_credmem FC22                   __CFG_EBTR5$OFF 000000  
                __end_of_credits FF69                   __CFG_EBTR6$OFF 000000  
                 __CFG_EBTR7$OFF 000000                  __end_of_clrline FF1B  
                __end_of_dispclr FC58                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                  __end_of_dispoff FC51  
                  __CFG_WRTD$OFF 000000                    ??_Hopper_coin 0054  
                          _bflag 0031                  _DATAEE_ReadByte 2168  
                 __CFG_EBTRB$OFF 000000                   ??_mdb_security 003C  
                __end_of_butindb 1BDA                  __end_of_dsphome FC56  
                          _line1 FC4D                            _line2 FFFD  
                          _line3 FC4C                            _line4 FC4B  
                          _count 005D                            _butin 18F2  
                __end_of_mastadd FC36                            _dummy 0080  
                __end_of_hopcoin FC10                  __end_of_inithop FBB0  
                          _vcash 009B                  __end_of_inscoin FE50  
                          _onmsg FFF9               __CFG_MCLRE$EXTMCLR 000000  
                __end_of_linkmsg FF81                  __end_of_second1 FC28  
                find_highprice@i 0038                   ?_EUSART1_Write 0037  
        __end_of_TMR1_Initialize 1E0A                    ?_Init_vendmem 0037  
                          tablat 000FF5                  __end_of_noteerr FEF1  
                   ?_hopper_test 0000                  __end_of_tenrand FFBD  
                __end_of_sensmsg FF8C                  __end_of_sensval FC14  
                __end_of_timemsg FF2D                  __end_of_servmsg FCAC  
                 ??_EUSART1_Read 0037                   ??_mdb_transmit 0038  
                          status 000FD8                ??_Update_coinsout 0041  
                ___lbdiv@divisor 0037                  ___lbdiv@counter 0039  
                 _Reset_settings 0E70                  _TMR5_Initialize 1D68  
   __end_of_CMP1_GetOutputStatus 2274                  __initialization 19CE  
              set_motortime@time 003F                 ??_find_highprice 0037  
                    butin@butons 0038       __end_of_EUSART1_Initialize 21DA  
                   __end_of_main 0278          __end_of_DAC1_Initialize 228E  
             __size_of_Chan_link 0050              displ_time@motortime 0051  
        __end_of_TMR2_Initialize 20B0                   ??_Read_NVstore 003E  
                         ??_main 005A                   find_lowprice@i 0038  
                  __activetblptr 000003                  ?_DAC1_SetOutput 0037  
           __end_of_enable_notes 1292                   ??_Read_Service 0037  
                    butindb@butt 003C                 __end_of_Sens_off 1528  
                         ?_Audit 0000                    _enter_service 0D3E  
        __end_of_TMR0_StartTimer 22CE                           ?_butin 0000  
                         _CM1NCH 000F3B                           _CM1PCH 000F3C  
                 ??_Init_vendmem 0039                           _ANSELA 000F11  
                         _ANSELB 000F19                           _ANSELC 000F21  
                         _ANSELD 000F26                           _ANSELE 000F2E  
                         _T0CON0 000FD5                           _T0CON1 000FD6  
                         _T1GATE 000FD1                           _T1GCON 000FD0  
                         _T3GATE 000FCB                           _T3GCON 000FCA  
                         _T5GATE 000FC5                           _T5GCON 000FC4  
                         _RC1REG 000F99                           _RC1STA 000F9D  
                         _RB5PPS 000EF4                           _ODCONA 000F0F  
                         _ODCONB 000F17                           _ODCONC 000F1F  
                         _RC6PPS 000EFD                           _ODCOND 000F24  
                         _ODCONE 000F2C         __size_of_credit_subtract 0034  
               credit_add@credit 0042          __end_of_TMR3_Initialize 1DD4  
                 __CFG_WDTCCS$SC 000000                           _TABLAT 000FF5  
                  ?_init_mdbdata 0037                 __end_of_cc_level FC2E  
                         _OSCFRQ 000EDE                           _NVMDAT 000F80  
               __end_of_cc_reset FC35                           _TX1REG 000F9A  
                         _TX1STA 000F9E              __end_of_Hopper_coin 0C96  
         __end_of_Reset_settings 0EFE            __size_of_Clear_Totals 002E  
                  _Write_NVstore 1E70               __size_of_Link_chan 008A  
               __end_of_cashoutv FC12                      ?_Clear_cred 0000  
                 __CFG_PWRTE$OFF 000000     __end_of_TMR0_Write16bitTimer 22A2  
        DAC1_SetOutput@inputData 0037             __size_of_get_channel 001C  
                 __CFG_XINST$OFF 000000                 __end_of_disabled FFAA  
           __size_of_lcd_dispadd 0018                 __end_of_auditmsg FBDA  
               __end_of_dispaddr FC57                 __end_of_lcd_init 13F0  
               __end_of_lcd_test 21C4                 __end_of_mdb_comm 06B0  
               __end_of_dispense 1D30                 __end_of_mdb_init 19CE  
               __end_of_mdb_poll 03A4             __end_of_credit_check 224A  
                         _cc_pay FC30                           _cc_pin FC2C  
                         ___wmul 1FE4                           _dacmsg FF4F  
                      ??___lbdiv 0038                     ?_price_check 0000  
                 __CFG_STVREN$ON 000000                           _change 0026  
              ?_Update_cashaudit 0037                       _Sensor_set 09C6  
                  displ_nendis@x 0046                     give_change@i 0045  
                      ??___ltdiv 003D                        ??___ltmod 003D  
                mdb_reset@i_3863 003E                           _credit 0024  
                         _lcdata 0030                           _clrmsg FF96  
                         _dispon FC58                           _mdb_on 22CE  
                         _dispsl FC4E                       _Vend_setup 0850  
                         _dispsr FC4F                           _ercode 002E  
               __end_of_emptymsg FFC6                           _hexnum 0096  
                         _hopadd FC36                 __end_of_off_sens 0B38  
               ?_TMR0_Initialize 0000          __end_of_TMR4_Initialize 2104  
                         _mcount 002C                           _offmsg FFF5  
                         clear_0 19F8                           clear_1 1A04  
             ??_Update_cashaudit 0041                 __end_of_hoperror FBEA  
               __end_of_hoppcoin FDD7                 __end_of_initnote FE75  
                         _nvcash 0090                           _noteen 0028  
                         _senset FBB0                           _pvcash 0035  
               __end_of_pay_coin 1198                           _slvadd 00A2  
               __end_of_nochange FE96             __size_of_displ_price 0022  
                         _stradd 002F                           _tvends 0088  
              read_busy@savelatd 0038                read_busy@savelate 0037  
        __end_of_DATAEE_ReadByte 2180                 __end_of_second_5 FC26  
                      ??_butindb 0039                   _PMD_Initialize 2104  
                 ?_enter_service 0000                 __end_of_notebits FC16  
               __end_of_pricemsg FBE2                 __end_of_notetest FBCD  
                   __mediumconst FA78                 __end_of_setnotes FCF1  
                         tblptrh 000FF7                           tblptrl 000FF6  
               __end_of_vendtest FB86                           tblptru 000FF8  
           Update_Hopcoin@newval 0053                  ??_EUSART1_Write 0037  
                   _Clear_Totals 1F04                 __end_of_totalmsg FFCE  
              __end_of_Chan_link 18F2                 ___lbdiv@dividend 0038  
           __size_of_give_change 0044                   ??_init_mdbdata 0037  
           __end_of_displ_credit 2030                 ?_TMR1_Initialize 0000  
        __end_of_TMR5_Initialize 1D9E             __end_of_displ_lflags 15EC  
              displ_lflags@lchan 0047                _SYSTEM_Initialize 1EA2  
                _disable_channel 1ADA             __end_of_displ_nendis 1E70  
            Vend_timeset@channel 0055                       __accesstop 0060  
        __end_of__initialization 1A0C             __end_of_displ_sflags 145A  
           __end_of_displ_noteer 2092       Reset_settings@chanlinkbits 0047  
                 ?_Write_NVstore 003B            __end_of_note_features FC44  
                _CMP1_Initialize 21EE                  ?_Reset_settings 0000  
             ?_SYSTEM_Initialize 0037            __end_of_theft_attempt FC38  
                   __pbssCOMRAMh 000B                    ___rparam_used 000001  
                   __pbssCOMRAMl 005F            Clear_Totals@eeaddress 003B  
                  __end_of_Audit 04C4       Reset_settings@chantimebits 0049  
            ??_SYSTEM_Initialize 0039                 ?_DAC1_Initialize 0000  
           __end_of_mdb_security 2214                 _DATAEE_WriteByte 1C4E  
                  __end_of_line1 FC4E                    __end_of_line2 FFFE  
                  __end_of_line3 FC4D                    __end_of_line4 FC4C  
                  __end_of_butin 193C                    __end_of_onmsg FFFD  
          __end_of_note_rejected FC39                 ?_TMR2_Initialize 0000  
             __size_of_cctalk_on 0004                 ___lbdiv@quotient 003A  
          __end_of_note_security FC49           __end_of_PMD_Initialize 2120  
           __end_of_EUSART1_Read 2226             __end_of_mdb_transmit 2258  
                     _cc_countrq FC2F                __end_of_Link_chan 0F88  
                   _chanresetmsg FE96                          ??_Audit 0050  
            __size_of_Clear_cred 0058                    update_vends@x 003B  
           _CMP1_GetOutputStatus 2266                   Write_NVstore@i 0040  
             __size_of_displ_hex 00A8            __end_of_set_motortime 17FE  
                    _Hopper_coin 0BEE                 ?_TMR0_StartTimer 0037  
             __size_of_lcd_write 002C                          ??_butin 0037  
      __end_of_SYSTEM_Initialize 1ED4               __size_of_mdb_reset 0042  
             __size_of_mdb_noten 002C               __size_of_mdb_waitr 0006  
             __size_of_mdb_waitx 0006                    ?_Reset_hopper 0037  
                     __pbssBANK0 0060              displ_hex@hexnumsave 004C  
               ?_TMR3_Initialize 0000             __end_of_Read_NVstore 1F04  
           displ_price@vendprice 0050                 ??_displ_nochange 0045  
                  _chan1linkbits FC0C             __size_of_hopper_test 0014  
                     _cctalk_off 22D6                    _chan2linkbits FC0A  
             __size_of_read_busy 0042             __end_of_Read_Service 2138  
              ??_credit_subtract 003B                    _chan3linkbits FC08  
                      ?_Sens_off 0000                    _chan4linkbits FC06  
        __size_of_TMR0_StopTimer 0004                     ?_switch_read 0000  
                        ?___wmul 0037                    _chan5linkbits FC04  
                    ?_Sensor_set 0000     __end_of_eusartmdb_Initialize 21AE  
                    ?_Vend_setup 0000                    _chan6linkbits FC02  
          __size_of_enable_notes 007A                          ?_mdb_on 0000  
                        _CM1CON0 000F39                          _CM1CON1 000F3A  
           __end_of_Init_vendmem 130A                    _chan7linkbits FC00  
               ?_TMR4_Initialize 0000                  ?_PMD_Initialize 0000  
                  _chan8linkbits FBFE                  ??_enter_service 0058  
             __size_of_set_price 00B6               __size_of_set_notes 00E4  
          __end_of_vend_dispense 100E               __size_of_price_set 0056  
               ?_DATAEE_ReadByte 0037               __size_of_vend_init 0090  
          displ_nendis@note2disp 0045                       _credit_add 1BDA  
              __end_of_cc_adpoll FC2A                       _lcd_clockE 2274  
                     _lcd_clockH 22B2                       _lcd_clockL 22AA  
              __end_of_cc_enable FC33                          _SP1BRGH 000F9C  
                        _SP1BRGL 000F9B                       _lcdaddress 00A3  
                        _OSCCON1 000ED8                          _OSCCON3 000EDA  
                _Update_coinsout 1B1A          __end_of_disable_channel 1B1A  
                        _TBLPTRH 000FF7             _TMR0_Write16bitTimer 2298  
              __end_of_chan1time FBFC                          _TBLPTRL 000FF6  
                        _TBLPTRU 000FF8                __end_of_chan2time FBFA  
          ?_CMP1_GetOutputStatus 0037                __end_of_chan3time FBF8  
              __end_of_chan4time FBF6                  off_sens@chanbit 004B  
              __end_of_chan5time FBF4                __end_of_chan6time FBF2  
                        _NVMADRH 000F7F                  off_sens@channel 004A  
                        _NVMADRL 000F7E                       _jammed_err FC3E  
              __end_of_chan7time FBF0                          _OSCTUNE 000EDD  
              __end_of_chan8time FBEE                          _NVMCON2 000F82  
              __end_of_cc_newpin FC2C                __end_of_cc_serial FC2B  
                     _displ_code 04C4                          _PPSLOCK 000EA0  
                     _displ_note 20B0                       _displ_sens 1528  
                     _displ_time 16A2          __end_of_CMP1_Initialize 2202  
                 ??_Reset_hopper 0037                __end_of_cc_status FC32  
                     _lcd_string 1198                       _dispcursor FC53  
                     _lcd_writeC 193C                        ?_lcd_init 0000  
                  ?_Vend_timeset 0000                    ?_Vend_settime 0000  
                      ?_lcd_test 0000                        ?_dispense 0000  
                      ?_mdb_comm 0039                        ?_mdb_init 0000  
                     _dispshleft FC51                       _dispnormal FC54  
                      ?_mdb_poll 0000                  ??_Write_NVstore 0040  
                     _mdb_unlock 0794                __end_of_chanlinkm FDA4  
              __end_of_cashinmsg FF96                 ?_TMR5_Initialize 0000  
              __end_of_cctalk_on 22D6             DATAEE_WriteByte@bAdd 0037  
                      ?_off_sens 0000                   displ_hex@value 0044  
             give_change@paycash 0044            __size_of_credit_check 0012  
                      ?_pay_coin 0000                 hopper_pay@change 0043  
                   _enable_notes 1218                    ?_note_disable 0037  
                        __Hparam 0000                __end_of_clockdate FBE8  
                 dispense@chanel 0045                          __Lparam 0000  
                     ??_Sens_off 004D       __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
              __end_of_creditclr FF4F                   mdb_comm@mcount 0039  
              __end_of_displ_hex 0D3E                __end_of_dispfunc1 FC5C  
              __end_of_dispfunc2 FC5B                __end_of_dispfunc3 FC5A  
                        ___lbdiv 1C14                __end_of_lcd_write 1FE4  
              __end_of_fiftyrand FFE6                  __size_of___wmul 0026  
                 mdb_comm@slvadd 003A                          ___ltdiv 145A  
              __end_of_mdb_reset 1A98                __end_of_mdb_noten 1F8C  
                        ___ltmod 17FE                __end_of_mdb_waitr 22C0  
               ??_DAC1_SetOutput 0037                __end_of_mdb_waitx 22C6  
                        _cc_poll FC28                          _cc_test FC33  
                        _cc_stop FC2E                  __size_of_mdb_on 0004  
                        _dbcount 0016                 set_price@channel 0054  
                        _channel 001A                          __pcinit 19CE  
                        _chanmsg FF69                          _cashint FC1A  
           __end_of_init_mdbdata 2072                          _cashinv FC1E  
           __size_of_price_check 0144                          __ramtop 0F00  
                        _chkbyte 002A                       _hopercount 0001  
                        _enabled FFAA                       _errorflags 00A1  
                        __ptext0 0144                          __ptext1 0DE0  
                        __ptext2 1986                          __ptext3 2202  
                        __ptext4 1A56                          __ptext5 2198  
                        __ptext6 1C88                          __ptext7 1CC0  
                        __ptext8 22A2                          __ptext9 0000  
                        _credclr FB1D                          _credmem FC20  
                        _credits FF5C                          _command 009D  
                        _clrline FF06                          _dispclr FC57  
                        _dispoff FC50                          _mdbdata 0060  
                        _lcdfunc 00A5                          _lcdline 00A4  
                      _T1CONbits 000FCF                       _hopper_pay 15EC  
                        _butindb 1B9A                          _dsphome FC55  
          _OSCILLATOR_Initialize 2180                        _T2CONbits 000FBD  
                        _mastadd FC35                          _hopcoin FC0E  
               set_price@buttons 0053                          _buttons 0022  
                        _inithop FB9C                        _T3CONbits 000FC9  
                        _inscoin FE29                          _linkmsg FF75  
                      _CMOUTbits 000F3D                __end_of_read_busy 1ADA  
                        _second1 FC26                        _T4CONbits 000FB7  
          ?_TMR0_Write16bitTimer 0037               _EUSART1_Initialize 21C4  
       ??_PIN_MANAGER_Initialize 0037                        _T2HLTbits 000FBE  
          __size_of_displ_credit 0026                        _T5CONbits 000FC3  
                        _nobytes 009E            __end_of_find_lowprice 1CC0  
                        _senschk 0019                          _noteerr FED5  
          __size_of_displ_lflags 0060                          _tenrand FFB4  
                        _notenum 005E                          _sensmsg FF81  
                        _sensval FC12                          _senspos 001F  
                      _T4HLTbits 000FB8            __size_of_displ_nendis 0032  
                        _pnvcash 0032                          _venderr 0018  
                        _timemsg FF1B                          _servmsg FC5C  
          __size_of_displ_sflags 006A                   ??_Vend_timeset 0052  
                 ??_Vend_settime 0056            __size_of_displ_noteer 0020  
     __size_of_SYSTEM_Initialize 0032                     _credit_check 2238  
                     ??_lcd_init 0041                       ??_lcd_test 0040  
                     ??_dispense 0044                       ??_mdb_comm 003A  
                     ??_mdb_init 003F             end_of_initialization 1A0C  
              __end_of_secondadd FC24                       ??_mdb_poll 003C  
                      _T2RSTbits 000FC0              __size_of_Sensor_set 00BA  
            ?_EUSART1_Initialize 0037              __size_of_Vend_setup 00BC  
                      _T4RSTbits 000FBA                       ??_off_sens 0048  
                  __pdataCOMRAMh 005E                    __pdataCOMRAMl 0001  
              __end_of_note_poll FC48                __end_of_motimemsg FAF0  
              __end_of_set_price 0BEE                __end_of_set_notes 0794  
        __size_of_Update_Hopcoin 0084                __end_of_note_type FC47  
                  ?_vend_nosense 0000                __end_of_price_set 17AA  
                     _save_notes 2226                __end_of_just_busy FC41  
                     ??_pay_coin 0039                      ?_cctalk_off 0037  
                 ??_note_disable 003C                __end_of_priceexit FB9C  
              __end_of_nosentime FBEC                __end_of_sensoffms FB1D  
              __end_of_setimemsg FE29                     ??_Clear_cred 0045  
              __end_of_vend_init 0E70           price_check@chanlinkbit 0049  
          __size_of_mdb_security 0012                 ___ltdiv@dividend 0037  
              __end_of_rom_error FC40                __end_of_vendtimem FE00  
              __end_of_vendsetup FD34                __end_of_vendstore FC1E  
                     _note_reset FC4A                       _sens_error FC41  
                     _note_setup FC49                          postinc0 000FEE  
                        postinc2 000FDE            __size_of_EUSART1_Read 0012  
                     _motr_error FC42            __size_of_mdb_transmit 000E  
                     _just_reset FC3D                    Read_NVstore@i 003E  
                     _pricesetm2 FD34                       _sensoffmsg FEB6  
           ??_EUSART1_Initialize 0037                       _pricestore FC18  
          __CFG_WDTCPS$WDTCPS_31 000000         Init_vendmem@chanlinkbits 0039  
                   _displ_credit 200A          __end_of_Update_coinsout 1B5A  
                   _displ_lflags 158C                     _displ_nendis 1E3E  
                      _PORTBbits 000F8E                       _venderrors FC16  
               displ_code@ercode 0042                     _displ_sflags 13F0  
                     _vendispmsg FEF1                     _displ_noteer 2072  
                     _settimemsg FB47                displ_sens@dmsgpos 0050  
                    ?_credit_add 0000               displ_lflags@chanel 0046  
                    ?_lcd_clockE 0000                      ?_lcd_clockH 0000  
                    ?_lcd_clockL 0000           ??_CMP1_GetOutputStatus 0037  
           Vend_timeset@chantime 0054                 ?_disable_channel 0000  
               ___ltdiv@quotient 003D            __size_of_Read_NVstore 0030  
             __end_of_Clear_cred 1754                      ?_displ_code 0037  
      __size_of_Update_cashaudit 0084                      ?_displ_note 0045  
                    ?_displ_sens 0050                      ?_displ_time 0050  
              displ_sens@smsgpos 0051                      ?_lcd_string 0040  
                    ?_lcd_writeC 0000              EUSART1_Write@txData 0037  
               ?_CMP1_Initialize 0037                 ??_Reset_settings 0045  
               __CFG_FEXTOSC$OFF 000000         __end_of_DATAEE_WriteByte 1C88  
                   _mdb_security 2202     TMR0_Write16bitTimer@timerVal 0037  
                    ?_mdb_unlock 0000             _eusartmdb_Initialize 2198  
          __size_of_Read_Service 0018                displ_time@channel 0050  
                  ??_get_channel 0037                get_channel@butons 0037  
                 ??_vend_nosense 003A                        _Chan_link 18A2  
                   _EUSART1_Read 2214              __end_of_cashbox_err FC3C  
                   _mdb_transmit 224A                    ??_lcd_dispadd 003B  
                     displ_hex@i 004F              __end_of_chanlinkmsg FAB6  
            set_motortime@chanel 003D            __size_of_Init_vendmem 0078  
           _timer0ReloadVal16bit 00A6                   _TMR0_StopTimer 22C6  
                __pcstackCOMRAMh 0037                  __pcstackCOMRAMl 0000  
        Update_coinsout@coinsout 0041                    ?_update_vends 0000  
                  ??_displ_price 0050             __end_of_Reset_hopper 1D68  
             mdb_transmit@txbyte 0038                       _twentyrand FFE6  
                 __end_of_cc_pay FC31                   __end_of_cc_pin FC2D  
             price_check@savebut 0048                   __end_of___wmul 200A  
                 __end_of_dacmsg FF5C             __size_of_switch_read 0050  
                 __end_of_clrmsg FFA0                   __end_of_dispon FC59  
                 __end_of_mdb_on 22D2                   __end_of_dispsl FC4F  
                 __end_of_dispsr FC50                     _Read_NVstore 1ED4  
               displ_credit@cash 0050                   __end_of_hopadd FC37  
         ?_OSCILLATOR_Initialize 0000                   __end_of_offmsg FFF9  
                    ?_hopper_pay 0000                   __end_of_senset FBBF  
         ??_TMR0_Write16bitTimer 0039          __size_of_find_highprice 0038  
            __size_of_cctalk_off 0004              start_initialization 19CE  
                   _Read_Service 2120                    ??_give_change 0044  
       __size_of_TMR0_Initialize 002E  __size_of_PIN_MANAGER_Initialize 0076  
                   ?_Hopper_coin 0000               update_vends@chanel 003C  
                      _Link_chan 0EFE                  _credit_subtract 1E0A  
        Update_cashaudit@addcash 0041            ?_eusartmdb_Initialize 0000  
          __end_of_EUSART1_Write 2266                     _Init_vendmem 1292  
                     ?_Chan_link 0000                      ?_save_notes 0000  
            DATAEE_ReadByte@bAdd 0037                    Init_vendmem@i 003D  
         __end_of_TMR0_StopTimer 22CA              __size_of_credit_add 003A  
               __CFG_LPBOREN$OFF 000000              __size_of_lcd_clockE 000E  
            __size_of_lcd_clockH 0008              __size_of_lcd_clockL 0008  
       __size_of_TMR1_Initialize 0036            __size_of_init_mdbdata 0020  
                 ??_update_vends 003B              __end_of_get_channel 20E8  
               ??_PMD_Initialize 0037                         ??___wmul 003B  
                   ??_Sensor_set 0052              __size_of_displ_code 0106  
            __end_of_lcd_dispadd 2168             __end_of_Vend_timeset 09C6  
           __end_of_Vend_settime 1B9A                __size_of_Sens_off 0064  
            __size_of_displ_note 001C              __size_of_displ_sens 0064  
                   ??_Vend_setup 0056              __size_of_displ_time 005A  
                       ??_mdb_on 0037              __size_of_lcd_string 0080  
            __size_of_lcd_writeC 004A                 ?_Update_coinsout 0000  
            __size_of_mdb_unlock 00BC           displ_sflags@senseflags 0047  
       __size_of_DAC1_Initialize 000C              __end_of_displ_price 2052  
           __end_of_note_disable 2298                 dispense@sensmask 0044  
       __size_of_TMR2_Initialize 001E              __end_of_dispshright FC53  
                     ?_Link_chan 0000                    butindb@butval 003B  
                      _cc_adpoll FC29                      _cashbox_err FC3B  
                 set_motortime@i 003E                      __pnvCOMRAMh 005D  
                      _cc_enable FC32             __end_of_note_removed FC3D  
                    _chanlinkmsg FA79                        _chan1time FBFA  
                  ??_hopper_test 0044            credit_subtract@credit 003B  
           __end_of_note_stacker FC45                        _chan2time FBF8  
                      _chan3time FBF6                        _chan4time FBF4  
                      _chan5time FBF2                        _chan6time FBF0  
                      _chan7time FBEE                        _chan8time FBEC  
                      _cc_newpin FC2B             init_mdbdata@initdata 0037  
                      _cc_serial FC2A               __end_of_Sensor_set 0A80  
                   _init_mdbdata 2052                __size_of_lcd_init 0070  
            __end_of_give_change 1A56                __size_of_lcd_test 0016  
             __end_of_Vend_setup 090C                __size_of_mdb_comm 00E6  
              __size_of_dispense 0038                        _cc_status FC31  
              __size_of_mdb_init 0048                   _Update_Hopcoin 1092  
              __size_of_mdb_poll 012C                        __pnvBANK0 00A6  
       __size_of_TMR0_StartTimer 0004                        _chanlink1 000003  
                      _chanlink2 000004                        _chanlink3 000005  
                      _chanlink4 000006                        _chanlink5 000007  
                      _chanlink6 000008                        _chanlink7 000009  
                      _chanlink8 00000A                        _chanlinkm FD6D  
                ?_TMR0_StopTimer 0037                        _cashinmsg FF8C  
            __size_of_hopper_pay 005C                __size_of_off_sens 00B8  
                      _cctalk_on 22D2           _PIN_MANAGER_Initialize 130A  
              __size_of_pay_coin 0082         __size_of_TMR3_Initialize 0036  
                  __pmediumconst FA78                        __ptext100 1EA2  
                      __ptext101 1D68                         ?___lbdiv 0037  
                      __ptext110 21C4                        __ptext102 20E8  
                      __ptext111 2282                        __ptext103 1D9E  
                      __ptext112 21EE                        __ptext104 2092  
                      __ptext105 1DD4                        __ptext106 1F32  
                      __ptext107 2104                        __ptext108 130A  
                      __ptext109 2180                 Link_chan@channel 0049  
                       ?___ltdiv 0037                        _clockdate FBE2  
                       ?___ltmod 0037           __size_of_set_motortime 0054  
               __CFG_PPS1WAY$OFF 000000                        _creditclr FF3F  
                       _DAC1CON0 000F33                         _DAC1CON1 000F34  
                      _displ_hex 0C96                        _dispfunc1 FC5B  
                      _dispfunc2 FC5A                        _dispfunc3 FC59  
                      _lcd_write 1FB8               Hopper_coin@coinval 0056  
                      _fiftyrand FFDE                        _highprice 001E  
                      _mdb_reset 1A56                        _mdb_noten 1F60  
                      _mdb_waitr 22BA                        _mdb_waitx 22C0  
                       _BAUD1CON 000F9F             __end_of_vend_nosense 16A2  
        __end_of_credit_subtract 1E3E                         ?_butindb 0000  
          __end_of_enter_service 0DE0              __size_of_save_notes 0012  
                 __size_of_Audit 0120                        _mdbtxbyte 00A0  
       __size_of_TMR4_Initialize 001C                 _Update_cashaudit 100E  
                 _acept_disabled FC3A           ??_eusartmdb_Initialize 0037  
                 __size_of_butin 004A                         _T2CLKCON 000FBF  
       __size_of_DATAEE_ReadByte 0018                        _read_busy 1A98  
                       _T4CLKCON 000FB9                        _errormask 001B  
         __end_of_Update_Hopcoin 1116                 ___ltmod@dividend 0037  
          lcd_dispadd@lcdaddress 003B                ??_TMR0_Initialize 0037  
                 ___wmul@product 003B            __end_of_Write_NVstore 1EA2  
                       _LATAbits 000F83                      _get_channel 20CC  
                       _LATCbits 000F85                      ??_Chan_link 004B  
                      _secondadd FC22            lcd_dispadd@lcdatasave 003C  
                   ??_cctalk_off 0037                    _note_features FC43  
                    _lcd_dispadd 2150           __size_of_vend_dispense 0086  
            __CFG_BORV$VBOR_2P45 000000                    _theft_attempt FC37  
                     ?_cctalk_on 0000            __size_of_Reset_hopper 0038  
             __end_of_cc_countrq FC30              __end_of_hopper_test 21EE  
                       _PIR0bits 000ECA                  ___ltdiv@divisor 003A  
                       _PIR3bits 000ECD                         _PIR4bits 000ECE  
                       _PIR7bits 000ED1                  ___ltdiv@counter 0040  
                      _note_poll FC47                        _motimemsg FAB6  
                      _set_price 0B38                        _set_notes 06B0  
       __size_of_TMR5_Initialize 0036                        _note_type FC46  
                      _price_set 1754                        _just_busy FC40  
                      _priceexit FB86                        _nosentime FBEA  
                      _sensoffms FAF0                    ??_price_check 0046  
                      _pricevend 000B                        _setimemsg FE00  
                      _vend_init 0DE0                        _sensorval 0020  
                      _rom_error FC3F                      _displ_price 2030  
                      _vendprice 0021                        _vendtimem FDD7  
                      _vendsetup FCF1          __size_of_displ_nochange 0018  
                      _vendstore FC1C                    _note_rejected FC38  
              ??_TMR1_Initialize 0037                       ?_displ_hex 0041  
             Link_chan@linkflags 004A                       ?_lcd_write 0000  
              ___wmul@multiplier 0037                    _note_security FC48  
            __end_of_hundredrand FFDE                       ?_mdb_reset 0000  
                     ?_mdb_noten 0000                      _dispshright FC52  
                     ?_mdb_waitr 0000                       ?_mdb_waitx 0037  
                 _find_highprice 1CC0                     ??_credit_add 0042  
                   ??_lcd_clockE 0037                     ??_lcd_clockH 0037  
                   ??_lcd_clockL 0037           Write_NVstore@storesize 003F  
                      mdb_comm@i 003B           __end_of_acept_disabled FC3B  
             __end_of_cctalk_off 22DA            DATAEE_WriteByte@bData 0039  
                   ??_displ_code 0040                      _give_change 1A12  
                displ_hex@hexnum 0041                    ?_Clear_Totals 0037  
                   ??_displ_note 0047                     ??_displ_sens 0051  
                   ??_displ_time 0051                      ??_Link_chan 0048  
           __end_of_update_vends 1FB8                     ??_lcd_string 0043  
                   ??_lcd_writeC 003D                       ?_read_busy 0000  
                  _set_motortime 17AA                ??_DAC1_Initialize 0037  
                   _Reset_hopper 1D30                     ??_mdb_unlock 0039  
              ?_DATAEE_WriteByte 0037                  ?_Update_Hopcoin 0050  
           __size_of_Hopper_coin 00A8                ??_TMR2_Initialize 0037  
             ??_DATAEE_WriteByte 003A              lcd_string@lcdstring 0040  
          __size_of_Vend_timeset 00BA            __size_of_Vend_settime 0040  
                       __Hrparam 0000                 Sensor_set@dacpos 0054  
                       _Sens_off 14C4                         __Lrparam 0000  
             __end_of_credit_add 1C14                       ?_set_price 0000  
             __CFG_BOREN$SBORDIS 000000                       ?_set_notes 0000  
             __end_of_lcd_clockE 2282                       ?_price_set 0000  
             __end_of_lcd_clockH 22BA               __end_of_lcd_clockL 22B2  
         __size_of_find_lowprice 0038                       ?_vend_init 0000  
        ??_OSCILLATOR_Initialize 0037               Read_Service@senval 0037  
             __end_of_jammed_err FC3F                ??_TMR0_StartTimer 0037  
             __end_of_displ_code 05CA                 __size_of___lbdiv 003A  
             __end_of_displ_note 20CC               __end_of_displ_sens 158C  
             __end_of_displ_time 16FC      __size_of_EUSART1_Initialize 0016  
               __size_of___ltdiv 006A            __size_of_note_disable 000A  
               __size_of___ltmod 0054               __end_of_lcd_string 1218  
             __end_of_dispcursor FC54               __end_of_lcd_writeC 1986  
         __end_of_find_highprice 1CF8                   _invalid_escrow FC39  
            __end_of_note_escrow FC46               __end_of_dispshleft FC52  
             __end_of_dispnormal FC55                ??_TMR3_Initialize 0037  
             __end_of_mdb_unlock 0850                     ??_hopper_pay 0042  
                       _cc_level FC2D          Update_Hopcoin@direction 0050  
            __end_of_price_check 0144                         _cc_reset FC34  
                  _vend_dispense 0F88                 ?_credit_subtract 0037  
                    _dspposition 002D                       _T0CON0bits 000FD5  
               __size_of_butindb 0040                         _chanmask 001C  
                       _cctflags 005F                         _cashoutv FC10  
                 ??_Clear_Totals 003B          __size_of_DAC1_SetOutput 0008  
  __size_of_CMP1_GetOutputStatus 000E                         __ptext10 228E  
                       __ptext11 1F60                         __ptext20 17AA  
                       __ptext12 1A12              __end_of_pricesetmsg FF3F  
                       __ptext21 1FE4                         __ptext13 1E0A  
                     _T1GCONbits 000FD0                         __ptext30 224A  
                       __ptext22 2298                         __ptext14 1BDA  
                       __ptext31 22C0                         __ptext23 22C6  
                       __ptext15 100E                         __ptext40 1218  
                       __ptext32 2258                         __ptext24 22CA  
                       __ptext16 1C14                         __ptext41 2226  
                       __ptext33 22CE                         __ptext25 1ADA  
                       __ptext17 1CF8                         __ptext50 1116  
                       __ptext42 1E3E                         __ptext34 2052  
                       __ptext26 1F8C                         __ptext18 1648  
                       __ptext51 1852                         __ptext43 20B0  
                       __ptext35 2214                         __ptext27 0278  
                       __ptext19 0F88                         __ptext60 16A2  
                       __ptext52 1D30                         __ptext44 1754  
                       __ptext36 1380                         __ptext28 05CA  
                       __ptext61 14C4                         __ptext53 22D2  
                       __ptext45 0B38                         __ptext37 21AE  
                       __ptext29 22BA                         __ptext70 2120  
                       __ptext62 0A80                         __ptext54 22D6  
                       __ptext46 2030                         __ptext38 0D3E  
                       __ptext71 09C6                         __ptext63 13F0  
                       __ptext55 1B1A                         __ptext47 0794  
                       __ptext39 06B0                         __ptext80 18F2  
                       __ptext72 1528                         __ptext64 0E70  
                       __ptext56 1E70                         __ptext48 21DA  
                       __ptext81 1ED4                         __ptext73 0BEE  
                       __ptext65 1292                         __ptext57 0850  
                       __ptext49 15EC                         __ptext90 2150  
                       __ptext82 2266                         __ptext74 1B9A  
                       __ptext66 1F04                         __ptext58 1B5A  
                       __ptext91 1FB8                         __ptext83 2072  
                       __ptext75 1092                         __ptext67 18A2  
                       __ptext59 090C                         __ptext92 1A98  
                       __ptext84 04C4                         __ptext76 16FC  
                       __ptext68 0EFE                         __ptext93 22AA  
                       __ptext85 2138                         __ptext77 1C4E  
                       __ptext69 158C                         __ptext94 22B2  
                       __ptext86 200A                         __ptext78 03A4  
                       __ptext95 2274                         __ptext87 1198  
                       __ptext79 20CC                         __ptext96 17FE  
                       __ptext88 0C96                         __ptext97 145A  
                       __ptext89 193C                         __ptext98 2238  
                       __ptext99 2168                         _disabled FFA0  
                 ?_set_motortime 0000              __end_of_sensorflags FBFE  
                       _auditmsg FBCD                         _dispaddr FC56  
                       _lcd_init 1380                         _lcd_test 21AE  
                       _dispense 1CF8                         _mdb_comm 05CA  
                       _mdb_init 1986                     _Vend_timeset 090C  
                   _Vend_settime 1B5A                         _mdb_poll 0278  
                       _mdbflags 0029                       _T3GCONbits 000FCA  
    DATAEE_WriteByte@GIEBitValue 003A                      _hopper_test 21DA  
                       _emptymsg FFBD            __end_of_chan1linkbits FC0E  
              ??_TMR4_Initialize 0037                         _off_sens 0A80  
                  __size_of_main 0134                       _T5GCONbits 000FC4  
       __size_of_disable_channel 0040                         _hoperror FBE8  
                   ??_save_notes 003B                         _hoppcoin FDA4  
                       _initnote FE50            __end_of_chan2linkbits FC0C  
                       _hpserial 0093                         _pay_coin 1116  
                       _nochange FE75                  ___ltmod@divisor 003A  
              ??_DATAEE_ReadByte 0039             __CFG_WDTCWS$WDTCWS_7 000000  
          __end_of_chan3linkbits FC0A         __size_of_CMP1_Initialize 0014  
                       _second_5 FC24                  ___ltmod@counter 003D  
                    ??_cctalk_on 0037                     _note_disable 228E  
          __end_of_chan4linkbits FC08               __end_of_hopper_pay 1648  
                     _RC1STAbits 000F9D                         _vcashout 0099  
                       _notebits FC14                         _notebyte 002B  
                       _pricemsg FBDA            __end_of_chan5linkbits FC06  
                       _lowprice 001D                         _notetest FBBF  
                  ??_switch_read 0037                         _venflags 0013  
                       _setnotes FCAC                    init_mdbdata@i 0038  
                       _vendtest FB6D                      _hundredrand FFD6  
          __end_of_chan6linkbits FC04           __end_of_invalid_escrow FC3A  
          __size_of_vend_nosense 005A                         _outcoins 0025  
          __end_of_chan7linkbits FC02                     _note_removed FC3C  
          Write_NVstore@storeadd 003B            Read_NVstore@storesize 003D  
          Write_NVstore@storemem 003D                         _totalmsg FFC6  
                   _note_stacker FC44            __end_of_chan8linkbits FC00  
                ?_find_highprice 0000                      ??_displ_hex 0044  
                    ??_lcd_write 0039                ??_TMR5_Initialize 0037  
                    ??_mdb_reset 003C                      ??_mdb_noten 003C  
                 ?_vend_dispense 0000                      ??_mdb_waitr 0037  
                    ??_mdb_waitx 0037                       _INTCONbits 000FF2  
                    _NVMCON1bits 000F81               __end_of_save_notes 2238  
                   price_check@i 004A    __size_of_TMR0_Write16bitTimer 000A  
                  _find_lowprice 1C88                      ??_read_busy 0037  
            vend_dispense@chanel 0043               __end_of_note_reset FC4B  
                 _twohundredrand FFCE               __end_of_sens_error FC42  
             __end_of_note_setup FC4A                 ??_TMR0_StopTimer 0037  
             __end_of_motr_error FC43               __end_of_just_reset FC3E  
             __end_of_pricesetm2 FD6D               __end_of_sensoffmsg FED5  
        ?_PIN_MANAGER_Initialize 0037               __end_of_pricestore FC1A  
              __CFG_CLKOUTEN$OFF 000000                    ?_enable_notes 0000  
                   _vend_nosense 1648                      _PPSLOCKbits 000EA0  
             __end_of_venderrors FC18               __end_of_vendispmsg FF06  
            __end_of_totalvendsm FFF5               __end_of_settimemsg FB6D  
        __size_of_Reset_settings 008E              displ_sflags@chanbit 0046  
                    _note_escrow FC45                      ??_set_price 0051  
                    ??_set_notes 004A                      ??_price_set 0055  
       __end_of_Update_cashaudit 1092             Read_NVstore@storeadd 0039  
                    ??_vend_init 0045             Read_NVstore@storemem 003B  
                    _noteen_byte 0027                      _price_check 0000  
                 _displ_nochange 2138                lcd_string@lcdline 0042  
         __size_of_EUSART1_Write 000E             displ_note@notestring 0045  
                     Audit@vends 0050                       _RX1PPSbits 000EB5  
                    _pricesetmsg FF2D              __end_of_switch_read 18A2  
                     _RX2PPSbits 000E8D            __size_of_update_vends 002C  
                    _sensorflags FBFC                lcd_test@character 0040  
                _TMR0_Initialize 1F32                  ??_set_motortime 003D  
             displ_sflags@chanel 0045                   ?_find_lowprice 0000  
           Init_vendmem@chanlink 003B           __end_of_twohundredrand FFD6  
       __size_of_Update_coinsout 0040                    ?_credit_check 0000  
                     _TX1STAbits 000F9E   __end_of_PIN_MANAGER_Initialize 1380  
            enable_notes@notenum 0049                     ?_get_channel 0000  
             __end_of_twentyrand FFEE                   ??_enable_notes 0047  
                   ?_lcd_dispadd 0000                  _TMR1_Initialize 1DD4  
           displ_lflags@linkflgs 0045  
